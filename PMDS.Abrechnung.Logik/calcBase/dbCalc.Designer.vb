'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dbCalc"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dbCalc
    Inherits Global.System.Data.DataSet
    
    Private tableAbwesenheiten As AbwesenheitenDataTable
    
    Private tableAufenthalte As AufenthalteDataTable
    
    Private tableKlient As KlientDataTable
    
    Private tableKostenträger As KostenträgerDataTable
    
    Private tableLeistungen As LeistungenDataTable
    
    Private tableMonate As MonateDataTable
    
    Private tableMWStBasen As MWStBasenDataTable
    
    Private tableTagesleistungen As TagesleistungenDataTable
    
    Private tableZahler As ZahlerDataTable
    
    Private tableTage As TageDataTable
    
    Private tableKostenKostenträger As KostenKostenträgerDataTable
    
    Private tablebookings As bookingsDataTable
    
    Private relationMonate_Tage As Global.System.Data.DataRelation
    
    Private relationKlient_Abwesenheiten As Global.System.Data.DataRelation
    
    Private relationLeistungen_Tagesleistungen As Global.System.Data.DataRelation
    
    Private relationKlient_Kostenträger As Global.System.Data.DataRelation
    
    Private relationLeistungen_Zahler As Global.System.Data.DataRelation
    
    Private relationKostenträger_Zahler As Global.System.Data.DataRelation
    
    Private relationKostenträger_Rechnungszeilen As Global.System.Data.DataRelation
    
    Private relationKostenträger_MWStBasen As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Abwesenheiten")) Is Nothing) Then
                MyBase.Tables.Add(New AbwesenheitenDataTable(ds.Tables("Abwesenheiten")))
            End If
            If (Not (ds.Tables("Aufenthalte")) Is Nothing) Then
                MyBase.Tables.Add(New AufenthalteDataTable(ds.Tables("Aufenthalte")))
            End If
            If (Not (ds.Tables("Klient")) Is Nothing) Then
                MyBase.Tables.Add(New KlientDataTable(ds.Tables("Klient")))
            End If
            If (Not (ds.Tables("Kostenträger")) Is Nothing) Then
                MyBase.Tables.Add(New KostenträgerDataTable(ds.Tables("Kostenträger")))
            End If
            If (Not (ds.Tables("Leistungen")) Is Nothing) Then
                MyBase.Tables.Add(New LeistungenDataTable(ds.Tables("Leistungen")))
            End If
            If (Not (ds.Tables("Monate")) Is Nothing) Then
                MyBase.Tables.Add(New MonateDataTable(ds.Tables("Monate")))
            End If
            If (Not (ds.Tables("MWStBasen")) Is Nothing) Then
                MyBase.Tables.Add(New MWStBasenDataTable(ds.Tables("MWStBasen")))
            End If
            If (Not (ds.Tables("Tagesleistungen")) Is Nothing) Then
                MyBase.Tables.Add(New TagesleistungenDataTable(ds.Tables("Tagesleistungen")))
            End If
            If (Not (ds.Tables("Zahler")) Is Nothing) Then
                MyBase.Tables.Add(New ZahlerDataTable(ds.Tables("Zahler")))
            End If
            If (Not (ds.Tables("Tage")) Is Nothing) Then
                MyBase.Tables.Add(New TageDataTable(ds.Tables("Tage")))
            End If
            If (Not (ds.Tables("KostenKostenträger")) Is Nothing) Then
                MyBase.Tables.Add(New KostenKostenträgerDataTable(ds.Tables("KostenKostenträger")))
            End If
            If (Not (ds.Tables("bookings")) Is Nothing) Then
                MyBase.Tables.Add(New bookingsDataTable(ds.Tables("bookings")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Abwesenheiten() As AbwesenheitenDataTable
        Get
            Return Me.tableAbwesenheiten
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Aufenthalte() As AufenthalteDataTable
        Get
            Return Me.tableAufenthalte
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Klient() As KlientDataTable
        Get
            Return Me.tableKlient
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Kostenträger() As KostenträgerDataTable
        Get
            Return Me.tableKostenträger
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Leistungen() As LeistungenDataTable
        Get
            Return Me.tableLeistungen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Monate() As MonateDataTable
        Get
            Return Me.tableMonate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MWStBasen() As MWStBasenDataTable
        Get
            Return Me.tableMWStBasen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tagesleistungen() As TagesleistungenDataTable
        Get
            Return Me.tableTagesleistungen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Zahler() As ZahlerDataTable
        Get
            Return Me.tableZahler
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tage() As TageDataTable
        Get
            Return Me.tableTage
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KostenKostenträger() As KostenKostenträgerDataTable
        Get
            Return Me.tableKostenKostenträger
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property bookings() As bookingsDataTable
        Get
            Return Me.tablebookings
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dbCalc = CType(MyBase.Clone,dbCalc)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Abwesenheiten")) Is Nothing) Then
                MyBase.Tables.Add(New AbwesenheitenDataTable(ds.Tables("Abwesenheiten")))
            End If
            If (Not (ds.Tables("Aufenthalte")) Is Nothing) Then
                MyBase.Tables.Add(New AufenthalteDataTable(ds.Tables("Aufenthalte")))
            End If
            If (Not (ds.Tables("Klient")) Is Nothing) Then
                MyBase.Tables.Add(New KlientDataTable(ds.Tables("Klient")))
            End If
            If (Not (ds.Tables("Kostenträger")) Is Nothing) Then
                MyBase.Tables.Add(New KostenträgerDataTable(ds.Tables("Kostenträger")))
            End If
            If (Not (ds.Tables("Leistungen")) Is Nothing) Then
                MyBase.Tables.Add(New LeistungenDataTable(ds.Tables("Leistungen")))
            End If
            If (Not (ds.Tables("Monate")) Is Nothing) Then
                MyBase.Tables.Add(New MonateDataTable(ds.Tables("Monate")))
            End If
            If (Not (ds.Tables("MWStBasen")) Is Nothing) Then
                MyBase.Tables.Add(New MWStBasenDataTable(ds.Tables("MWStBasen")))
            End If
            If (Not (ds.Tables("Tagesleistungen")) Is Nothing) Then
                MyBase.Tables.Add(New TagesleistungenDataTable(ds.Tables("Tagesleistungen")))
            End If
            If (Not (ds.Tables("Zahler")) Is Nothing) Then
                MyBase.Tables.Add(New ZahlerDataTable(ds.Tables("Zahler")))
            End If
            If (Not (ds.Tables("Tage")) Is Nothing) Then
                MyBase.Tables.Add(New TageDataTable(ds.Tables("Tage")))
            End If
            If (Not (ds.Tables("KostenKostenträger")) Is Nothing) Then
                MyBase.Tables.Add(New KostenKostenträgerDataTable(ds.Tables("KostenKostenträger")))
            End If
            If (Not (ds.Tables("bookings")) Is Nothing) Then
                MyBase.Tables.Add(New bookingsDataTable(ds.Tables("bookings")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAbwesenheiten = CType(MyBase.Tables("Abwesenheiten"),AbwesenheitenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAbwesenheiten) Is Nothing) Then
                Me.tableAbwesenheiten.InitVars
            End If
        End If
        Me.tableAufenthalte = CType(MyBase.Tables("Aufenthalte"),AufenthalteDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAufenthalte) Is Nothing) Then
                Me.tableAufenthalte.InitVars
            End If
        End If
        Me.tableKlient = CType(MyBase.Tables("Klient"),KlientDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKlient) Is Nothing) Then
                Me.tableKlient.InitVars
            End If
        End If
        Me.tableKostenträger = CType(MyBase.Tables("Kostenträger"),KostenträgerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKostenträger) Is Nothing) Then
                Me.tableKostenträger.InitVars
            End If
        End If
        Me.tableLeistungen = CType(MyBase.Tables("Leistungen"),LeistungenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLeistungen) Is Nothing) Then
                Me.tableLeistungen.InitVars
            End If
        End If
        Me.tableMonate = CType(MyBase.Tables("Monate"),MonateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMonate) Is Nothing) Then
                Me.tableMonate.InitVars
            End If
        End If
        Me.tableMWStBasen = CType(MyBase.Tables("MWStBasen"),MWStBasenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMWStBasen) Is Nothing) Then
                Me.tableMWStBasen.InitVars
            End If
        End If
        Me.tableTagesleistungen = CType(MyBase.Tables("Tagesleistungen"),TagesleistungenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTagesleistungen) Is Nothing) Then
                Me.tableTagesleistungen.InitVars
            End If
        End If
        Me.tableZahler = CType(MyBase.Tables("Zahler"),ZahlerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableZahler) Is Nothing) Then
                Me.tableZahler.InitVars
            End If
        End If
        Me.tableTage = CType(MyBase.Tables("Tage"),TageDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTage) Is Nothing) Then
                Me.tableTage.InitVars
            End If
        End If
        Me.tableKostenKostenträger = CType(MyBase.Tables("KostenKostenträger"),KostenKostenträgerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKostenKostenträger) Is Nothing) Then
                Me.tableKostenKostenträger.InitVars
            End If
        End If
        Me.tablebookings = CType(MyBase.Tables("bookings"),bookingsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablebookings) Is Nothing) Then
                Me.tablebookings.InitVars
            End If
        End If
        Me.relationMonate_Tage = Me.Relations("Monate_Tage")
        Me.relationKlient_Abwesenheiten = Me.Relations("Klient_Abwesenheiten")
        Me.relationLeistungen_Tagesleistungen = Me.Relations("Leistungen_Tagesleistungen")
        Me.relationKlient_Kostenträger = Me.Relations("Klient_Kostenträger")
        Me.relationLeistungen_Zahler = Me.Relations("Leistungen_Zahler")
        Me.relationKostenträger_Zahler = Me.Relations("Kostenträger_Zahler")
        Me.relationKostenträger_Rechnungszeilen = Me.Relations("Kostenträger_Rechnungszeilen")
        Me.relationKostenträger_MWStBasen = Me.Relations("Kostenträger_MWStBasen")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dbCalc"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dbCalc.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAbwesenheiten = New AbwesenheitenDataTable()
        MyBase.Tables.Add(Me.tableAbwesenheiten)
        Me.tableAufenthalte = New AufenthalteDataTable()
        MyBase.Tables.Add(Me.tableAufenthalte)
        Me.tableKlient = New KlientDataTable()
        MyBase.Tables.Add(Me.tableKlient)
        Me.tableKostenträger = New KostenträgerDataTable()
        MyBase.Tables.Add(Me.tableKostenträger)
        Me.tableLeistungen = New LeistungenDataTable()
        MyBase.Tables.Add(Me.tableLeistungen)
        Me.tableMonate = New MonateDataTable()
        MyBase.Tables.Add(Me.tableMonate)
        Me.tableMWStBasen = New MWStBasenDataTable()
        MyBase.Tables.Add(Me.tableMWStBasen)
        Me.tableTagesleistungen = New TagesleistungenDataTable()
        MyBase.Tables.Add(Me.tableTagesleistungen)
        Me.tableZahler = New ZahlerDataTable()
        MyBase.Tables.Add(Me.tableZahler)
        Me.tableTage = New TageDataTable()
        MyBase.Tables.Add(Me.tableTage)
        Me.tableKostenKostenträger = New KostenKostenträgerDataTable()
        MyBase.Tables.Add(Me.tableKostenKostenträger)
        Me.tablebookings = New bookingsDataTable()
        MyBase.Tables.Add(Me.tablebookings)
        Me.relationMonate_Tage = New Global.System.Data.DataRelation("Monate_Tage", New Global.System.Data.DataColumn() {Me.tableMonate.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTage.IDMonatColumn}, false)
        Me.Relations.Add(Me.relationMonate_Tage)
        Me.relationKlient_Abwesenheiten = New Global.System.Data.DataRelation("Klient_Abwesenheiten", New Global.System.Data.DataColumn() {Me.tableKlient.IDColumn}, New Global.System.Data.DataColumn() {Me.tableAbwesenheiten.IDKlientColumn}, false)
        Me.Relations.Add(Me.relationKlient_Abwesenheiten)
        Me.relationLeistungen_Tagesleistungen = New Global.System.Data.DataRelation("Leistungen_Tagesleistungen", New Global.System.Data.DataColumn() {Me.tableLeistungen.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTagesleistungen.IDLeistungColumn}, false)
        Me.Relations.Add(Me.relationLeistungen_Tagesleistungen)
        Me.relationKlient_Kostenträger = New Global.System.Data.DataRelation("Klient_Kostenträger", New Global.System.Data.DataColumn() {Me.tableKlient.IDColumn}, New Global.System.Data.DataColumn() {Me.tableKostenträger.IDKlientColumn}, false)
        Me.Relations.Add(Me.relationKlient_Kostenträger)
        Me.relationLeistungen_Zahler = New Global.System.Data.DataRelation("Leistungen_Zahler", New Global.System.Data.DataColumn() {Me.tableLeistungen.IDColumn}, New Global.System.Data.DataColumn() {Me.tableZahler.IDLeistungColumn}, false)
        Me.Relations.Add(Me.relationLeistungen_Zahler)
        Me.relationKostenträger_Zahler = New Global.System.Data.DataRelation("Kostenträger_Zahler", New Global.System.Data.DataColumn() {Me.tableKostenträger.IDKostInternColumn}, New Global.System.Data.DataColumn() {Me.tableZahler.IDKostInternColumn}, false)
        Me.Relations.Add(Me.relationKostenträger_Zahler)
        Me.relationKostenträger_Rechnungszeilen = New Global.System.Data.DataRelation("Kostenträger_Rechnungszeilen", New Global.System.Data.DataColumn() {Me.tableKostenträger.IDKostInternColumn}, New Global.System.Data.DataColumn() {Me.tableKostenKostenträger.IDKostInternColumn}, false)
        Me.Relations.Add(Me.relationKostenträger_Rechnungszeilen)
        Me.relationKostenträger_MWStBasen = New Global.System.Data.DataRelation("Kostenträger_MWStBasen", New Global.System.Data.DataColumn() {Me.tableKostenträger.IDKostInternColumn}, New Global.System.Data.DataColumn() {Me.tableMWStBasen.IDKostInternColumn}, false)
        Me.Relations.Add(Me.relationKostenträger_MWStBasen)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeAbwesenheiten() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeAufenthalte() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeKlient() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeKostenträger() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeLeistungen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMonate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMWStBasen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTagesleistungen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeZahler() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTage() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeKostenKostenträger() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializebookings() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dbCalc = New dbCalc()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub AbwesenheitenRowChangeEventHandler(ByVal sender As Object, ByVal e As AbwesenheitenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub AufenthalteRowChangeEventHandler(ByVal sender As Object, ByVal e As AufenthalteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub KlientRowChangeEventHandler(ByVal sender As Object, ByVal e As KlientRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub KostenträgerRowChangeEventHandler(ByVal sender As Object, ByVal e As KostenträgerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub LeistungenRowChangeEventHandler(ByVal sender As Object, ByVal e As LeistungenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MonateRowChangeEventHandler(ByVal sender As Object, ByVal e As MonateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MWStBasenRowChangeEventHandler(ByVal sender As Object, ByVal e As MWStBasenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TagesleistungenRowChangeEventHandler(ByVal sender As Object, ByVal e As TagesleistungenRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ZahlerRowChangeEventHandler(ByVal sender As Object, ByVal e As ZahlerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TageRowChangeEventHandler(ByVal sender As Object, ByVal e As TageRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub KostenKostenträgerRowChangeEventHandler(ByVal sender As Object, ByVal e As KostenKostenträgerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub bookingsRowChangeEventHandler(ByVal sender As Object, ByVal e As bookingsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AbwesenheitenDataTable
        Inherits Global.System.Data.TypedTableBase(Of AbwesenheitenRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIDKlient As Global.System.Data.DataColumn
        
        Private columnVon As Global.System.Data.DataColumn
        
        Private columnBis As Global.System.Data.DataColumn
        
        Private columnNummer As Global.System.Data.DataColumn
        
        Private columnGrund As Global.System.Data.DataColumn
        
        Private columnTageOhneKürzung As Global.System.Data.DataColumn
        
        Private columnKuerzungGrundleistungLetzterTag As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Abwesenheiten"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GrundColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrund
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TageOhneKürzungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTageOhneKürzung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KuerzungGrundleistungLetzterTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKuerzungGrundleistungLetzterTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AbwesenheitenRow
            Get
                Return CType(Me.Rows(index),AbwesenheitenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AbwesenheitenRowChanging As AbwesenheitenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AbwesenheitenRowChanged As AbwesenheitenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AbwesenheitenRowDeleting As AbwesenheitenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AbwesenheitenRowDeleted As AbwesenheitenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddAbwesenheitenRow(ByVal row As AbwesenheitenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddAbwesenheitenRow(ByVal ID As String, ByVal parentKlientRowByKlient_Abwesenheiten As KlientRow, ByVal Von As Date, ByVal Bis As Date, ByVal Nummer As Integer, ByVal Grund As String, ByVal TageOhneKürzung As Integer, ByVal KuerzungGrundleistungLetzterTag As Boolean) As AbwesenheitenRow
            Dim rowAbwesenheitenRow As AbwesenheitenRow = CType(Me.NewRow,AbwesenheitenRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, Von, Bis, Nummer, Grund, TageOhneKürzung, KuerzungGrundleistungLetzterTag}
            If (Not (parentKlientRowByKlient_Abwesenheiten) Is Nothing) Then
                columnValuesArray(1) = parentKlientRowByKlient_Abwesenheiten(0)
            End If
            rowAbwesenheitenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAbwesenheitenRow)
            Return rowAbwesenheitenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AbwesenheitenDataTable = CType(MyBase.Clone,AbwesenheitenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AbwesenheitenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIDKlient = MyBase.Columns("IDKlient")
            Me.columnVon = MyBase.Columns("Von")
            Me.columnBis = MyBase.Columns("Bis")
            Me.columnNummer = MyBase.Columns("Nummer")
            Me.columnGrund = MyBase.Columns("Grund")
            Me.columnTageOhneKürzung = MyBase.Columns("TageOhneKürzung")
            Me.columnKuerzungGrundleistungLetzterTag = MyBase.Columns("KuerzungGrundleistungLetzterTag")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIDKlient = New Global.System.Data.DataColumn("IDKlient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlient)
            Me.columnVon = New Global.System.Data.DataColumn("Von", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVon)
            Me.columnBis = New Global.System.Data.DataColumn("Bis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBis)
            Me.columnNummer = New Global.System.Data.DataColumn("Nummer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNummer)
            Me.columnGrund = New Global.System.Data.DataColumn("Grund", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrund)
            Me.columnTageOhneKürzung = New Global.System.Data.DataColumn("TageOhneKürzung", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTageOhneKürzung)
            Me.columnKuerzungGrundleistungLetzterTag = New Global.System.Data.DataColumn("KuerzungGrundleistungLetzterTag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKuerzungGrundleistungLetzterTag)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("AbwesenheitenKey1", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnIDKlient.AllowDBNull = false
            Me.columnVon.AllowDBNull = false
            Me.columnBis.AllowDBNull = false
            Me.columnNummer.AllowDBNull = false
            Me.columnGrund.AllowDBNull = false
            Me.columnTageOhneKürzung.AllowDBNull = false
            Me.columnKuerzungGrundleistungLetzterTag.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewAbwesenheitenRow() As AbwesenheitenRow
            Return CType(Me.NewRow,AbwesenheitenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AbwesenheitenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AbwesenheitenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AbwesenheitenRowChangedEvent) Is Nothing) Then
                RaiseEvent AbwesenheitenRowChanged(Me, New AbwesenheitenRowChangeEvent(CType(e.Row,AbwesenheitenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AbwesenheitenRowChangingEvent) Is Nothing) Then
                RaiseEvent AbwesenheitenRowChanging(Me, New AbwesenheitenRowChangeEvent(CType(e.Row,AbwesenheitenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AbwesenheitenRowDeletedEvent) Is Nothing) Then
                RaiseEvent AbwesenheitenRowDeleted(Me, New AbwesenheitenRowChangeEvent(CType(e.Row,AbwesenheitenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AbwesenheitenRowDeletingEvent) Is Nothing) Then
                RaiseEvent AbwesenheitenRowDeleting(Me, New AbwesenheitenRowChangeEvent(CType(e.Row,AbwesenheitenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveAbwesenheitenRow(ByVal row As AbwesenheitenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AbwesenheitenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AufenthalteDataTable
        Inherits Global.System.Data.TypedTableBase(Of AufenthalteRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnVon As Global.System.Data.DataColumn
        
        Private columnBis As Global.System.Data.DataColumn
        
        Private columnNummer As Global.System.Data.DataColumn
        
        Private columnGSBG As Global.System.Data.DataColumn
        
        Private columnIDKlient As Global.System.Data.DataColumn
        
        Private columnIDKlinik As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Aufenthalte"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GSBGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSBG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlinikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlinik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AufenthalteRow
            Get
                Return CType(Me.Rows(index),AufenthalteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AufenthalteRowChanging As AufenthalteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AufenthalteRowChanged As AufenthalteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AufenthalteRowDeleting As AufenthalteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AufenthalteRowDeleted As AufenthalteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddAufenthalteRow(ByVal row As AufenthalteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddAufenthalteRow(ByVal ID As String, ByVal Von As Date, ByVal Bis As Date, ByVal Nummer As Integer, ByVal GSBG As Double, ByVal IDKlient As String, ByVal IDKlinik As System.Guid) As AufenthalteRow
            Dim rowAufenthalteRow As AufenthalteRow = CType(Me.NewRow,AufenthalteRow)
            Dim columnValuesArray() As Object = New Object() {ID, Von, Bis, Nummer, GSBG, IDKlient, IDKlinik}
            rowAufenthalteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAufenthalteRow)
            Return rowAufenthalteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AufenthalteDataTable = CType(MyBase.Clone,AufenthalteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AufenthalteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnVon = MyBase.Columns("Von")
            Me.columnBis = MyBase.Columns("Bis")
            Me.columnNummer = MyBase.Columns("Nummer")
            Me.columnGSBG = MyBase.Columns("GSBG")
            Me.columnIDKlient = MyBase.Columns("IDKlient")
            Me.columnIDKlinik = MyBase.Columns("IDKlinik")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnVon = New Global.System.Data.DataColumn("Von", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVon)
            Me.columnBis = New Global.System.Data.DataColumn("Bis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBis)
            Me.columnNummer = New Global.System.Data.DataColumn("Nummer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNummer)
            Me.columnGSBG = New Global.System.Data.DataColumn("GSBG", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSBG)
            Me.columnIDKlient = New Global.System.Data.DataColumn("IDKlient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlient)
            Me.columnIDKlinik = New Global.System.Data.DataColumn("IDKlinik", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlinik)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("AufenthalteKey1", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnNummer.AllowDBNull = false
            Me.columnGSBG.AllowDBNull = false
            Me.columnIDKlient.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewAufenthalteRow() As AufenthalteRow
            Return CType(Me.NewRow,AufenthalteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AufenthalteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AufenthalteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AufenthalteRowChangedEvent) Is Nothing) Then
                RaiseEvent AufenthalteRowChanged(Me, New AufenthalteRowChangeEvent(CType(e.Row,AufenthalteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AufenthalteRowChangingEvent) Is Nothing) Then
                RaiseEvent AufenthalteRowChanging(Me, New AufenthalteRowChangeEvent(CType(e.Row,AufenthalteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AufenthalteRowDeletedEvent) Is Nothing) Then
                RaiseEvent AufenthalteRowDeleted(Me, New AufenthalteRowChangeEvent(CType(e.Row,AufenthalteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AufenthalteRowDeletingEvent) Is Nothing) Then
                RaiseEvent AufenthalteRowDeleting(Me, New AufenthalteRowChangeEvent(CType(e.Row,AufenthalteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveAufenthalteRow(ByVal row As AufenthalteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AufenthalteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KlientDataTable
        Inherits Global.System.Data.TypedTableBase(Of KlientRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnNachname As Global.System.Data.DataColumn
        
        Private columnVorname As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungJN As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungProzent As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungBetrag As Global.System.Data.DataColumn
        
        Private columncalcTyp As Global.System.Data.DataColumn
        
        Private columncalcRun As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnIDKlinik As Global.System.Data.DataColumn
        
        Private columnKlinikName As Global.System.Data.DataColumn
        
        Private columnKürzungLetzterTagAnwesenheit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Klient"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NachnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNachname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungProzentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungProzent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungBetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property calcTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalcTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property calcRunColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalcRun
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlinikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlinik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KlinikNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKlinikName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KürzungLetzterTagAnwesenheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKürzungLetzterTagAnwesenheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KlientRow
            Get
                Return CType(Me.Rows(index),KlientRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KlientRowChanging As KlientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KlientRowChanged As KlientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KlientRowDeleting As KlientRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KlientRowDeleted As KlientRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddKlientRow(ByVal row As KlientRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddKlientRow(ByVal ID As String, ByVal Nachname As String, ByVal Vorname As String, ByVal ZuschlagGrundleistungJN As Boolean, ByVal ZuschlagGrundleistungProzent As Integer, ByVal ZuschlagGrundleistungBetrag As Decimal, ByVal calcTyp As Integer, ByVal calcRun As Integer, ByVal Version As String, ByVal IDKlinik As System.Guid, ByVal KlinikName As String, ByVal KürzungLetzterTagAnwesenheit As Boolean) As KlientRow
            Dim rowKlientRow As KlientRow = CType(Me.NewRow,KlientRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nachname, Vorname, ZuschlagGrundleistungJN, ZuschlagGrundleistungProzent, ZuschlagGrundleistungBetrag, calcTyp, calcRun, Version, IDKlinik, KlinikName, KürzungLetzterTagAnwesenheit}
            rowKlientRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKlientRow)
            Return rowKlientRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KlientDataTable = CType(MyBase.Clone,KlientDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KlientDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnNachname = MyBase.Columns("Nachname")
            Me.columnVorname = MyBase.Columns("Vorname")
            Me.columnZuschlagGrundleistungJN = MyBase.Columns("ZuschlagGrundleistungJN")
            Me.columnZuschlagGrundleistungProzent = MyBase.Columns("ZuschlagGrundleistungProzent")
            Me.columnZuschlagGrundleistungBetrag = MyBase.Columns("ZuschlagGrundleistungBetrag")
            Me.columncalcTyp = MyBase.Columns("calcTyp")
            Me.columncalcRun = MyBase.Columns("calcRun")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnIDKlinik = MyBase.Columns("IDKlinik")
            Me.columnKlinikName = MyBase.Columns("KlinikName")
            Me.columnKürzungLetzterTagAnwesenheit = MyBase.Columns("KürzungLetzterTagAnwesenheit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnNachname = New Global.System.Data.DataColumn("Nachname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNachname)
            Me.columnVorname = New Global.System.Data.DataColumn("Vorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVorname)
            Me.columnZuschlagGrundleistungJN = New Global.System.Data.DataColumn("ZuschlagGrundleistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungJN)
            Me.columnZuschlagGrundleistungProzent = New Global.System.Data.DataColumn("ZuschlagGrundleistungProzent", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungProzent)
            Me.columnZuschlagGrundleistungBetrag = New Global.System.Data.DataColumn("ZuschlagGrundleistungBetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungBetrag)
            Me.columncalcTyp = New Global.System.Data.DataColumn("calcTyp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalcTyp)
            Me.columncalcRun = New Global.System.Data.DataColumn("calcRun", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalcRun)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnIDKlinik = New Global.System.Data.DataColumn("IDKlinik", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlinik)
            Me.columnKlinikName = New Global.System.Data.DataColumn("KlinikName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKlinikName)
            Me.columnKürzungLetzterTagAnwesenheit = New Global.System.Data.DataColumn("KürzungLetzterTagAnwesenheit", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKürzungLetzterTagAnwesenheit)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("KlientKey1", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnNachname.AllowDBNull = false
            Me.columnVorname.AllowDBNull = false
            Me.columnZuschlagGrundleistungJN.AllowDBNull = false
            Me.columnZuschlagGrundleistungProzent.AllowDBNull = false
            Me.columnZuschlagGrundleistungBetrag.AllowDBNull = false
            Me.columncalcTyp.AllowDBNull = false
            Me.columncalcRun.AllowDBNull = false
            Me.columnVersion.AllowDBNull = false
            Me.columnKlinikName.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewKlientRow() As KlientRow
            Return CType(Me.NewRow,KlientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KlientRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KlientRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KlientRowChangedEvent) Is Nothing) Then
                RaiseEvent KlientRowChanged(Me, New KlientRowChangeEvent(CType(e.Row,KlientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KlientRowChangingEvent) Is Nothing) Then
                RaiseEvent KlientRowChanging(Me, New KlientRowChangeEvent(CType(e.Row,KlientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KlientRowDeletedEvent) Is Nothing) Then
                RaiseEvent KlientRowDeleted(Me, New KlientRowChangeEvent(CType(e.Row,KlientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KlientRowDeletingEvent) Is Nothing) Then
                RaiseEvent KlientRowDeleting(Me, New KlientRowChangeEvent(CType(e.Row,KlientRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveKlientRow(ByVal row As KlientRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KlientDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KostenträgerDataTable
        Inherits Global.System.Data.TypedTableBase(Of KostenträgerRow)
        
        Private columnIDKostIntern As Global.System.Data.DataColumn
        
        Private columnIDKost As Global.System.Data.DataColumn
        
        Private columnFamName As Global.System.Data.DataColumn
        
        Private columnSammelabrechnungJN As Global.System.Data.DataColumn
        
        Private columnvon As Global.System.Data.DataColumn
        
        Private columnbis As Global.System.Data.DataColumn
        
        Private columnGrundleistungJN As Global.System.Data.DataColumn
        
        Private columnPeriodischeLeistungJN As Global.System.Data.DataColumn
        
        Private columnSonderleistungJN As Global.System.Data.DataColumn
        
        Private columnVorauszahlungJN As Global.System.Data.DataColumn
        
        Private columnRechnungJN As Global.System.Data.DataColumn
        
        Private columnRechnungTyp As Global.System.Data.DataColumn
        
        Private columnMaxBetragBrutto As Global.System.Data.DataColumn
        
        Private columnRestzahlerJN As Global.System.Data.DataColumn
        
        Private columnRang As Global.System.Data.DataColumn
        
        Private columnKlientenbezogenJN As Global.System.Data.DataColumn
        
        Private columnTransferzahlerJN As Global.System.Data.DataColumn
        
        Private columnZahlungsbetragNetto As Global.System.Data.DataColumn
        
        Private columnZahlungsbetragBrutto As Global.System.Data.DataColumn
        
        Private columnRundungsausgleich As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungJN As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungProzent As Global.System.Data.DataColumn
        
        Private columnZuschlagGrundleistungBetrag As Global.System.Data.DataColumn
        
        Private columnFreieBuchungBetragNetto As Global.System.Data.DataColumn
        
        Private columnIDKlient As Global.System.Data.DataColumn
        
        Private columnUeberweisungsbetrag As Global.System.Data.DataColumn
        
        Private columnRechnung As Global.System.Data.DataColumn
        
        Private columnsumNetto As Global.System.Data.DataColumn
        
        Private columnsumBrutto As Global.System.Data.DataColumn
        
        Private columnForderungBruttoAlt As Global.System.Data.DataColumn
        
        Private columnFIBU As Global.System.Data.DataColumn
        
        Private columnIDKlinik As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Kostenträger"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostInternColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostIntern
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FamNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SammelabrechnungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSammelabrechnungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property vonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property bisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GrundleistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrundleistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PeriodischeLeistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodischeLeistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SonderleistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSonderleistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VorauszahlungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVorauszahlungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RechnungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRechnungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RechnungTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRechnungTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxBetragBruttoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxBetragBrutto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RestzahlerJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRestzahlerJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KlientenbezogenJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKlientenbezogenJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransferzahlerJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferzahlerJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZahlungsbetragNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZahlungsbetragNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZahlungsbetragBruttoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZahlungsbetragBrutto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RundungsausgleichColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRundungsausgleich
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungProzentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungProzent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZuschlagGrundleistungBetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZuschlagGrundleistungBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FreieBuchungBetragNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreieBuchungBetragNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UeberweisungsbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUeberweisungsbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RechnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRechnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property sumNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsumNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property sumBruttoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsumBrutto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ForderungBruttoAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForderungBruttoAlt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FIBUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIBU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlinikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlinik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KostenträgerRow
            Get
                Return CType(Me.Rows(index),KostenträgerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenträgerRowChanging As KostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenträgerRowChanged As KostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenträgerRowDeleting As KostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenträgerRowDeleted As KostenträgerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddKostenträgerRow(ByVal row As KostenträgerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddKostenträgerRow( _
                    ByVal IDKostIntern As String,  _
                    ByVal IDKost As String,  _
                    ByVal FamName As String,  _
                    ByVal SammelabrechnungJN As Boolean,  _
                    ByVal von As Date,  _
                    ByVal bis As Date,  _
                    ByVal GrundleistungJN As Boolean,  _
                    ByVal PeriodischeLeistungJN As Boolean,  _
                    ByVal SonderleistungJN As Boolean,  _
                    ByVal VorauszahlungJN As Boolean,  _
                    ByVal RechnungJN As Boolean,  _
                    ByVal RechnungTyp As Integer,  _
                    ByVal MaxBetragBrutto As Decimal,  _
                    ByVal RestzahlerJN As Boolean,  _
                    ByVal Rang As Integer,  _
                    ByVal KlientenbezogenJN As Boolean,  _
                    ByVal TransferzahlerJN As Boolean,  _
                    ByVal ZahlungsbetragNetto As Decimal,  _
                    ByVal ZahlungsbetragBrutto As Decimal,  _
                    ByVal Rundungsausgleich As Decimal,  _
                    ByVal ZuschlagGrundleistungJN As Boolean,  _
                    ByVal ZuschlagGrundleistungProzent As Integer,  _
                    ByVal ZuschlagGrundleistungBetrag As Decimal,  _
                    ByVal FreieBuchungBetragNetto As Decimal,  _
                    ByVal parentKlientRowByKlient_Kostenträger As KlientRow,  _
                    ByVal Ueberweisungsbetrag As Decimal,  _
                    ByVal Rechnung As String,  _
                    ByVal sumNetto As Decimal,  _
                    ByVal sumBrutto As Decimal,  _
                    ByVal ForderungBruttoAlt As Decimal,  _
                    ByVal FIBU As String,  _
                    ByVal IDKlinik As System.Guid) As KostenträgerRow
            Dim rowKostenträgerRow As KostenträgerRow = CType(Me.NewRow,KostenträgerRow)
            Dim columnValuesArray() As Object = New Object() {IDKostIntern, IDKost, FamName, SammelabrechnungJN, von, bis, GrundleistungJN, PeriodischeLeistungJN, SonderleistungJN, VorauszahlungJN, RechnungJN, RechnungTyp, MaxBetragBrutto, RestzahlerJN, Rang, KlientenbezogenJN, TransferzahlerJN, ZahlungsbetragNetto, ZahlungsbetragBrutto, Rundungsausgleich, ZuschlagGrundleistungJN, ZuschlagGrundleistungProzent, ZuschlagGrundleistungBetrag, FreieBuchungBetragNetto, Nothing, Ueberweisungsbetrag, Rechnung, sumNetto, sumBrutto, ForderungBruttoAlt, FIBU, IDKlinik}
            If (Not (parentKlientRowByKlient_Kostenträger) Is Nothing) Then
                columnValuesArray(24) = parentKlientRowByKlient_Kostenträger(0)
            End If
            rowKostenträgerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKostenträgerRow)
            Return rowKostenträgerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByIDKostIntern(ByVal IDKostIntern As String) As KostenträgerRow
            Return CType(Me.Rows.Find(New Object() {IDKostIntern}),KostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KostenträgerDataTable = CType(MyBase.Clone,KostenträgerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KostenträgerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIDKostIntern = MyBase.Columns("IDKostIntern")
            Me.columnIDKost = MyBase.Columns("IDKost")
            Me.columnFamName = MyBase.Columns("FamName")
            Me.columnSammelabrechnungJN = MyBase.Columns("SammelabrechnungJN")
            Me.columnvon = MyBase.Columns("von")
            Me.columnbis = MyBase.Columns("bis")
            Me.columnGrundleistungJN = MyBase.Columns("GrundleistungJN")
            Me.columnPeriodischeLeistungJN = MyBase.Columns("PeriodischeLeistungJN")
            Me.columnSonderleistungJN = MyBase.Columns("SonderleistungJN")
            Me.columnVorauszahlungJN = MyBase.Columns("VorauszahlungJN")
            Me.columnRechnungJN = MyBase.Columns("RechnungJN")
            Me.columnRechnungTyp = MyBase.Columns("RechnungTyp")
            Me.columnMaxBetragBrutto = MyBase.Columns("MaxBetragBrutto")
            Me.columnRestzahlerJN = MyBase.Columns("RestzahlerJN")
            Me.columnRang = MyBase.Columns("Rang")
            Me.columnKlientenbezogenJN = MyBase.Columns("KlientenbezogenJN")
            Me.columnTransferzahlerJN = MyBase.Columns("TransferzahlerJN")
            Me.columnZahlungsbetragNetto = MyBase.Columns("ZahlungsbetragNetto")
            Me.columnZahlungsbetragBrutto = MyBase.Columns("ZahlungsbetragBrutto")
            Me.columnRundungsausgleich = MyBase.Columns("Rundungsausgleich")
            Me.columnZuschlagGrundleistungJN = MyBase.Columns("ZuschlagGrundleistungJN")
            Me.columnZuschlagGrundleistungProzent = MyBase.Columns("ZuschlagGrundleistungProzent")
            Me.columnZuschlagGrundleistungBetrag = MyBase.Columns("ZuschlagGrundleistungBetrag")
            Me.columnFreieBuchungBetragNetto = MyBase.Columns("FreieBuchungBetragNetto")
            Me.columnIDKlient = MyBase.Columns("IDKlient")
            Me.columnUeberweisungsbetrag = MyBase.Columns("Ueberweisungsbetrag")
            Me.columnRechnung = MyBase.Columns("Rechnung")
            Me.columnsumNetto = MyBase.Columns("sumNetto")
            Me.columnsumBrutto = MyBase.Columns("sumBrutto")
            Me.columnForderungBruttoAlt = MyBase.Columns("ForderungBruttoAlt")
            Me.columnFIBU = MyBase.Columns("FIBU")
            Me.columnIDKlinik = MyBase.Columns("IDKlinik")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIDKostIntern = New Global.System.Data.DataColumn("IDKostIntern", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostIntern)
            Me.columnIDKost = New Global.System.Data.DataColumn("IDKost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKost)
            Me.columnFamName = New Global.System.Data.DataColumn("FamName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamName)
            Me.columnSammelabrechnungJN = New Global.System.Data.DataColumn("SammelabrechnungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSammelabrechnungJN)
            Me.columnvon = New Global.System.Data.DataColumn("von", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvon)
            Me.columnbis = New Global.System.Data.DataColumn("bis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbis)
            Me.columnGrundleistungJN = New Global.System.Data.DataColumn("GrundleistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrundleistungJN)
            Me.columnPeriodischeLeistungJN = New Global.System.Data.DataColumn("PeriodischeLeistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodischeLeistungJN)
            Me.columnSonderleistungJN = New Global.System.Data.DataColumn("SonderleistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSonderleistungJN)
            Me.columnVorauszahlungJN = New Global.System.Data.DataColumn("VorauszahlungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVorauszahlungJN)
            Me.columnRechnungJN = New Global.System.Data.DataColumn("RechnungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRechnungJN)
            Me.columnRechnungTyp = New Global.System.Data.DataColumn("RechnungTyp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRechnungTyp)
            Me.columnMaxBetragBrutto = New Global.System.Data.DataColumn("MaxBetragBrutto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxBetragBrutto)
            Me.columnRestzahlerJN = New Global.System.Data.DataColumn("RestzahlerJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRestzahlerJN)
            Me.columnRang = New Global.System.Data.DataColumn("Rang", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRang)
            Me.columnKlientenbezogenJN = New Global.System.Data.DataColumn("KlientenbezogenJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKlientenbezogenJN)
            Me.columnTransferzahlerJN = New Global.System.Data.DataColumn("TransferzahlerJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferzahlerJN)
            Me.columnZahlungsbetragNetto = New Global.System.Data.DataColumn("ZahlungsbetragNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZahlungsbetragNetto)
            Me.columnZahlungsbetragBrutto = New Global.System.Data.DataColumn("ZahlungsbetragBrutto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZahlungsbetragBrutto)
            Me.columnRundungsausgleich = New Global.System.Data.DataColumn("Rundungsausgleich", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRundungsausgleich)
            Me.columnZuschlagGrundleistungJN = New Global.System.Data.DataColumn("ZuschlagGrundleistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungJN)
            Me.columnZuschlagGrundleistungProzent = New Global.System.Data.DataColumn("ZuschlagGrundleistungProzent", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungProzent)
            Me.columnZuschlagGrundleistungBetrag = New Global.System.Data.DataColumn("ZuschlagGrundleistungBetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZuschlagGrundleistungBetrag)
            Me.columnFreieBuchungBetragNetto = New Global.System.Data.DataColumn("FreieBuchungBetragNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreieBuchungBetragNetto)
            Me.columnIDKlient = New Global.System.Data.DataColumn("IDKlient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlient)
            Me.columnUeberweisungsbetrag = New Global.System.Data.DataColumn("Ueberweisungsbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUeberweisungsbetrag)
            Me.columnRechnung = New Global.System.Data.DataColumn("Rechnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRechnung)
            Me.columnsumNetto = New Global.System.Data.DataColumn("sumNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsumNetto)
            Me.columnsumBrutto = New Global.System.Data.DataColumn("sumBrutto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsumBrutto)
            Me.columnForderungBruttoAlt = New Global.System.Data.DataColumn("ForderungBruttoAlt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForderungBruttoAlt)
            Me.columnFIBU = New Global.System.Data.DataColumn("FIBU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIBU)
            Me.columnIDKlinik = New Global.System.Data.DataColumn("IDKlinik", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlinik)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDKostIntern}, true))
            Me.columnIDKostIntern.AllowDBNull = false
            Me.columnIDKostIntern.Unique = true
            Me.columnIDKost.AllowDBNull = false
            Me.columnFamName.AllowDBNull = false
            Me.columnSammelabrechnungJN.AllowDBNull = false
            Me.columnGrundleistungJN.AllowDBNull = false
            Me.columnPeriodischeLeistungJN.AllowDBNull = false
            Me.columnSonderleistungJN.AllowDBNull = false
            Me.columnVorauszahlungJN.AllowDBNull = false
            Me.columnRechnungJN.AllowDBNull = false
            Me.columnRechnungTyp.AllowDBNull = false
            Me.columnMaxBetragBrutto.AllowDBNull = false
            Me.columnRestzahlerJN.AllowDBNull = false
            Me.columnRang.AllowDBNull = false
            Me.columnKlientenbezogenJN.AllowDBNull = false
            Me.columnTransferzahlerJN.AllowDBNull = false
            Me.columnZahlungsbetragNetto.AllowDBNull = false
            Me.columnZahlungsbetragBrutto.AllowDBNull = false
            Me.columnRundungsausgleich.AllowDBNull = false
            Me.columnZuschlagGrundleistungJN.AllowDBNull = false
            Me.columnZuschlagGrundleistungProzent.AllowDBNull = false
            Me.columnZuschlagGrundleistungBetrag.AllowDBNull = false
            Me.columnFreieBuchungBetragNetto.AllowDBNull = false
            Me.columnUeberweisungsbetrag.AllowDBNull = false
            Me.columnUeberweisungsbetrag.DefaultValue = CType(0D,Decimal)
            Me.columnRechnung.AllowDBNull = false
            Me.columnRechnung.MaxLength = 1073741823
            Me.columnsumNetto.AllowDBNull = false
            Me.columnsumBrutto.AllowDBNull = false
            Me.columnForderungBruttoAlt.AllowDBNull = false
            Me.columnFIBU.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewKostenträgerRow() As KostenträgerRow
            Return CType(Me.NewRow,KostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KostenträgerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KostenträgerRowChangedEvent) Is Nothing) Then
                RaiseEvent KostenträgerRowChanged(Me, New KostenträgerRowChangeEvent(CType(e.Row,KostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KostenträgerRowChangingEvent) Is Nothing) Then
                RaiseEvent KostenträgerRowChanging(Me, New KostenträgerRowChangeEvent(CType(e.Row,KostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KostenträgerRowDeletedEvent) Is Nothing) Then
                RaiseEvent KostenträgerRowDeleted(Me, New KostenträgerRowChangeEvent(CType(e.Row,KostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KostenträgerRowDeletingEvent) Is Nothing) Then
                RaiseEvent KostenträgerRowDeleting(Me, New KostenträgerRowChangeEvent(CType(e.Row,KostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveKostenträgerRow(ByVal row As KostenträgerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KostenträgerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LeistungenDataTable
        Inherits Global.System.Data.TypedTableBase(Of LeistungenRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIDLeistungskatalog As Global.System.Data.DataColumn
        
        Private columnIDSonderleistung As Global.System.Data.DataColumn
        
        Private columnIDManBuch As Global.System.Data.DataColumn
        
        Private columnIDKostentraegerFrBuch As Global.System.Data.DataColumn
        
        Private columnLeistungBezeichnung As Global.System.Data.DataColumn
        
        Private columnVon As Global.System.Data.DataColumn
        
        Private columnBis As Global.System.Data.DataColumn
        
        Private columnMonatsleistungJN As Global.System.Data.DataColumn
        
        Private columnNummer As Global.System.Data.DataColumn
        
        Private columnLeistungsgruppe As Global.System.Data.DataColumn
        
        Private columnMonatspreisNetto As Global.System.Data.DataColumn
        
        Private columnTagespreisNetto As Global.System.Data.DataColumn
        
        Private columnTagespreisReduziertNetto As Global.System.Data.DataColumn
        
        Private columnMWStSatz As Global.System.Data.DataColumn
        
        Private columnZeitraumDetail As Global.System.Data.DataColumn
        
        Private columnOffenNetto As Global.System.Data.DataColumn
        
        Private columnAnzahl As Global.System.Data.DataColumn
        
        Private columnKosten As Global.System.Data.DataColumn
        
        Private columnFIBU As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Leistungen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungskatalogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistungskatalog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDSonderleistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSonderleistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDManBuchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDManBuch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostentraegerFrBuchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostentraegerFrBuch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LeistungBezeichnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeistungBezeichnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MonatsleistungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonatsleistungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LeistungsgruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeistungsgruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MonatspreisNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonatspreisNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagespreisNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagespreisNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagespreisReduziertNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagespreisReduziertNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStSatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStSatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ZeitraumDetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZeitraumDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OffenNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOffenNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnzahlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnzahl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KostenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKosten
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FIBUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIBU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LeistungenRow
            Get
                Return CType(Me.Rows(index),LeistungenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LeistungenRowChanging As LeistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LeistungenRowChanged As LeistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LeistungenRowDeleting As LeistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LeistungenRowDeleted As LeistungenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddLeistungenRow(ByVal row As LeistungenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddLeistungenRow( _
                    ByVal ID As String,  _
                    ByVal IDLeistungskatalog As String,  _
                    ByVal IDSonderleistung As String,  _
                    ByVal IDManBuch As String,  _
                    ByVal IDKostentraegerFrBuch As String,  _
                    ByVal LeistungBezeichnung As String,  _
                    ByVal Von As Date,  _
                    ByVal Bis As Date,  _
                    ByVal MonatsleistungJN As Boolean,  _
                    ByVal Nummer As Integer,  _
                    ByVal Leistungsgruppe As Integer,  _
                    ByVal MonatspreisNetto As Decimal,  _
                    ByVal TagespreisNetto As Decimal,  _
                    ByVal TagespreisReduziertNetto As Decimal,  _
                    ByVal MWStSatz As Integer,  _
                    ByVal ZeitraumDetail As String,  _
                    ByVal OffenNetto As Decimal,  _
                    ByVal Anzahl As Integer,  _
                    ByVal Kosten As Decimal,  _
                    ByVal FIBU As String) As LeistungenRow
            Dim rowLeistungenRow As LeistungenRow = CType(Me.NewRow,LeistungenRow)
            Dim columnValuesArray() As Object = New Object() {ID, IDLeistungskatalog, IDSonderleistung, IDManBuch, IDKostentraegerFrBuch, LeistungBezeichnung, Von, Bis, MonatsleistungJN, Nummer, Leistungsgruppe, MonatspreisNetto, TagespreisNetto, TagespreisReduziertNetto, MWStSatz, ZeitraumDetail, OffenNetto, Anzahl, Kosten, FIBU}
            rowLeistungenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLeistungenRow)
            Return rowLeistungenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As String) As LeistungenRow
            Return CType(Me.Rows.Find(New Object() {ID}),LeistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LeistungenDataTable = CType(MyBase.Clone,LeistungenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LeistungenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIDLeistungskatalog = MyBase.Columns("IDLeistungskatalog")
            Me.columnIDSonderleistung = MyBase.Columns("IDSonderleistung")
            Me.columnIDManBuch = MyBase.Columns("IDManBuch")
            Me.columnIDKostentraegerFrBuch = MyBase.Columns("IDKostentraegerFrBuch")
            Me.columnLeistungBezeichnung = MyBase.Columns("LeistungBezeichnung")
            Me.columnVon = MyBase.Columns("Von")
            Me.columnBis = MyBase.Columns("Bis")
            Me.columnMonatsleistungJN = MyBase.Columns("MonatsleistungJN")
            Me.columnNummer = MyBase.Columns("Nummer")
            Me.columnLeistungsgruppe = MyBase.Columns("Leistungsgruppe")
            Me.columnMonatspreisNetto = MyBase.Columns("MonatspreisNetto")
            Me.columnTagespreisNetto = MyBase.Columns("TagespreisNetto")
            Me.columnTagespreisReduziertNetto = MyBase.Columns("TagespreisReduziertNetto")
            Me.columnMWStSatz = MyBase.Columns("MWStSatz")
            Me.columnZeitraumDetail = MyBase.Columns("ZeitraumDetail")
            Me.columnOffenNetto = MyBase.Columns("OffenNetto")
            Me.columnAnzahl = MyBase.Columns("Anzahl")
            Me.columnKosten = MyBase.Columns("Kosten")
            Me.columnFIBU = MyBase.Columns("FIBU")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIDLeistungskatalog = New Global.System.Data.DataColumn("IDLeistungskatalog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistungskatalog)
            Me.columnIDSonderleistung = New Global.System.Data.DataColumn("IDSonderleistung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSonderleistung)
            Me.columnIDManBuch = New Global.System.Data.DataColumn("IDManBuch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDManBuch)
            Me.columnIDKostentraegerFrBuch = New Global.System.Data.DataColumn("IDKostentraegerFrBuch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostentraegerFrBuch)
            Me.columnLeistungBezeichnung = New Global.System.Data.DataColumn("LeistungBezeichnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeistungBezeichnung)
            Me.columnVon = New Global.System.Data.DataColumn("Von", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVon)
            Me.columnBis = New Global.System.Data.DataColumn("Bis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBis)
            Me.columnMonatsleistungJN = New Global.System.Data.DataColumn("MonatsleistungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonatsleistungJN)
            Me.columnNummer = New Global.System.Data.DataColumn("Nummer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNummer)
            Me.columnLeistungsgruppe = New Global.System.Data.DataColumn("Leistungsgruppe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeistungsgruppe)
            Me.columnMonatspreisNetto = New Global.System.Data.DataColumn("MonatspreisNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonatspreisNetto)
            Me.columnTagespreisNetto = New Global.System.Data.DataColumn("TagespreisNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagespreisNetto)
            Me.columnTagespreisReduziertNetto = New Global.System.Data.DataColumn("TagespreisReduziertNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagespreisReduziertNetto)
            Me.columnMWStSatz = New Global.System.Data.DataColumn("MWStSatz", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStSatz)
            Me.columnZeitraumDetail = New Global.System.Data.DataColumn("ZeitraumDetail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZeitraumDetail)
            Me.columnOffenNetto = New Global.System.Data.DataColumn("OffenNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOffenNetto)
            Me.columnAnzahl = New Global.System.Data.DataColumn("Anzahl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnzahl)
            Me.columnKosten = New Global.System.Data.DataColumn("Kosten", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKosten)
            Me.columnFIBU = New Global.System.Data.DataColumn("FIBU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIBU)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnIDLeistungskatalog.AllowDBNull = false
            Me.columnIDSonderleistung.AllowDBNull = false
            Me.columnIDManBuch.AllowDBNull = false
            Me.columnIDKostentraegerFrBuch.AllowDBNull = false
            Me.columnLeistungBezeichnung.AllowDBNull = false
            Me.columnMonatsleistungJN.AllowDBNull = false
            Me.columnNummer.AllowDBNull = false
            Me.columnLeistungsgruppe.AllowDBNull = false
            Me.columnMonatspreisNetto.AllowDBNull = false
            Me.columnTagespreisNetto.AllowDBNull = false
            Me.columnTagespreisReduziertNetto.AllowDBNull = false
            Me.columnMWStSatz.AllowDBNull = false
            Me.columnZeitraumDetail.AllowDBNull = false
            Me.columnOffenNetto.AllowDBNull = false
            Me.columnAnzahl.AllowDBNull = false
            Me.columnKosten.AllowDBNull = false
            Me.columnFIBU.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewLeistungenRow() As LeistungenRow
            Return CType(Me.NewRow,LeistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LeistungenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LeistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LeistungenRowChangedEvent) Is Nothing) Then
                RaiseEvent LeistungenRowChanged(Me, New LeistungenRowChangeEvent(CType(e.Row,LeistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LeistungenRowChangingEvent) Is Nothing) Then
                RaiseEvent LeistungenRowChanging(Me, New LeistungenRowChangeEvent(CType(e.Row,LeistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LeistungenRowDeletedEvent) Is Nothing) Then
                RaiseEvent LeistungenRowDeleted(Me, New LeistungenRowChangeEvent(CType(e.Row,LeistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LeistungenRowDeletingEvent) Is Nothing) Then
                RaiseEvent LeistungenRowDeleting(Me, New LeistungenRowChangeEvent(CType(e.Row,LeistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveLeistungenRow(ByVal row As LeistungenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LeistungenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MonateDataTable
        Inherits Global.System.Data.TypedTableBase(Of MonateRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnErster As Global.System.Data.DataColumn
        
        Private columnLetzter As Global.System.Data.DataColumn
        
        Private columnBeginn As Global.System.Data.DataColumn
        
        Private columnEnde As Global.System.Data.DataColumn
        
        Private columnRechDatum As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Monate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ErsterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErster
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LetzterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLetzter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeginnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeginn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EndeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RechDatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRechDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MonateRow
            Get
                Return CType(Me.Rows(index),MonateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MonateRowChanging As MonateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MonateRowChanged As MonateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MonateRowDeleting As MonateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MonateRowDeleted As MonateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMonateRow(ByVal row As MonateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMonateRow(ByVal ID As String, ByVal Erster As Integer, ByVal Letzter As Integer, ByVal Beginn As Date, ByVal Ende As Date, ByVal RechDatum As Date) As MonateRow
            Dim rowMonateRow As MonateRow = CType(Me.NewRow,MonateRow)
            Dim columnValuesArray() As Object = New Object() {ID, Erster, Letzter, Beginn, Ende, RechDatum}
            rowMonateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMonateRow)
            Return rowMonateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MonateDataTable = CType(MyBase.Clone,MonateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MonateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnErster = MyBase.Columns("Erster")
            Me.columnLetzter = MyBase.Columns("Letzter")
            Me.columnBeginn = MyBase.Columns("Beginn")
            Me.columnEnde = MyBase.Columns("Ende")
            Me.columnRechDatum = MyBase.Columns("RechDatum")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnErster = New Global.System.Data.DataColumn("Erster", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErster)
            Me.columnLetzter = New Global.System.Data.DataColumn("Letzter", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLetzter)
            Me.columnBeginn = New Global.System.Data.DataColumn("Beginn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeginn)
            Me.columnEnde = New Global.System.Data.DataColumn("Ende", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnde)
            Me.columnRechDatum = New Global.System.Data.DataColumn("RechDatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRechDatum)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint11", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnErster.AllowDBNull = false
            Me.columnLetzter.AllowDBNull = false
            Me.columnBeginn.AllowDBNull = false
            Me.columnEnde.AllowDBNull = false
            Me.columnRechDatum.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMonateRow() As MonateRow
            Return CType(Me.NewRow,MonateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MonateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MonateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MonateRowChangedEvent) Is Nothing) Then
                RaiseEvent MonateRowChanged(Me, New MonateRowChangeEvent(CType(e.Row,MonateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MonateRowChangingEvent) Is Nothing) Then
                RaiseEvent MonateRowChanging(Me, New MonateRowChangeEvent(CType(e.Row,MonateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MonateRowDeletedEvent) Is Nothing) Then
                RaiseEvent MonateRowDeleted(Me, New MonateRowChangeEvent(CType(e.Row,MonateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MonateRowDeletingEvent) Is Nothing) Then
                RaiseEvent MonateRowDeleting(Me, New MonateRowChangeEvent(CType(e.Row,MonateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMonateRow(ByVal row As MonateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MonateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MWStBasenDataTable
        Inherits Global.System.Data.TypedTableBase(Of MWStBasenRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIDKostIntern As Global.System.Data.DataColumn
        
        Private columnMWSt As Global.System.Data.DataColumn
        
        Private columnNettoBetrag As Global.System.Data.DataColumn
        
        Private columnMWStSatz As Global.System.Data.DataColumn
        
        Private columnBruttoBetrag As Global.System.Data.DataColumn
        
        Private columnKontoExport As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MWStBasen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostInternColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostIntern
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWSt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NettoBetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNettoBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStSatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStSatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BruttoBetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBruttoBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KontoExportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKontoExport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MWStBasenRow
            Get
                Return CType(Me.Rows(index),MWStBasenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MWStBasenRowChanging As MWStBasenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MWStBasenRowChanged As MWStBasenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MWStBasenRowDeleting As MWStBasenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MWStBasenRowDeleted As MWStBasenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMWStBasenRow(ByVal row As MWStBasenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMWStBasenRow(ByVal ID As String, ByVal parentKostenträgerRowByKostenträger_MWStBasen As KostenträgerRow, ByVal MWSt As Decimal, ByVal NettoBetrag As Decimal, ByVal MWStSatz As Decimal, ByVal BruttoBetrag As Decimal, ByVal KontoExport As String) As MWStBasenRow
            Dim rowMWStBasenRow As MWStBasenRow = CType(Me.NewRow,MWStBasenRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, MWSt, NettoBetrag, MWStSatz, BruttoBetrag, KontoExport}
            If (Not (parentKostenträgerRowByKostenträger_MWStBasen) Is Nothing) Then
                columnValuesArray(1) = parentKostenträgerRowByKostenträger_MWStBasen(0)
            End If
            rowMWStBasenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMWStBasenRow)
            Return rowMWStBasenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As String) As MWStBasenRow
            Return CType(Me.Rows.Find(New Object() {ID}),MWStBasenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MWStBasenDataTable = CType(MyBase.Clone,MWStBasenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MWStBasenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIDKostIntern = MyBase.Columns("IDKostIntern")
            Me.columnMWSt = MyBase.Columns("MWSt")
            Me.columnNettoBetrag = MyBase.Columns("NettoBetrag")
            Me.columnMWStSatz = MyBase.Columns("MWStSatz")
            Me.columnBruttoBetrag = MyBase.Columns("BruttoBetrag")
            Me.columnKontoExport = MyBase.Columns("KontoExport")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIDKostIntern = New Global.System.Data.DataColumn("IDKostIntern", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostIntern)
            Me.columnMWSt = New Global.System.Data.DataColumn("MWSt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWSt)
            Me.columnNettoBetrag = New Global.System.Data.DataColumn("NettoBetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNettoBetrag)
            Me.columnMWStSatz = New Global.System.Data.DataColumn("MWStSatz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStSatz)
            Me.columnBruttoBetrag = New Global.System.Data.DataColumn("BruttoBetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBruttoBetrag)
            Me.columnKontoExport = New Global.System.Data.DataColumn("KontoExport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKontoExport)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnIDKostIntern.AllowDBNull = false
            Me.columnMWSt.AllowDBNull = false
            Me.columnNettoBetrag.AllowDBNull = false
            Me.columnMWStSatz.AllowDBNull = false
            Me.columnBruttoBetrag.AllowDBNull = false
            Me.columnKontoExport.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMWStBasenRow() As MWStBasenRow
            Return CType(Me.NewRow,MWStBasenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MWStBasenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MWStBasenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MWStBasenRowChangedEvent) Is Nothing) Then
                RaiseEvent MWStBasenRowChanged(Me, New MWStBasenRowChangeEvent(CType(e.Row,MWStBasenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MWStBasenRowChangingEvent) Is Nothing) Then
                RaiseEvent MWStBasenRowChanging(Me, New MWStBasenRowChangeEvent(CType(e.Row,MWStBasenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MWStBasenRowDeletedEvent) Is Nothing) Then
                RaiseEvent MWStBasenRowDeleted(Me, New MWStBasenRowChangeEvent(CType(e.Row,MWStBasenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MWStBasenRowDeletingEvent) Is Nothing) Then
                RaiseEvent MWStBasenRowDeleting(Me, New MWStBasenRowChangeEvent(CType(e.Row,MWStBasenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMWStBasenRow(ByVal row As MWStBasenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MWStBasenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TagesleistungenDataTable
        Inherits Global.System.Data.TypedTableBase(Of TagesleistungenRow)
        
        Private columnNummer As Global.System.Data.DataColumn
        
        Private columnIDLeistungskatalog As Global.System.Data.DataColumn
        
        Private columnLeistungBezeichnung As Global.System.Data.DataColumn
        
        Private columnLeistungsgruppe As Global.System.Data.DataColumn
        
        Private columnDatum As Global.System.Data.DataColumn
        
        Private columnWochentag As Global.System.Data.DataColumn
        
        Private columnTag As Global.System.Data.DataColumn
        
        Private columnMonat As Global.System.Data.DataColumn
        
        Private columnJahr As Global.System.Data.DataColumn
        
        Private columnTagespreisNetto As Global.System.Data.DataColumn
        
        Private columnTagespreisReduziertNetto As Global.System.Data.DataColumn
        
        Private columnMWStSatz As Global.System.Data.DataColumn
        
        Private columnIstPreisNetto As Global.System.Data.DataColumn
        
        Private columnReduziertJN As Global.System.Data.DataColumn
        
        Private columnOffenNetto As Global.System.Data.DataColumn
        
        Private columnIDLeistung As Global.System.Data.DataColumn
        
        Private columnReduziertJNTagsatzliste As Global.System.Data.DataColumn
        
        Private columnKosten As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tagesleistungen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungskatalogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistungskatalog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LeistungBezeichnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeistungBezeichnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LeistungsgruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeistungsgruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WochentagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWochentag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JahrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagespreisNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagespreisNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagespreisReduziertNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagespreisReduziertNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStSatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStSatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IstPreisNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIstPreisNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReduziertJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReduziertJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OffenNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOffenNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReduziertJNTagsatzlisteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReduziertJNTagsatzliste
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KostenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKosten
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TagesleistungenRow
            Get
                Return CType(Me.Rows(index),TagesleistungenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TagesleistungenRowChanging As TagesleistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TagesleistungenRowChanged As TagesleistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TagesleistungenRowDeleting As TagesleistungenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TagesleistungenRowDeleted As TagesleistungenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTagesleistungenRow(ByVal row As TagesleistungenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTagesleistungenRow( _
                    ByVal Nummer As Integer,  _
                    ByVal IDLeistungskatalog As String,  _
                    ByVal LeistungBezeichnung As String,  _
                    ByVal Leistungsgruppe As Integer,  _
                    ByVal Datum As Date,  _
                    ByVal Wochentag As String,  _
                    ByVal Tag As Integer,  _
                    ByVal Monat As Integer,  _
                    ByVal Jahr As Integer,  _
                    ByVal TagespreisNetto As Decimal,  _
                    ByVal TagespreisReduziertNetto As Decimal,  _
                    ByVal MWStSatz As Integer,  _
                    ByVal IstPreisNetto As Decimal,  _
                    ByVal ReduziertJN As Boolean,  _
                    ByVal OffenNetto As Decimal,  _
                    ByVal parentLeistungenRowByLeistungen_Tagesleistungen As LeistungenRow,  _
                    ByVal ReduziertJNTagsatzliste As Boolean,  _
                    ByVal Kosten As Decimal) As TagesleistungenRow
            Dim rowTagesleistungenRow As TagesleistungenRow = CType(Me.NewRow,TagesleistungenRow)
            Dim columnValuesArray() As Object = New Object() {Nummer, IDLeistungskatalog, LeistungBezeichnung, Leistungsgruppe, Datum, Wochentag, Tag, Monat, Jahr, TagespreisNetto, TagespreisReduziertNetto, MWStSatz, IstPreisNetto, ReduziertJN, OffenNetto, Nothing, ReduziertJNTagsatzliste, Kosten}
            If (Not (parentLeistungenRowByLeistungen_Tagesleistungen) Is Nothing) Then
                columnValuesArray(15) = parentLeistungenRowByLeistungen_Tagesleistungen(0)
            End If
            rowTagesleistungenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTagesleistungenRow)
            Return rowTagesleistungenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByNummer(ByVal Nummer As Integer) As TagesleistungenRow
            Return CType(Me.Rows.Find(New Object() {Nummer}),TagesleistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TagesleistungenDataTable = CType(MyBase.Clone,TagesleistungenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TagesleistungenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNummer = MyBase.Columns("Nummer")
            Me.columnIDLeistungskatalog = MyBase.Columns("IDLeistungskatalog")
            Me.columnLeistungBezeichnung = MyBase.Columns("LeistungBezeichnung")
            Me.columnLeistungsgruppe = MyBase.Columns("Leistungsgruppe")
            Me.columnDatum = MyBase.Columns("Datum")
            Me.columnWochentag = MyBase.Columns("Wochentag")
            Me.columnTag = MyBase.Columns("Tag")
            Me.columnMonat = MyBase.Columns("Monat")
            Me.columnJahr = MyBase.Columns("Jahr")
            Me.columnTagespreisNetto = MyBase.Columns("TagespreisNetto")
            Me.columnTagespreisReduziertNetto = MyBase.Columns("TagespreisReduziertNetto")
            Me.columnMWStSatz = MyBase.Columns("MWStSatz")
            Me.columnIstPreisNetto = MyBase.Columns("IstPreisNetto")
            Me.columnReduziertJN = MyBase.Columns("ReduziertJN")
            Me.columnOffenNetto = MyBase.Columns("OffenNetto")
            Me.columnIDLeistung = MyBase.Columns("IDLeistung")
            Me.columnReduziertJNTagsatzliste = MyBase.Columns("ReduziertJNTagsatzliste")
            Me.columnKosten = MyBase.Columns("Kosten")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNummer = New Global.System.Data.DataColumn("Nummer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNummer)
            Me.columnIDLeistungskatalog = New Global.System.Data.DataColumn("IDLeistungskatalog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistungskatalog)
            Me.columnLeistungBezeichnung = New Global.System.Data.DataColumn("LeistungBezeichnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeistungBezeichnung)
            Me.columnLeistungsgruppe = New Global.System.Data.DataColumn("Leistungsgruppe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeistungsgruppe)
            Me.columnDatum = New Global.System.Data.DataColumn("Datum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatum)
            Me.columnWochentag = New Global.System.Data.DataColumn("Wochentag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWochentag)
            Me.columnTag = New Global.System.Data.DataColumn("Tag", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag)
            Me.columnMonat = New Global.System.Data.DataColumn("Monat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonat)
            Me.columnJahr = New Global.System.Data.DataColumn("Jahr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahr)
            Me.columnTagespreisNetto = New Global.System.Data.DataColumn("TagespreisNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagespreisNetto)
            Me.columnTagespreisReduziertNetto = New Global.System.Data.DataColumn("TagespreisReduziertNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagespreisReduziertNetto)
            Me.columnMWStSatz = New Global.System.Data.DataColumn("MWStSatz", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStSatz)
            Me.columnIstPreisNetto = New Global.System.Data.DataColumn("IstPreisNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIstPreisNetto)
            Me.columnReduziertJN = New Global.System.Data.DataColumn("ReduziertJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReduziertJN)
            Me.columnOffenNetto = New Global.System.Data.DataColumn("OffenNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOffenNetto)
            Me.columnIDLeistung = New Global.System.Data.DataColumn("IDLeistung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistung)
            Me.columnReduziertJNTagsatzliste = New Global.System.Data.DataColumn("ReduziertJNTagsatzliste", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReduziertJNTagsatzliste)
            Me.columnKosten = New Global.System.Data.DataColumn("Kosten", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKosten)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNummer}, true))
            Me.columnNummer.AllowDBNull = false
            Me.columnNummer.Unique = true
            Me.columnIDLeistungskatalog.AllowDBNull = false
            Me.columnLeistungBezeichnung.AllowDBNull = false
            Me.columnLeistungsgruppe.AllowDBNull = false
            Me.columnWochentag.AllowDBNull = false
            Me.columnTag.AllowDBNull = false
            Me.columnMonat.AllowDBNull = false
            Me.columnJahr.AllowDBNull = false
            Me.columnTagespreisNetto.AllowDBNull = false
            Me.columnTagespreisReduziertNetto.AllowDBNull = false
            Me.columnMWStSatz.AllowDBNull = false
            Me.columnIstPreisNetto.AllowDBNull = false
            Me.columnReduziertJN.AllowDBNull = false
            Me.columnOffenNetto.AllowDBNull = false
            Me.columnIDLeistung.AllowDBNull = false
            Me.columnReduziertJNTagsatzliste.AllowDBNull = false
            Me.columnKosten.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTagesleistungenRow() As TagesleistungenRow
            Return CType(Me.NewRow,TagesleistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TagesleistungenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TagesleistungenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TagesleistungenRowChangedEvent) Is Nothing) Then
                RaiseEvent TagesleistungenRowChanged(Me, New TagesleistungenRowChangeEvent(CType(e.Row,TagesleistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TagesleistungenRowChangingEvent) Is Nothing) Then
                RaiseEvent TagesleistungenRowChanging(Me, New TagesleistungenRowChangeEvent(CType(e.Row,TagesleistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TagesleistungenRowDeletedEvent) Is Nothing) Then
                RaiseEvent TagesleistungenRowDeleted(Me, New TagesleistungenRowChangeEvent(CType(e.Row,TagesleistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TagesleistungenRowDeletingEvent) Is Nothing) Then
                RaiseEvent TagesleistungenRowDeleting(Me, New TagesleistungenRowChangeEvent(CType(e.Row,TagesleistungenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTagesleistungenRow(ByVal row As TagesleistungenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TagesleistungenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ZahlerDataTable
        Inherits Global.System.Data.TypedTableBase(Of ZahlerRow)
        
        Private columnNettoBetragProLeistung As Global.System.Data.DataColumn
        
        Private columnMWStProLeistung As Global.System.Data.DataColumn
        
        Private columnIDKostIntern As Global.System.Data.DataColumn
        
        Private columnIDLeistung As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Zahler"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NettoBetragProLeistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNettoBetragProLeistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStProLeistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStProLeistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostInternColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostIntern
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ZahlerRow
            Get
                Return CType(Me.Rows(index),ZahlerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ZahlerRowChanging As ZahlerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ZahlerRowChanged As ZahlerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ZahlerRowDeleting As ZahlerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ZahlerRowDeleted As ZahlerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddZahlerRow(ByVal row As ZahlerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddZahlerRow(ByVal NettoBetragProLeistung As Decimal, ByVal MWStProLeistung As Decimal, ByVal parentKostenträgerRowByKostenträger_Zahler As KostenträgerRow, ByVal parentLeistungenRowByLeistungen_Zahler As LeistungenRow) As ZahlerRow
            Dim rowZahlerRow As ZahlerRow = CType(Me.NewRow,ZahlerRow)
            Dim columnValuesArray() As Object = New Object() {NettoBetragProLeistung, MWStProLeistung, Nothing, Nothing}
            If (Not (parentKostenträgerRowByKostenträger_Zahler) Is Nothing) Then
                columnValuesArray(2) = parentKostenträgerRowByKostenträger_Zahler(0)
            End If
            If (Not (parentLeistungenRowByLeistungen_Zahler) Is Nothing) Then
                columnValuesArray(3) = parentLeistungenRowByLeistungen_Zahler(0)
            End If
            rowZahlerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowZahlerRow)
            Return rowZahlerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByIDKostInternIDLeistung(ByVal IDKostIntern As String, ByVal IDLeistung As String) As ZahlerRow
            Return CType(Me.Rows.Find(New Object() {IDKostIntern, IDLeistung}),ZahlerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ZahlerDataTable = CType(MyBase.Clone,ZahlerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ZahlerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNettoBetragProLeistung = MyBase.Columns("NettoBetragProLeistung")
            Me.columnMWStProLeistung = MyBase.Columns("MWStProLeistung")
            Me.columnIDKostIntern = MyBase.Columns("IDKostIntern")
            Me.columnIDLeistung = MyBase.Columns("IDLeistung")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNettoBetragProLeistung = New Global.System.Data.DataColumn("NettoBetragProLeistung", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNettoBetragProLeistung)
            Me.columnMWStProLeistung = New Global.System.Data.DataColumn("MWStProLeistung", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStProLeistung)
            Me.columnIDKostIntern = New Global.System.Data.DataColumn("IDKostIntern", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostIntern)
            Me.columnIDLeistung = New Global.System.Data.DataColumn("IDLeistung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistung)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDKostIntern, Me.columnIDLeistung}, true))
            Me.columnNettoBetragProLeistung.AllowDBNull = false
            Me.columnMWStProLeistung.AllowDBNull = false
            Me.columnIDKostIntern.AllowDBNull = false
            Me.columnIDLeistung.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewZahlerRow() As ZahlerRow
            Return CType(Me.NewRow,ZahlerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ZahlerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ZahlerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ZahlerRowChangedEvent) Is Nothing) Then
                RaiseEvent ZahlerRowChanged(Me, New ZahlerRowChangeEvent(CType(e.Row,ZahlerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ZahlerRowChangingEvent) Is Nothing) Then
                RaiseEvent ZahlerRowChanging(Me, New ZahlerRowChangeEvent(CType(e.Row,ZahlerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ZahlerRowDeletedEvent) Is Nothing) Then
                RaiseEvent ZahlerRowDeleted(Me, New ZahlerRowChangeEvent(CType(e.Row,ZahlerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ZahlerRowDeletingEvent) Is Nothing) Then
                RaiseEvent ZahlerRowDeleting(Me, New ZahlerRowChangeEvent(CType(e.Row,ZahlerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveZahlerRow(ByVal row As ZahlerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ZahlerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TageDataTable
        Inherits Global.System.Data.TypedTableBase(Of TageRow)
        
        Private columnDatum As Global.System.Data.DataColumn
        
        Private columnWochentag As Global.System.Data.DataColumn
        
        Private columnTag As Global.System.Data.DataColumn
        
        Private columnMonat As Global.System.Data.DataColumn
        
        Private columnJahr As Global.System.Data.DataColumn
        
        Private columnAnwesenheitsstatus As Global.System.Data.DataColumn
        
        Private columnAbwesenheitsstatus As Global.System.Data.DataColumn
        
        Private columnKürzungJN As Global.System.Data.DataColumn
        
        Private columnIDMonat As Global.System.Data.DataColumn
        
        Private columnIDTagsatz As Global.System.Data.DataColumn
        
        Private columnGrund As Global.System.Data.DataColumn
        
        Private columnAbwVon As Global.System.Data.DataColumn
        
        Private columnAbwBis As Global.System.Data.DataColumn
        
        Private columnIDAbwesenheit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tage"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WochentagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWochentag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JahrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnwesenheitsstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnwesenheitsstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AbwesenheitsstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbwesenheitsstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KürzungJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKürzungJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDMonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDTagsatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDTagsatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GrundColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrund
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AbwVonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbwVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AbwBisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbwBis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDAbwesenheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDAbwesenheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TageRow
            Get
                Return CType(Me.Rows(index),TageRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TageRowChanging As TageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TageRowChanged As TageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TageRowDeleting As TageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TageRowDeleted As TageRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTageRow(ByVal row As TageRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTageRow(ByVal Datum As Date, ByVal Wochentag As String, ByVal Tag As Integer, ByVal Monat As Integer, ByVal Jahr As Integer, ByVal Anwesenheitsstatus As Integer, ByVal Abwesenheitsstatus As Integer, ByVal KürzungJN As Boolean, ByVal parentMonateRowByMonate_Tage As MonateRow, ByVal IDTagsatz As String, ByVal Grund As String, ByVal AbwVon As Date, ByVal AbwBis As Date, ByVal IDAbwesenheit As String) As TageRow
            Dim rowTageRow As TageRow = CType(Me.NewRow,TageRow)
            Dim columnValuesArray() As Object = New Object() {Datum, Wochentag, Tag, Monat, Jahr, Anwesenheitsstatus, Abwesenheitsstatus, KürzungJN, Nothing, IDTagsatz, Grund, AbwVon, AbwBis, IDAbwesenheit}
            If (Not (parentMonateRowByMonate_Tage) Is Nothing) Then
                columnValuesArray(8) = parentMonateRowByMonate_Tage(0)
            End If
            rowTageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTageRow)
            Return rowTageRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDatum(ByVal Datum As Date) As TageRow
            Return CType(Me.Rows.Find(New Object() {Datum}),TageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TageDataTable = CType(MyBase.Clone,TageDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TageDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDatum = MyBase.Columns("Datum")
            Me.columnWochentag = MyBase.Columns("Wochentag")
            Me.columnTag = MyBase.Columns("Tag")
            Me.columnMonat = MyBase.Columns("Monat")
            Me.columnJahr = MyBase.Columns("Jahr")
            Me.columnAnwesenheitsstatus = MyBase.Columns("Anwesenheitsstatus")
            Me.columnAbwesenheitsstatus = MyBase.Columns("Abwesenheitsstatus")
            Me.columnKürzungJN = MyBase.Columns("KürzungJN")
            Me.columnIDMonat = MyBase.Columns("IDMonat")
            Me.columnIDTagsatz = MyBase.Columns("IDTagsatz")
            Me.columnGrund = MyBase.Columns("Grund")
            Me.columnAbwVon = MyBase.Columns("AbwVon")
            Me.columnAbwBis = MyBase.Columns("AbwBis")
            Me.columnIDAbwesenheit = MyBase.Columns("IDAbwesenheit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDatum = New Global.System.Data.DataColumn("Datum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatum)
            Me.columnWochentag = New Global.System.Data.DataColumn("Wochentag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWochentag)
            Me.columnTag = New Global.System.Data.DataColumn("Tag", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTag)
            Me.columnMonat = New Global.System.Data.DataColumn("Monat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonat)
            Me.columnJahr = New Global.System.Data.DataColumn("Jahr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahr)
            Me.columnAnwesenheitsstatus = New Global.System.Data.DataColumn("Anwesenheitsstatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnwesenheitsstatus)
            Me.columnAbwesenheitsstatus = New Global.System.Data.DataColumn("Abwesenheitsstatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbwesenheitsstatus)
            Me.columnKürzungJN = New Global.System.Data.DataColumn("KürzungJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKürzungJN)
            Me.columnIDMonat = New Global.System.Data.DataColumn("IDMonat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDMonat)
            Me.columnIDTagsatz = New Global.System.Data.DataColumn("IDTagsatz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDTagsatz)
            Me.columnGrund = New Global.System.Data.DataColumn("Grund", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrund)
            Me.columnAbwVon = New Global.System.Data.DataColumn("AbwVon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbwVon)
            Me.columnAbwBis = New Global.System.Data.DataColumn("AbwBis", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbwBis)
            Me.columnIDAbwesenheit = New Global.System.Data.DataColumn("IDAbwesenheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDAbwesenheit)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDatum}, true))
            Me.columnDatum.AllowDBNull = false
            Me.columnDatum.Unique = true
            Me.columnWochentag.AllowDBNull = false
            Me.columnTag.AllowDBNull = false
            Me.columnMonat.AllowDBNull = false
            Me.columnJahr.AllowDBNull = false
            Me.columnAnwesenheitsstatus.AllowDBNull = false
            Me.columnAbwesenheitsstatus.AllowDBNull = false
            Me.columnKürzungJN.AllowDBNull = false
            Me.columnIDMonat.AllowDBNull = false
            Me.columnIDTagsatz.AllowDBNull = false
            Me.columnGrund.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTageRow() As TageRow
            Return CType(Me.NewRow,TageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TageRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TageRowChangedEvent) Is Nothing) Then
                RaiseEvent TageRowChanged(Me, New TageRowChangeEvent(CType(e.Row,TageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TageRowChangingEvent) Is Nothing) Then
                RaiseEvent TageRowChanging(Me, New TageRowChangeEvent(CType(e.Row,TageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TageRowDeletedEvent) Is Nothing) Then
                RaiseEvent TageRowDeleted(Me, New TageRowChangeEvent(CType(e.Row,TageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TageRowDeletingEvent) Is Nothing) Then
                RaiseEvent TageRowDeleting(Me, New TageRowChangeEvent(CType(e.Row,TageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTageRow(ByVal row As TageRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KostenKostenträgerDataTable
        Inherits Global.System.Data.TypedTableBase(Of KostenKostenträgerRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIDKostIntern As Global.System.Data.DataColumn
        
        Private columnIDKost As Global.System.Data.DataColumn
        
        Private columnlfdNr As Global.System.Data.DataColumn
        
        Private columnKennung As Global.System.Data.DataColumn
        
        Private columnAnzahl As Global.System.Data.DataColumn
        
        Private columnBezeichnung As Global.System.Data.DataColumn
        
        Private columnNetto As Global.System.Data.DataColumn
        
        Private columnMWSt As Global.System.Data.DataColumn
        
        Private columnBrutto As Global.System.Data.DataColumn
        
        Private columnMWStSatz As Global.System.Data.DataColumn
        
        Private columntempNetto As Global.System.Data.DataColumn
        
        Private columntempMWSt As Global.System.Data.DataColumn
        
        Private columntempBrutto As Global.System.Data.DataColumn
        
        Private columntempKontoExport As Global.System.Data.DataColumn
        
        Private columnIDLeistung As Global.System.Data.DataColumn
        
        Private columnFIBU As Global.System.Data.DataColumn
        
        Private columnIDLeistungsKatalog As Global.System.Data.DataColumn
        
        Private columnIDSonderLeistungskatalog As Global.System.Data.DataColumn
        
        Private columnIDKlient As Global.System.Data.DataColumn
        
        Private columnClassification As Global.System.Data.DataColumn
        
        Private columnIDManBuch As Global.System.Data.DataColumn
        
        Private columnIDBill As Global.System.Data.DataColumn
        
        Private columnIDKostInternBill As Global.System.Data.DataColumn
        
        Private columnIDKostBill As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KostenKostenträger"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostInternColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostIntern
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property lfdNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlfdNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KennungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKennung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnzahlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnzahl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BezeichnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBezeichnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWSt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BruttoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrutto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStSatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStSatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property tempNettoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempNetto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property tempMWStColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempMWSt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property tempBruttoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempBrutto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property tempKontoExportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempKontoExport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FIBUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIBU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDLeistungsKatalogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLeistungsKatalog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDSonderLeistungskatalogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSonderLeistungskatalog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClassification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDManBuchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDManBuch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostInternBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostInternBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KostenKostenträgerRow
            Get
                Return CType(Me.Rows(index),KostenKostenträgerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenKostenträgerRowChanging As KostenKostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenKostenträgerRowChanged As KostenKostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenKostenträgerRowDeleting As KostenKostenträgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event KostenKostenträgerRowDeleted As KostenKostenträgerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddKostenKostenträgerRow(ByVal row As KostenKostenträgerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddKostenKostenträgerRow( _
                    ByVal ID As String,  _
                    ByVal parentKostenträgerRowByKostenträger_Rechnungszeilen As KostenträgerRow,  _
                    ByVal IDKost As String,  _
                    ByVal lfdNr As Integer,  _
                    ByVal Kennung As String,  _
                    ByVal Anzahl As Integer,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Netto As Decimal,  _
                    ByVal MWSt As Decimal,  _
                    ByVal Brutto As Decimal,  _
                    ByVal MWStSatz As Decimal,  _
                    ByVal tempNetto As Decimal,  _
                    ByVal tempMWSt As Decimal,  _
                    ByVal tempBrutto As Decimal,  _
                    ByVal tempKontoExport As String,  _
                    ByVal IDLeistung As String,  _
                    ByVal FIBU As String,  _
                    ByVal IDLeistungsKatalog As String,  _
                    ByVal IDSonderLeistungskatalog As String,  _
                    ByVal IDKlient As String,  _
                    ByVal Classification As String,  _
                    ByVal IDManBuch As String,  _
                    ByVal IDBill As String,  _
                    ByVal IDKostInternBill As String,  _
                    ByVal IDKostBill As String) As KostenKostenträgerRow
            Dim rowKostenKostenträgerRow As KostenKostenträgerRow = CType(Me.NewRow,KostenKostenträgerRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nothing, IDKost, lfdNr, Kennung, Anzahl, Bezeichnung, Netto, MWSt, Brutto, MWStSatz, tempNetto, tempMWSt, tempBrutto, tempKontoExport, IDLeistung, FIBU, IDLeistungsKatalog, IDSonderLeistungskatalog, IDKlient, Classification, IDManBuch, IDBill, IDKostInternBill, IDKostBill}
            If (Not (parentKostenträgerRowByKostenträger_Rechnungszeilen) Is Nothing) Then
                columnValuesArray(1) = parentKostenträgerRowByKostenträger_Rechnungszeilen(0)
            End If
            rowKostenKostenträgerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKostenKostenträgerRow)
            Return rowKostenKostenträgerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As String) As KostenKostenträgerRow
            Return CType(Me.Rows.Find(New Object() {ID}),KostenKostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KostenKostenträgerDataTable = CType(MyBase.Clone,KostenKostenträgerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KostenKostenträgerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIDKostIntern = MyBase.Columns("IDKostIntern")
            Me.columnIDKost = MyBase.Columns("IDKost")
            Me.columnlfdNr = MyBase.Columns("lfdNr")
            Me.columnKennung = MyBase.Columns("Kennung")
            Me.columnAnzahl = MyBase.Columns("Anzahl")
            Me.columnBezeichnung = MyBase.Columns("Bezeichnung")
            Me.columnNetto = MyBase.Columns("Netto")
            Me.columnMWSt = MyBase.Columns("MWSt")
            Me.columnBrutto = MyBase.Columns("Brutto")
            Me.columnMWStSatz = MyBase.Columns("MWStSatz")
            Me.columntempNetto = MyBase.Columns("tempNetto")
            Me.columntempMWSt = MyBase.Columns("tempMWSt")
            Me.columntempBrutto = MyBase.Columns("tempBrutto")
            Me.columntempKontoExport = MyBase.Columns("tempKontoExport")
            Me.columnIDLeistung = MyBase.Columns("IDLeistung")
            Me.columnFIBU = MyBase.Columns("FIBU")
            Me.columnIDLeistungsKatalog = MyBase.Columns("IDLeistungsKatalog")
            Me.columnIDSonderLeistungskatalog = MyBase.Columns("IDSonderLeistungskatalog")
            Me.columnIDKlient = MyBase.Columns("IDKlient")
            Me.columnClassification = MyBase.Columns("Classification")
            Me.columnIDManBuch = MyBase.Columns("IDManBuch")
            Me.columnIDBill = MyBase.Columns("IDBill")
            Me.columnIDKostInternBill = MyBase.Columns("IDKostInternBill")
            Me.columnIDKostBill = MyBase.Columns("IDKostBill")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIDKostIntern = New Global.System.Data.DataColumn("IDKostIntern", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostIntern)
            Me.columnIDKost = New Global.System.Data.DataColumn("IDKost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKost)
            Me.columnlfdNr = New Global.System.Data.DataColumn("lfdNr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlfdNr)
            Me.columnKennung = New Global.System.Data.DataColumn("Kennung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKennung)
            Me.columnAnzahl = New Global.System.Data.DataColumn("Anzahl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnzahl)
            Me.columnBezeichnung = New Global.System.Data.DataColumn("Bezeichnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBezeichnung)
            Me.columnNetto = New Global.System.Data.DataColumn("Netto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetto)
            Me.columnMWSt = New Global.System.Data.DataColumn("MWSt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWSt)
            Me.columnBrutto = New Global.System.Data.DataColumn("Brutto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrutto)
            Me.columnMWStSatz = New Global.System.Data.DataColumn("MWStSatz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStSatz)
            Me.columntempNetto = New Global.System.Data.DataColumn("tempNetto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempNetto)
            Me.columntempMWSt = New Global.System.Data.DataColumn("tempMWSt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempMWSt)
            Me.columntempBrutto = New Global.System.Data.DataColumn("tempBrutto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempBrutto)
            Me.columntempKontoExport = New Global.System.Data.DataColumn("tempKontoExport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempKontoExport)
            Me.columnIDLeistung = New Global.System.Data.DataColumn("IDLeistung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistung)
            Me.columnFIBU = New Global.System.Data.DataColumn("FIBU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIBU)
            Me.columnIDLeistungsKatalog = New Global.System.Data.DataColumn("IDLeistungsKatalog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLeistungsKatalog)
            Me.columnIDSonderLeistungskatalog = New Global.System.Data.DataColumn("IDSonderLeistungskatalog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSonderLeistungskatalog)
            Me.columnIDKlient = New Global.System.Data.DataColumn("IDKlient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlient)
            Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClassification)
            Me.columnIDManBuch = New Global.System.Data.DataColumn("IDManBuch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDManBuch)
            Me.columnIDBill = New Global.System.Data.DataColumn("IDBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDBill)
            Me.columnIDKostInternBill = New Global.System.Data.DataColumn("IDKostInternBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostInternBill)
            Me.columnIDKostBill = New Global.System.Data.DataColumn("IDKostBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostBill)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnIDKostIntern.AllowDBNull = false
            Me.columnIDKost.AllowDBNull = false
            Me.columnlfdNr.AllowDBNull = false
            Me.columnKennung.AllowDBNull = false
            Me.columnAnzahl.AllowDBNull = false
            Me.columnBezeichnung.AllowDBNull = false
            Me.columnNetto.AllowDBNull = false
            Me.columnMWSt.AllowDBNull = false
            Me.columnBrutto.AllowDBNull = false
            Me.columnMWStSatz.AllowDBNull = false
            Me.columntempNetto.AllowDBNull = false
            Me.columntempMWSt.AllowDBNull = false
            Me.columntempBrutto.AllowDBNull = false
            Me.columntempKontoExport.AllowDBNull = false
            Me.columnIDLeistung.AllowDBNull = false
            Me.columnFIBU.AllowDBNull = false
            Me.columnIDLeistungsKatalog.AllowDBNull = false
            Me.columnIDSonderLeistungskatalog.AllowDBNull = false
            Me.columnIDKlient.AllowDBNull = false
            Me.columnClassification.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewKostenKostenträgerRow() As KostenKostenträgerRow
            Return CType(Me.NewRow,KostenKostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KostenKostenträgerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KostenKostenträgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KostenKostenträgerRowChangedEvent) Is Nothing) Then
                RaiseEvent KostenKostenträgerRowChanged(Me, New KostenKostenträgerRowChangeEvent(CType(e.Row,KostenKostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KostenKostenträgerRowChangingEvent) Is Nothing) Then
                RaiseEvent KostenKostenträgerRowChanging(Me, New KostenKostenträgerRowChangeEvent(CType(e.Row,KostenKostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KostenKostenträgerRowDeletedEvent) Is Nothing) Then
                RaiseEvent KostenKostenträgerRowDeleted(Me, New KostenKostenträgerRowChangeEvent(CType(e.Row,KostenKostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KostenKostenträgerRowDeletingEvent) Is Nothing) Then
                RaiseEvent KostenKostenträgerRowDeleting(Me, New KostenKostenträgerRowChangeEvent(CType(e.Row,KostenKostenträgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveKostenKostenträgerRow(ByVal row As KostenKostenträgerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KostenKostenträgerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class bookingsDataTable
        Inherits Global.System.Data.TypedTableBase(Of bookingsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnBuchungsdatum As Global.System.Data.DataColumn
        
        Private columnText As Global.System.Data.DataColumn
        
        Private columnSollkonto As Global.System.Data.DataColumn
        
        Private columnHabenkonto As Global.System.Data.DataColumn
        
        Private columnBetrag As Global.System.Data.DataColumn
        
        Private columnMWStSatz As Global.System.Data.DataColumn
        
        Private columnRechNr As Global.System.Data.DataColumn
        
        Private columnIDKlient As Global.System.Data.DataColumn
        
        Private columnIDKostenträger As Global.System.Data.DataColumn
        
        Private columnErstellt As Global.System.Data.DataColumn
        
        Private columnErstellAm As Global.System.Data.DataColumn
        
        Private columnIDKlinik As Global.System.Data.DataColumn
        
        Private columnSoll As Global.System.Data.DataColumn
        
        Private columnHaben As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "bookings"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BuchungsdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SollkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSollkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HabenkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHabenkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MWStSatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMWStSatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RechNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRechNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKostenträgerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKostenträger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ErstelltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErstellt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ErstellAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErstellAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDKlinikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlinik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HabenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaben
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As bookingsRow
            Get
                Return CType(Me.Rows(index),bookingsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event bookingsRowChanging As bookingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event bookingsRowChanged As bookingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event bookingsRowDeleting As bookingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event bookingsRowDeleted As bookingsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddbookingsRow(ByVal row As bookingsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddbookingsRow(ByVal ID As String, ByVal Buchungsdatum As Date, ByVal Text As String, ByVal Sollkonto As String, ByVal Habenkonto As String, ByVal Betrag As Decimal, ByVal MWStSatz As Integer, ByVal RechNr As String, ByVal IDKlient As String, ByVal IDKostenträger As String, ByVal Erstellt As String, ByVal ErstellAm As Date, ByVal IDKlinik As System.Guid, ByVal Soll As Decimal, ByVal Haben As Decimal) As bookingsRow
            Dim rowbookingsRow As bookingsRow = CType(Me.NewRow,bookingsRow)
            Dim columnValuesArray() As Object = New Object() {ID, Buchungsdatum, Text, Sollkonto, Habenkonto, Betrag, MWStSatz, RechNr, IDKlient, IDKostenträger, Erstellt, ErstellAm, IDKlinik, Soll, Haben}
            rowbookingsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowbookingsRow)
            Return rowbookingsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As String) As bookingsRow
            Return CType(Me.Rows.Find(New Object() {ID}),bookingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As bookingsDataTable = CType(MyBase.Clone,bookingsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New bookingsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnBuchungsdatum = MyBase.Columns("Buchungsdatum")
            Me.columnText = MyBase.Columns("Text")
            Me.columnSollkonto = MyBase.Columns("Sollkonto")
            Me.columnHabenkonto = MyBase.Columns("Habenkonto")
            Me.columnBetrag = MyBase.Columns("Betrag")
            Me.columnMWStSatz = MyBase.Columns("MWStSatz")
            Me.columnRechNr = MyBase.Columns("RechNr")
            Me.columnIDKlient = MyBase.Columns("IDKlient")
            Me.columnIDKostenträger = MyBase.Columns("IDKostenträger")
            Me.columnErstellt = MyBase.Columns("Erstellt")
            Me.columnErstellAm = MyBase.Columns("ErstellAm")
            Me.columnIDKlinik = MyBase.Columns("IDKlinik")
            Me.columnSoll = MyBase.Columns("Soll")
            Me.columnHaben = MyBase.Columns("Haben")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnBuchungsdatum = New Global.System.Data.DataColumn("Buchungsdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsdatum)
            Me.columnText = New Global.System.Data.DataColumn("Text", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnText)
            Me.columnSollkonto = New Global.System.Data.DataColumn("Sollkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSollkonto)
            Me.columnHabenkonto = New Global.System.Data.DataColumn("Habenkonto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHabenkonto)
            Me.columnBetrag = New Global.System.Data.DataColumn("Betrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetrag)
            Me.columnMWStSatz = New Global.System.Data.DataColumn("MWStSatz", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMWStSatz)
            Me.columnRechNr = New Global.System.Data.DataColumn("RechNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRechNr)
            Me.columnIDKlient = New Global.System.Data.DataColumn("IDKlient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlient)
            Me.columnIDKostenträger = New Global.System.Data.DataColumn("IDKostenträger", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKostenträger)
            Me.columnErstellt = New Global.System.Data.DataColumn("Erstellt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErstellt)
            Me.columnErstellAm = New Global.System.Data.DataColumn("ErstellAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErstellAm)
            Me.columnIDKlinik = New Global.System.Data.DataColumn("IDKlinik", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlinik)
            Me.columnSoll = New Global.System.Data.DataColumn("Soll", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoll)
            Me.columnHaben = New Global.System.Data.DataColumn("Haben", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaben)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnID.MaxLength = 50
            Me.columnBuchungsdatum.AllowDBNull = false
            Me.columnText.AllowDBNull = false
            Me.columnText.MaxLength = 250
            Me.columnSollkonto.AllowDBNull = false
            Me.columnSollkonto.MaxLength = 50
            Me.columnHabenkonto.AllowDBNull = false
            Me.columnHabenkonto.MaxLength = 50
            Me.columnBetrag.AllowDBNull = false
            Me.columnMWStSatz.AllowDBNull = false
            Me.columnRechNr.AllowDBNull = false
            Me.columnRechNr.MaxLength = 50
            Me.columnIDKlient.AllowDBNull = false
            Me.columnIDKlient.MaxLength = 50
            Me.columnIDKostenträger.AllowDBNull = false
            Me.columnIDKostenträger.MaxLength = 50
            Me.columnErstellt.AllowDBNull = false
            Me.columnErstellt.MaxLength = 150
            Me.columnErstellAm.AllowDBNull = false
            Me.columnSoll.AllowDBNull = false
            Me.columnSoll.DefaultValue = CType(0D,Decimal)
            Me.columnHaben.AllowDBNull = false
            Me.columnHaben.DefaultValue = CType(0D,Decimal)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewbookingsRow() As bookingsRow
            Return CType(Me.NewRow,bookingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New bookingsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(bookingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.bookingsRowChangedEvent) Is Nothing) Then
                RaiseEvent bookingsRowChanged(Me, New bookingsRowChangeEvent(CType(e.Row,bookingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.bookingsRowChangingEvent) Is Nothing) Then
                RaiseEvent bookingsRowChanging(Me, New bookingsRowChangeEvent(CType(e.Row,bookingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.bookingsRowDeletedEvent) Is Nothing) Then
                RaiseEvent bookingsRowDeleted(Me, New bookingsRowChangeEvent(CType(e.Row,bookingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.bookingsRowDeletingEvent) Is Nothing) Then
                RaiseEvent bookingsRowDeleting(Me, New bookingsRowChangeEvent(CType(e.Row,bookingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovebookingsRow(ByVal row As bookingsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dbCalc = New dbCalc()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "bookingsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AbwesenheitenRow
        Inherits Global.System.Data.DataRow
        
        Private tableAbwesenheiten As AbwesenheitenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAbwesenheiten = CType(Me.Table,AbwesenheitenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableAbwesenheiten.IDColumn),String)
            End Get
            Set
                Me(Me.tableAbwesenheiten.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlient() As String
            Get
                Return CType(Me(Me.tableAbwesenheiten.IDKlientColumn),String)
            End Get
            Set
                Me(Me.tableAbwesenheiten.IDKlientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Von() As Date
            Get
                Return CType(Me(Me.tableAbwesenheiten.VonColumn),Date)
            End Get
            Set
                Me(Me.tableAbwesenheiten.VonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bis() As Date
            Get
                Return CType(Me(Me.tableAbwesenheiten.BisColumn),Date)
            End Get
            Set
                Me(Me.tableAbwesenheiten.BisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nummer() As Integer
            Get
                Return CType(Me(Me.tableAbwesenheiten.NummerColumn),Integer)
            End Get
            Set
                Me(Me.tableAbwesenheiten.NummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Grund() As String
            Get
                Return CType(Me(Me.tableAbwesenheiten.GrundColumn),String)
            End Get
            Set
                Me(Me.tableAbwesenheiten.GrundColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TageOhneKürzung() As Integer
            Get
                Return CType(Me(Me.tableAbwesenheiten.TageOhneKürzungColumn),Integer)
            End Get
            Set
                Me(Me.tableAbwesenheiten.TageOhneKürzungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KuerzungGrundleistungLetzterTag() As Boolean
            Get
                Return CType(Me(Me.tableAbwesenheiten.KuerzungGrundleistungLetzterTagColumn),Boolean)
            End Get
            Set
                Me(Me.tableAbwesenheiten.KuerzungGrundleistungLetzterTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KlientRow() As KlientRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Klient_Abwesenheiten")),KlientRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Klient_Abwesenheiten"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AufenthalteRow
        Inherits Global.System.Data.DataRow
        
        Private tableAufenthalte As AufenthalteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAufenthalte = CType(Me.Table,AufenthalteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableAufenthalte.IDColumn),String)
            End Get
            Set
                Me(Me.tableAufenthalte.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Von() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAufenthalte.VonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Von in Tabelle Aufenthalte ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAufenthalte.VonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bis() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAufenthalte.BisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Bis in Tabelle Aufenthalte ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAufenthalte.BisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nummer() As Integer
            Get
                Return CType(Me(Me.tableAufenthalte.NummerColumn),Integer)
            End Get
            Set
                Me(Me.tableAufenthalte.NummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GSBG() As Double
            Get
                Return CType(Me(Me.tableAufenthalte.GSBGColumn),Double)
            End Get
            Set
                Me(Me.tableAufenthalte.GSBGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlient() As String
            Get
                Return CType(Me(Me.tableAufenthalte.IDKlientColumn),String)
            End Get
            Set
                Me(Me.tableAufenthalte.IDKlientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlinik() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableAufenthalte.IDKlinikColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKlinik in Tabelle Aufenthalte ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAufenthalte.IDKlinikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVonNull() As Boolean
            Return Me.IsNull(Me.tableAufenthalte.VonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVonNull()
            Me(Me.tableAufenthalte.VonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBisNull() As Boolean
            Return Me.IsNull(Me.tableAufenthalte.BisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBisNull()
            Me(Me.tableAufenthalte.BisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKlinikNull() As Boolean
            Return Me.IsNull(Me.tableAufenthalte.IDKlinikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKlinikNull()
            Me(Me.tableAufenthalte.IDKlinikColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KlientRow
        Inherits Global.System.Data.DataRow
        
        Private tableKlient As KlientDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKlient = CType(Me.Table,KlientDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableKlient.IDColumn),String)
            End Get
            Set
                Me(Me.tableKlient.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nachname() As String
            Get
                Return CType(Me(Me.tableKlient.NachnameColumn),String)
            End Get
            Set
                Me(Me.tableKlient.NachnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Vorname() As String
            Get
                Return CType(Me(Me.tableKlient.VornameColumn),String)
            End Get
            Set
                Me(Me.tableKlient.VornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungJN() As Boolean
            Get
                Return CType(Me(Me.tableKlient.ZuschlagGrundleistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKlient.ZuschlagGrundleistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungProzent() As Integer
            Get
                Return CType(Me(Me.tableKlient.ZuschlagGrundleistungProzentColumn),Integer)
            End Get
            Set
                Me(Me.tableKlient.ZuschlagGrundleistungProzentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungBetrag() As Decimal
            Get
                Return CType(Me(Me.tableKlient.ZuschlagGrundleistungBetragColumn),Decimal)
            End Get
            Set
                Me(Me.tableKlient.ZuschlagGrundleistungBetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property calcTyp() As Integer
            Get
                Return CType(Me(Me.tableKlient.calcTypColumn),Integer)
            End Get
            Set
                Me(Me.tableKlient.calcTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property calcRun() As Integer
            Get
                Return CType(Me(Me.tableKlient.calcRunColumn),Integer)
            End Get
            Set
                Me(Me.tableKlient.calcRunColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Version() As String
            Get
                Return CType(Me(Me.tableKlient.VersionColumn),String)
            End Get
            Set
                Me(Me.tableKlient.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlinik() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableKlient.IDKlinikColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKlinik in Tabelle Klient ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKlient.IDKlinikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KlinikName() As String
            Get
                Return CType(Me(Me.tableKlient.KlinikNameColumn),String)
            End Get
            Set
                Me(Me.tableKlient.KlinikNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KürzungLetzterTagAnwesenheit() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableKlient.KürzungLetzterTagAnwesenheitColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KürzungLetzterTagAnwesenheit in Tabelle Klient ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKlient.KürzungLetzterTagAnwesenheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKlinikNull() As Boolean
            Return Me.IsNull(Me.tableKlient.IDKlinikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKlinikNull()
            Me(Me.tableKlient.IDKlinikColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKürzungLetzterTagAnwesenheitNull() As Boolean
            Return Me.IsNull(Me.tableKlient.KürzungLetzterTagAnwesenheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKürzungLetzterTagAnwesenheitNull()
            Me(Me.tableKlient.KürzungLetzterTagAnwesenheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetAbwesenheitenRows() As AbwesenheitenRow()
            If (Me.Table.ChildRelations("Klient_Abwesenheiten") Is Nothing) Then
                Return New AbwesenheitenRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Klient_Abwesenheiten")),AbwesenheitenRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetKostenträgerRows() As KostenträgerRow()
            If (Me.Table.ChildRelations("Klient_Kostenträger") Is Nothing) Then
                Return New KostenträgerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Klient_Kostenträger")),KostenträgerRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KostenträgerRow
        Inherits Global.System.Data.DataRow
        
        Private tableKostenträger As KostenträgerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKostenträger = CType(Me.Table,KostenträgerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostIntern() As String
            Get
                Return CType(Me(Me.tableKostenträger.IDKostInternColumn),String)
            End Get
            Set
                Me(Me.tableKostenträger.IDKostInternColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKost() As String
            Get
                Return CType(Me(Me.tableKostenträger.IDKostColumn),String)
            End Get
            Set
                Me(Me.tableKostenträger.IDKostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FamName() As String
            Get
                Return CType(Me(Me.tableKostenträger.FamNameColumn),String)
            End Get
            Set
                Me(Me.tableKostenträger.FamNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SammelabrechnungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.SammelabrechnungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.SammelabrechnungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property von() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKostenträger.vonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte von in Tabelle Kostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenträger.vonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property bis() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKostenträger.bisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte bis in Tabelle Kostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenträger.bisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GrundleistungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.GrundleistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.GrundleistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PeriodischeLeistungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.PeriodischeLeistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.PeriodischeLeistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SonderleistungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.SonderleistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.SonderleistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VorauszahlungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.VorauszahlungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.VorauszahlungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RechnungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.RechnungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.RechnungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RechnungTyp() As Integer
            Get
                Return CType(Me(Me.tableKostenträger.RechnungTypColumn),Integer)
            End Get
            Set
                Me(Me.tableKostenträger.RechnungTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxBetragBrutto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.MaxBetragBruttoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.MaxBetragBruttoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RestzahlerJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.RestzahlerJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.RestzahlerJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Rang() As Integer
            Get
                Return CType(Me(Me.tableKostenträger.RangColumn),Integer)
            End Get
            Set
                Me(Me.tableKostenträger.RangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KlientenbezogenJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.KlientenbezogenJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.KlientenbezogenJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransferzahlerJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.TransferzahlerJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.TransferzahlerJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZahlungsbetragNetto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.ZahlungsbetragNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.ZahlungsbetragNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZahlungsbetragBrutto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.ZahlungsbetragBruttoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.ZahlungsbetragBruttoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Rundungsausgleich() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.RundungsausgleichColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.RundungsausgleichColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungJN() As Boolean
            Get
                Return CType(Me(Me.tableKostenträger.ZuschlagGrundleistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableKostenträger.ZuschlagGrundleistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungProzent() As Integer
            Get
                Return CType(Me(Me.tableKostenträger.ZuschlagGrundleistungProzentColumn),Integer)
            End Get
            Set
                Me(Me.tableKostenträger.ZuschlagGrundleistungProzentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZuschlagGrundleistungBetrag() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.ZuschlagGrundleistungBetragColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.ZuschlagGrundleistungBetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FreieBuchungBetragNetto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.FreieBuchungBetragNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.FreieBuchungBetragNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlient() As String
            Get
                Try 
                    Return CType(Me(Me.tableKostenträger.IDKlientColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKlient in Tabelle Kostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenträger.IDKlientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Ueberweisungsbetrag() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.UeberweisungsbetragColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.UeberweisungsbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Rechnung() As String
            Get
                Return CType(Me(Me.tableKostenträger.RechnungColumn),String)
            End Get
            Set
                Me(Me.tableKostenträger.RechnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property sumNetto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.sumNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.sumNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property sumBrutto() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.sumBruttoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.sumBruttoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ForderungBruttoAlt() As Decimal
            Get
                Return CType(Me(Me.tableKostenträger.ForderungBruttoAltColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenträger.ForderungBruttoAltColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FIBU() As String
            Get
                Return CType(Me(Me.tableKostenträger.FIBUColumn),String)
            End Get
            Set
                Me(Me.tableKostenträger.FIBUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlinik() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableKostenträger.IDKlinikColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKlinik in Tabelle Kostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenträger.IDKlinikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KlientRow() As KlientRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Klient_Kostenträger")),KlientRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Klient_Kostenträger"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsvonNull() As Boolean
            Return Me.IsNull(Me.tableKostenträger.vonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetvonNull()
            Me(Me.tableKostenträger.vonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsbisNull() As Boolean
            Return Me.IsNull(Me.tableKostenträger.bisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetbisNull()
            Me(Me.tableKostenträger.bisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKlientNull() As Boolean
            Return Me.IsNull(Me.tableKostenträger.IDKlientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKlientNull()
            Me(Me.tableKostenträger.IDKlientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKlinikNull() As Boolean
            Return Me.IsNull(Me.tableKostenträger.IDKlinikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKlinikNull()
            Me(Me.tableKostenträger.IDKlinikColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetZahlerRows() As ZahlerRow()
            If (Me.Table.ChildRelations("Kostenträger_Zahler") Is Nothing) Then
                Return New ZahlerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Kostenträger_Zahler")),ZahlerRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetKostenKostenträgerRows() As KostenKostenträgerRow()
            If (Me.Table.ChildRelations("Kostenträger_Rechnungszeilen") Is Nothing) Then
                Return New KostenKostenträgerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Kostenträger_Rechnungszeilen")),KostenKostenträgerRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetMWStBasenRows() As MWStBasenRow()
            If (Me.Table.ChildRelations("Kostenträger_MWStBasen") Is Nothing) Then
                Return New MWStBasenRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Kostenträger_MWStBasen")),MWStBasenRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LeistungenRow
        Inherits Global.System.Data.DataRow
        
        Private tableLeistungen As LeistungenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLeistungen = CType(Me.Table,LeistungenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableLeistungen.IDColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistungskatalog() As String
            Get
                Return CType(Me(Me.tableLeistungen.IDLeistungskatalogColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.IDLeistungskatalogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDSonderleistung() As String
            Get
                Return CType(Me(Me.tableLeistungen.IDSonderleistungColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.IDSonderleistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDManBuch() As String
            Get
                Return CType(Me(Me.tableLeistungen.IDManBuchColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.IDManBuchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostentraegerFrBuch() As String
            Get
                Return CType(Me(Me.tableLeistungen.IDKostentraegerFrBuchColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.IDKostentraegerFrBuchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LeistungBezeichnung() As String
            Get
                Return CType(Me(Me.tableLeistungen.LeistungBezeichnungColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.LeistungBezeichnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Von() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLeistungen.VonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Von in Tabelle Leistungen ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLeistungen.VonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bis() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLeistungen.BisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Bis in Tabelle Leistungen ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLeistungen.BisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MonatsleistungJN() As Boolean
            Get
                Return CType(Me(Me.tableLeistungen.MonatsleistungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableLeistungen.MonatsleistungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nummer() As Integer
            Get
                Return CType(Me(Me.tableLeistungen.NummerColumn),Integer)
            End Get
            Set
                Me(Me.tableLeistungen.NummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Leistungsgruppe() As Integer
            Get
                Return CType(Me(Me.tableLeistungen.LeistungsgruppeColumn),Integer)
            End Get
            Set
                Me(Me.tableLeistungen.LeistungsgruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MonatspreisNetto() As Decimal
            Get
                Return CType(Me(Me.tableLeistungen.MonatspreisNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableLeistungen.MonatspreisNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TagespreisNetto() As Decimal
            Get
                Return CType(Me(Me.tableLeistungen.TagespreisNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableLeistungen.TagespreisNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TagespreisReduziertNetto() As Decimal
            Get
                Return CType(Me(Me.tableLeistungen.TagespreisReduziertNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableLeistungen.TagespreisReduziertNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStSatz() As Integer
            Get
                Return CType(Me(Me.tableLeistungen.MWStSatzColumn),Integer)
            End Get
            Set
                Me(Me.tableLeistungen.MWStSatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ZeitraumDetail() As String
            Get
                Return CType(Me(Me.tableLeistungen.ZeitraumDetailColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.ZeitraumDetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OffenNetto() As Decimal
            Get
                Return CType(Me(Me.tableLeistungen.OffenNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableLeistungen.OffenNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Anzahl() As Integer
            Get
                Return CType(Me(Me.tableLeistungen.AnzahlColumn),Integer)
            End Get
            Set
                Me(Me.tableLeistungen.AnzahlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Kosten() As Decimal
            Get
                Return CType(Me(Me.tableLeistungen.KostenColumn),Decimal)
            End Get
            Set
                Me(Me.tableLeistungen.KostenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FIBU() As String
            Get
                Return CType(Me(Me.tableLeistungen.FIBUColumn),String)
            End Get
            Set
                Me(Me.tableLeistungen.FIBUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVonNull() As Boolean
            Return Me.IsNull(Me.tableLeistungen.VonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVonNull()
            Me(Me.tableLeistungen.VonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBisNull() As Boolean
            Return Me.IsNull(Me.tableLeistungen.BisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBisNull()
            Me(Me.tableLeistungen.BisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTagesleistungenRows() As TagesleistungenRow()
            If (Me.Table.ChildRelations("Leistungen_Tagesleistungen") Is Nothing) Then
                Return New TagesleistungenRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Leistungen_Tagesleistungen")),TagesleistungenRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetZahlerRows() As ZahlerRow()
            If (Me.Table.ChildRelations("Leistungen_Zahler") Is Nothing) Then
                Return New ZahlerRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Leistungen_Zahler")),ZahlerRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MonateRow
        Inherits Global.System.Data.DataRow
        
        Private tableMonate As MonateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMonate = CType(Me.Table,MonateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableMonate.IDColumn),String)
            End Get
            Set
                Me(Me.tableMonate.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Erster() As Integer
            Get
                Return CType(Me(Me.tableMonate.ErsterColumn),Integer)
            End Get
            Set
                Me(Me.tableMonate.ErsterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Letzter() As Integer
            Get
                Return CType(Me(Me.tableMonate.LetzterColumn),Integer)
            End Get
            Set
                Me(Me.tableMonate.LetzterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Beginn() As Date
            Get
                Return CType(Me(Me.tableMonate.BeginnColumn),Date)
            End Get
            Set
                Me(Me.tableMonate.BeginnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Ende() As Date
            Get
                Return CType(Me(Me.tableMonate.EndeColumn),Date)
            End Get
            Set
                Me(Me.tableMonate.EndeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RechDatum() As Date
            Get
                Return CType(Me(Me.tableMonate.RechDatumColumn),Date)
            End Get
            Set
                Me(Me.tableMonate.RechDatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetTageRows() As TageRow()
            If (Me.Table.ChildRelations("Monate_Tage") Is Nothing) Then
                Return New TageRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Monate_Tage")),TageRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MWStBasenRow
        Inherits Global.System.Data.DataRow
        
        Private tableMWStBasen As MWStBasenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMWStBasen = CType(Me.Table,MWStBasenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableMWStBasen.IDColumn),String)
            End Get
            Set
                Me(Me.tableMWStBasen.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostIntern() As String
            Get
                Return CType(Me(Me.tableMWStBasen.IDKostInternColumn),String)
            End Get
            Set
                Me(Me.tableMWStBasen.IDKostInternColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWSt() As Decimal
            Get
                Return CType(Me(Me.tableMWStBasen.MWStColumn),Decimal)
            End Get
            Set
                Me(Me.tableMWStBasen.MWStColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NettoBetrag() As Decimal
            Get
                Return CType(Me(Me.tableMWStBasen.NettoBetragColumn),Decimal)
            End Get
            Set
                Me(Me.tableMWStBasen.NettoBetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStSatz() As Decimal
            Get
                Return CType(Me(Me.tableMWStBasen.MWStSatzColumn),Decimal)
            End Get
            Set
                Me(Me.tableMWStBasen.MWStSatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BruttoBetrag() As Decimal
            Get
                Return CType(Me(Me.tableMWStBasen.BruttoBetragColumn),Decimal)
            End Get
            Set
                Me(Me.tableMWStBasen.BruttoBetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KontoExport() As String
            Get
                Return CType(Me(Me.tableMWStBasen.KontoExportColumn),String)
            End Get
            Set
                Me(Me.tableMWStBasen.KontoExportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KostenträgerRow() As KostenträgerRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Kostenträger_MWStBasen")),KostenträgerRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Kostenträger_MWStBasen"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TagesleistungenRow
        Inherits Global.System.Data.DataRow
        
        Private tableTagesleistungen As TagesleistungenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTagesleistungen = CType(Me.Table,TagesleistungenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nummer() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.NummerColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.NummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistungskatalog() As String
            Get
                Return CType(Me(Me.tableTagesleistungen.IDLeistungskatalogColumn),String)
            End Get
            Set
                Me(Me.tableTagesleistungen.IDLeistungskatalogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LeistungBezeichnung() As String
            Get
                Return CType(Me(Me.tableTagesleistungen.LeistungBezeichnungColumn),String)
            End Get
            Set
                Me(Me.tableTagesleistungen.LeistungBezeichnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Leistungsgruppe() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.LeistungsgruppeColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.LeistungsgruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Datum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTagesleistungen.DatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Datum in Tabelle Tagesleistungen ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTagesleistungen.DatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Wochentag() As String
            Get
                Return CType(Me(Me.tableTagesleistungen.WochentagColumn),String)
            End Get
            Set
                Me(Me.tableTagesleistungen.WochentagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tag() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.TagColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.TagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Monat() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.MonatColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.MonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Jahr() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.JahrColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.JahrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TagespreisNetto() As Decimal
            Get
                Return CType(Me(Me.tableTagesleistungen.TagespreisNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTagesleistungen.TagespreisNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TagespreisReduziertNetto() As Decimal
            Get
                Return CType(Me(Me.tableTagesleistungen.TagespreisReduziertNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTagesleistungen.TagespreisReduziertNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStSatz() As Integer
            Get
                Return CType(Me(Me.tableTagesleistungen.MWStSatzColumn),Integer)
            End Get
            Set
                Me(Me.tableTagesleistungen.MWStSatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IstPreisNetto() As Decimal
            Get
                Return CType(Me(Me.tableTagesleistungen.IstPreisNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTagesleistungen.IstPreisNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReduziertJN() As Boolean
            Get
                Return CType(Me(Me.tableTagesleistungen.ReduziertJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableTagesleistungen.ReduziertJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OffenNetto() As Decimal
            Get
                Return CType(Me(Me.tableTagesleistungen.OffenNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTagesleistungen.OffenNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistung() As String
            Get
                Return CType(Me(Me.tableTagesleistungen.IDLeistungColumn),String)
            End Get
            Set
                Me(Me.tableTagesleistungen.IDLeistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReduziertJNTagsatzliste() As Boolean
            Get
                Return CType(Me(Me.tableTagesleistungen.ReduziertJNTagsatzlisteColumn),Boolean)
            End Get
            Set
                Me(Me.tableTagesleistungen.ReduziertJNTagsatzlisteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Kosten() As Decimal
            Get
                Return CType(Me(Me.tableTagesleistungen.KostenColumn),Decimal)
            End Get
            Set
                Me(Me.tableTagesleistungen.KostenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LeistungenRow() As LeistungenRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Leistungen_Tagesleistungen")),LeistungenRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Leistungen_Tagesleistungen"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDatumNull() As Boolean
            Return Me.IsNull(Me.tableTagesleistungen.DatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDatumNull()
            Me(Me.tableTagesleistungen.DatumColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ZahlerRow
        Inherits Global.System.Data.DataRow
        
        Private tableZahler As ZahlerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableZahler = CType(Me.Table,ZahlerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NettoBetragProLeistung() As Decimal
            Get
                Return CType(Me(Me.tableZahler.NettoBetragProLeistungColumn),Decimal)
            End Get
            Set
                Me(Me.tableZahler.NettoBetragProLeistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStProLeistung() As Decimal
            Get
                Return CType(Me(Me.tableZahler.MWStProLeistungColumn),Decimal)
            End Get
            Set
                Me(Me.tableZahler.MWStProLeistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostIntern() As String
            Get
                Return CType(Me(Me.tableZahler.IDKostInternColumn),String)
            End Get
            Set
                Me(Me.tableZahler.IDKostInternColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistung() As String
            Get
                Return CType(Me(Me.tableZahler.IDLeistungColumn),String)
            End Get
            Set
                Me(Me.tableZahler.IDLeistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LeistungenRow() As LeistungenRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Leistungen_Zahler")),LeistungenRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Leistungen_Zahler"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KostenträgerRow() As KostenträgerRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Kostenträger_Zahler")),KostenträgerRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Kostenträger_Zahler"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TageRow
        Inherits Global.System.Data.DataRow
        
        Private tableTage As TageDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTage = CType(Me.Table,TageDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Datum() As Date
            Get
                Return CType(Me(Me.tableTage.DatumColumn),Date)
            End Get
            Set
                Me(Me.tableTage.DatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Wochentag() As String
            Get
                Return CType(Me(Me.tableTage.WochentagColumn),String)
            End Get
            Set
                Me(Me.tableTage.WochentagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tag() As Integer
            Get
                Return CType(Me(Me.tableTage.TagColumn),Integer)
            End Get
            Set
                Me(Me.tableTage.TagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Monat() As Integer
            Get
                Return CType(Me(Me.tableTage.MonatColumn),Integer)
            End Get
            Set
                Me(Me.tableTage.MonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Jahr() As Integer
            Get
                Return CType(Me(Me.tableTage.JahrColumn),Integer)
            End Get
            Set
                Me(Me.tableTage.JahrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Anwesenheitsstatus() As Integer
            Get
                Return CType(Me(Me.tableTage.AnwesenheitsstatusColumn),Integer)
            End Get
            Set
                Me(Me.tableTage.AnwesenheitsstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Abwesenheitsstatus() As Integer
            Get
                Return CType(Me(Me.tableTage.AbwesenheitsstatusColumn),Integer)
            End Get
            Set
                Me(Me.tableTage.AbwesenheitsstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KürzungJN() As Boolean
            Get
                Return CType(Me(Me.tableTage.KürzungJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableTage.KürzungJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDMonat() As String
            Get
                Return CType(Me(Me.tableTage.IDMonatColumn),String)
            End Get
            Set
                Me(Me.tableTage.IDMonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDTagsatz() As String
            Get
                Return CType(Me(Me.tableTage.IDTagsatzColumn),String)
            End Get
            Set
                Me(Me.tableTage.IDTagsatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Grund() As String
            Get
                Return CType(Me(Me.tableTage.GrundColumn),String)
            End Get
            Set
                Me(Me.tableTage.GrundColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AbwVon() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTage.AbwVonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AbwVon in Tabelle Tage ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTage.AbwVonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AbwBis() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTage.AbwBisColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AbwBis in Tabelle Tage ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTage.AbwBisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDAbwesenheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableTage.IDAbwesenheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDAbwesenheit in Tabelle Tage ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTage.IDAbwesenheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MonateRow() As MonateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Monate_Tage")),MonateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Monate_Tage"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAbwVonNull() As Boolean
            Return Me.IsNull(Me.tableTage.AbwVonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAbwVonNull()
            Me(Me.tableTage.AbwVonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAbwBisNull() As Boolean
            Return Me.IsNull(Me.tableTage.AbwBisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAbwBisNull()
            Me(Me.tableTage.AbwBisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDAbwesenheitNull() As Boolean
            Return Me.IsNull(Me.tableTage.IDAbwesenheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDAbwesenheitNull()
            Me(Me.tableTage.IDAbwesenheitColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KostenKostenträgerRow
        Inherits Global.System.Data.DataRow
        
        Private tableKostenKostenträger As KostenKostenträgerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKostenKostenträger = CType(Me.Table,KostenKostenträgerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostIntern() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDKostInternColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDKostInternColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKost() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDKostColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDKostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property lfdNr() As Integer
            Get
                Return CType(Me(Me.tableKostenKostenträger.lfdNrColumn),Integer)
            End Get
            Set
                Me(Me.tableKostenKostenträger.lfdNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Kennung() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.KennungColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.KennungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Anzahl() As Integer
            Get
                Return CType(Me(Me.tableKostenKostenträger.AnzahlColumn),Integer)
            End Get
            Set
                Me(Me.tableKostenKostenträger.AnzahlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bezeichnung() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.BezeichnungColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.BezeichnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Netto() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.NettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.NettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWSt() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.MWStColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.MWStColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Brutto() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.BruttoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.BruttoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStSatz() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.MWStSatzColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.MWStSatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tempNetto() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.tempNettoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.tempNettoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tempMWSt() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.tempMWStColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.tempMWStColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tempBrutto() As Decimal
            Get
                Return CType(Me(Me.tableKostenKostenträger.tempBruttoColumn),Decimal)
            End Get
            Set
                Me(Me.tableKostenKostenträger.tempBruttoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property tempKontoExport() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.tempKontoExportColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.tempKontoExportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistung() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDLeistungColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDLeistungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FIBU() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.FIBUColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.FIBUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDLeistungsKatalog() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDLeistungsKatalogColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDLeistungsKatalogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDSonderLeistungskatalog() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDSonderLeistungskatalogColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDSonderLeistungskatalogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlient() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.IDKlientColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDKlientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Classification() As String
            Get
                Return CType(Me(Me.tableKostenKostenträger.ClassificationColumn),String)
            End Get
            Set
                Me(Me.tableKostenKostenträger.ClassificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDManBuch() As String
            Get
                Try 
                    Return CType(Me(Me.tableKostenKostenträger.IDManBuchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDManBuch in Tabelle KostenKostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDManBuchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDBill() As String
            Get
                Try 
                    Return CType(Me(Me.tableKostenKostenträger.IDBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDBill in Tabelle KostenKostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostInternBill() As String
            Get
                Try 
                    Return CType(Me(Me.tableKostenKostenträger.IDKostInternBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKostInternBill in Tabelle KostenKostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDKostInternBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostBill() As String
            Get
                Try 
                    Return CType(Me(Me.tableKostenKostenträger.IDKostBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKostBill in Tabelle KostenKostenträger ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKostenKostenträger.IDKostBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KostenträgerRow() As KostenträgerRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Kostenträger_Rechnungszeilen")),KostenträgerRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Kostenträger_Rechnungszeilen"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDManBuchNull() As Boolean
            Return Me.IsNull(Me.tableKostenKostenträger.IDManBuchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDManBuchNull()
            Me(Me.tableKostenKostenträger.IDManBuchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDBillNull() As Boolean
            Return Me.IsNull(Me.tableKostenKostenträger.IDBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDBillNull()
            Me(Me.tableKostenKostenträger.IDBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKostInternBillNull() As Boolean
            Return Me.IsNull(Me.tableKostenKostenträger.IDKostInternBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKostInternBillNull()
            Me(Me.tableKostenKostenträger.IDKostInternBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKostBillNull() As Boolean
            Return Me.IsNull(Me.tableKostenKostenträger.IDKostBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKostBillNull()
            Me(Me.tableKostenKostenträger.IDKostBillColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class bookingsRow
        Inherits Global.System.Data.DataRow
        
        Private tablebookings As bookingsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablebookings = CType(Me.Table,bookingsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tablebookings.IDColumn),String)
            End Get
            Set
                Me(Me.tablebookings.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Buchungsdatum() As Date
            Get
                Return CType(Me(Me.tablebookings.BuchungsdatumColumn),Date)
            End Get
            Set
                Me(Me.tablebookings.BuchungsdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Text() As String
            Get
                Return CType(Me(Me.tablebookings.TextColumn),String)
            End Get
            Set
                Me(Me.tablebookings.TextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sollkonto() As String
            Get
                Return CType(Me(Me.tablebookings.SollkontoColumn),String)
            End Get
            Set
                Me(Me.tablebookings.SollkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Habenkonto() As String
            Get
                Return CType(Me(Me.tablebookings.HabenkontoColumn),String)
            End Get
            Set
                Me(Me.tablebookings.HabenkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Betrag() As Decimal
            Get
                Return CType(Me(Me.tablebookings.BetragColumn),Decimal)
            End Get
            Set
                Me(Me.tablebookings.BetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MWStSatz() As Integer
            Get
                Return CType(Me(Me.tablebookings.MWStSatzColumn),Integer)
            End Get
            Set
                Me(Me.tablebookings.MWStSatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RechNr() As String
            Get
                Return CType(Me(Me.tablebookings.RechNrColumn),String)
            End Get
            Set
                Me(Me.tablebookings.RechNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlient() As String
            Get
                Return CType(Me(Me.tablebookings.IDKlientColumn),String)
            End Get
            Set
                Me(Me.tablebookings.IDKlientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKostenträger() As String
            Get
                Return CType(Me(Me.tablebookings.IDKostenträgerColumn),String)
            End Get
            Set
                Me(Me.tablebookings.IDKostenträgerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Erstellt() As String
            Get
                Return CType(Me(Me.tablebookings.ErstelltColumn),String)
            End Get
            Set
                Me(Me.tablebookings.ErstelltColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ErstellAm() As Date
            Get
                Return CType(Me(Me.tablebookings.ErstellAmColumn),Date)
            End Get
            Set
                Me(Me.tablebookings.ErstellAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IDKlinik() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tablebookings.IDKlinikColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDKlinik in Tabelle bookings ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebookings.IDKlinikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Soll() As Decimal
            Get
                Return CType(Me(Me.tablebookings.SollColumn),Decimal)
            End Get
            Set
                Me(Me.tablebookings.SollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Haben() As Decimal
            Get
                Return CType(Me(Me.tablebookings.HabenColumn),Decimal)
            End Get
            Set
                Me(Me.tablebookings.HabenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDKlinikNull() As Boolean
            Return Me.IsNull(Me.tablebookings.IDKlinikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDKlinikNull()
            Me(Me.tablebookings.IDKlinikColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class AbwesenheitenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AbwesenheitenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As AbwesenheitenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As AbwesenheitenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class AufenthalteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AufenthalteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As AufenthalteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As AufenthalteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class KlientRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KlientRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As KlientRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As KlientRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class KostenträgerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KostenträgerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As KostenträgerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As KostenträgerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class LeistungenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LeistungenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As LeistungenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As LeistungenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MonateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MonateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MonateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MonateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MWStBasenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MWStBasenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MWStBasenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MWStBasenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TagesleistungenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TagesleistungenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TagesleistungenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TagesleistungenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ZahlerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ZahlerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ZahlerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ZahlerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TageRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TageRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TageRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class KostenKostenträgerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KostenKostenträgerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As KostenKostenträgerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As KostenKostenträgerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class bookingsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As bookingsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As bookingsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As bookingsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
