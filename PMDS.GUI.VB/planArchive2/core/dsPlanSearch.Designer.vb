'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPlanSearch"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPlanSearch
    Inherits Global.System.Data.DataSet
    
    Private tableplan As planDataTable
    
    Private tableplanBereich As planBereichDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("plan")) Is Nothing) Then
                MyBase.Tables.Add(New planDataTable(ds.Tables("plan")))
            End If
            If (Not (ds.Tables("planBereich")) Is Nothing) Then
                MyBase.Tables.Add(New planBereichDataTable(ds.Tables("planBereich")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property plan() As planDataTable
        Get
            Return Me.tableplan
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property planBereich() As planBereichDataTable
        Get
            Return Me.tableplanBereich
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPlanSearch = CType(MyBase.Clone,dsPlanSearch)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("plan")) Is Nothing) Then
                MyBase.Tables.Add(New planDataTable(ds.Tables("plan")))
            End If
            If (Not (ds.Tables("planBereich")) Is Nothing) Then
                MyBase.Tables.Add(New planBereichDataTable(ds.Tables("planBereich")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableplan = CType(MyBase.Tables("plan"),planDataTable)
        If (initTable = true) Then
            If (Not (Me.tableplan) Is Nothing) Then
                Me.tableplan.InitVars
            End If
        End If
        Me.tableplanBereich = CType(MyBase.Tables("planBereich"),planBereichDataTable)
        If (initTable = true) Then
            If (Not (Me.tableplanBereich) Is Nothing) Then
                Me.tableplanBereich.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPlanSearch"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPlanSearch.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableplan = New planDataTable()
        MyBase.Tables.Add(Me.tableplan)
        Me.tableplanBereich = New planBereichDataTable()
        MyBase.Tables.Add(Me.tableplanBereich)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeplan() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeplanBereich() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPlanSearch = New dsPlanSearch()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub planRowChangeEventHandler(ByVal sender As Object, ByVal e As planRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub planBereichRowChangeEventHandler(ByVal sender As Object, ByVal e As planBereichRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class planDataTable
        Inherits Global.System.Data.TypedTableBase(Of planRow)
        
        Private columnBetreff As Global.System.Data.DataColumn
        
        Private columnBeginntAm As Global.System.Data.DataColumn
        
        Private columnFälligAm As Global.System.Data.DataColumn
        
        Private columnIDArt As Global.System.Data.DataColumn
        
        Private columnPriorität As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnText As Global.System.Data.DataColumn
        
        Private columnZusatz As Global.System.Data.DataColumn
        
        Private columnMailAn As Global.System.Data.DataColumn
        
        Private columnMailCC As Global.System.Data.DataColumn
        
        Private columnhtml As Global.System.Data.DataColumn
        
        Private columnFür As Global.System.Data.DataColumn
        
        Private columngesendetAm As Global.System.Data.DataColumn
        
        Private columnremembJN As Global.System.Data.DataColumn
        
        Private columnremembMinut As Global.System.Data.DataColumn
        
        Private columnwichtig As Global.System.Data.DataColumn
        
        Private columnTeilnehmer As Global.System.Data.DataColumn
        
        Private columnErstelltVon As Global.System.Data.DataColumn
        
        Private columnErstelltAm As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIDActivity As Global.System.Data.DataColumn
        
        Private columnIDStatus As Global.System.Data.DataColumn
        
        Private columnIDTyp As Global.System.Data.DataColumn
        
        Private columnKommStatus As Global.System.Data.DataColumn
        
        Private columndb As Global.System.Data.DataColumn
        
        Private columndeleted As Global.System.Data.DataColumn
        
        Private columnanzObjects As Global.System.Data.DataColumn
        
        Private columndesign As Global.System.Data.DataColumn
        
        Private columnMailBcc As Global.System.Data.DataColumn
        
        Private columnIDUserAccount As Global.System.Data.DataColumn
        
        Private columnMailFrom As Global.System.Data.DataColumn
        
        Private columnreaded As Global.System.Data.DataColumn
        
        Private columnempfangenAm As Global.System.Data.DataColumn
        
        Private columnMessageId As Global.System.Data.DataColumn
        
        Private columnanzAnhänge As Global.System.Data.DataColumn
        
        Private columnIDPlanMain As Global.System.Data.DataColumn
        
        Private columnReplyTxt As Global.System.Data.DataColumn
        
        Private columnIsOwner As Global.System.Data.DataColumn
        
        Private columnAwaitingResponse As Global.System.Data.DataColumn
        
        Private columnIDFolder As Global.System.Data.DataColumn
        
        Private columnSendWithPostOfficeBoxForAll As Global.System.Data.DataColumn
        
        Private columnOutlookAPI As Global.System.Data.DataColumn
        
        Private columnConversationID As Global.System.Data.DataColumn
        
        Private columnIDoutlook As Global.System.Data.DataColumn
        
        Private columnIDoutlookTicks As Global.System.Data.DataColumn
        
        Private columnCategory As Global.System.Data.DataColumn
        
        Private columnFolder As Global.System.Data.DataColumn
        
        Private columnLastChangeITSCont As Global.System.Data.DataColumn
        
        Private columnLastSyncToExchange As Global.System.Data.DataColumn
        
        Private columnWochentage As Global.System.Data.DataColumn
        
        Private columnnTenMonat As Global.System.Data.DataColumn
        
        Private columnSerienterminType As Global.System.Data.DataColumn
        
        Private columnIDSerientermin As Global.System.Data.DataColumn
        
        Private columnTagWochenMonat As Global.System.Data.DataColumn
        
        Private columnWiedWertJeden As Global.System.Data.DataColumn
        
        Private columnEndetAm As Global.System.Data.DataColumn
        
        Private columnDauer As Global.System.Data.DataColumn
        
        Private columnGanzerTag As Global.System.Data.DataColumn
        
        Private columnIsSerientermin As Global.System.Data.DataColumn
        
        Private columnSerienterminEndetAm As Global.System.Data.DataColumn
        
        Private columnPatientName As Global.System.Data.DataColumn
        
        Private columnIDPatient As Global.System.Data.DataColumn
        
        Private columnWithPatients As Global.System.Data.DataColumn
        
        Private columnDauerStr As Global.System.Data.DataColumn
        
        Private columnObjectStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "plan"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BetreffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetreff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BeginntAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeginntAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FälligAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFälligAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDArtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDArt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PrioritätColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorität
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZusatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZusatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MailAnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMailAn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MailCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMailCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property htmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhtml
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FürColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFür
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property gesendetAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngesendetAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property remembJNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnremembJN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property remembMinutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnremembMinut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property wichtigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwichtig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TeilnehmerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeilnehmer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ErstelltVonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErstelltVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ErstelltAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErstelltAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDActivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDActivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KommStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKommStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property deletedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeleted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property anzObjectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanzObjects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property designColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MailBccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMailBcc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDUserAccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDUserAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MailFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMailFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property readedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreaded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property empfangenAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnempfangenAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MessageIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property anzAnhängeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanzAnhänge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDPlanMainColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDPlanMain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReplyTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplyTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsOwnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsOwner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AwaitingResponseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAwaitingResponse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDFolderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDFolder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SendWithPostOfficeBoxForAllColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSendWithPostOfficeBoxForAll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OutlookAPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlookAPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConversationIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConversationID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDoutlookColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDoutlook
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDoutlookTicksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDoutlookTicks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FolderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastChangeITSContColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastChangeITSCont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastSyncToExchangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastSyncToExchange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WochentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWochentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nTenMonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnTenMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SerienterminTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerienterminType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDSerienterminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSerientermin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TagWochenMonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagWochenMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WiedWertJedenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWiedWertJeden
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EndetAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndetAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DauerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDauer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GanzerTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGanzerTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsSerienterminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSerientermin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SerienterminEndetAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerienterminEndetAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PatientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDPatientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDPatient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WithPatientsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWithPatients
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DauerStrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDauerStr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ObjectStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObjectStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As planRow
            Get
                Return CType(Me.Rows(index),planRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planRowChanging As planRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planRowChanged As planRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planRowDeleting As planRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planRowDeleted As planRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddplanRow(ByVal row As planRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddplanRow( _
                    ByVal Betreff As String,  _
                    ByVal BeginntAm As Date,  _
                    ByVal FälligAm As Date,  _
                    ByVal IDArt As Integer,  _
                    ByVal Priorität As String,  _
                    ByVal Status As String,  _
                    ByVal Text As String,  _
                    ByVal Zusatz As String,  _
                    ByVal MailAn As String,  _
                    ByVal MailCC As String,  _
                    ByVal html As Boolean,  _
                    ByVal Für As String,  _
                    ByVal gesendetAm As Date,  _
                    ByVal remembJN As Boolean,  _
                    ByVal remembMinut As Integer,  _
                    ByVal wichtig As Boolean,  _
                    ByVal Teilnehmer As String,  _
                    ByVal ErstelltVon As String,  _
                    ByVal ErstelltAm As Date,  _
                    ByVal ID As System.Guid,  _
                    ByVal IDActivity As System.Guid,  _
                    ByVal IDStatus As String,  _
                    ByVal IDTyp As String,  _
                    ByVal KommStatus As String,  _
                    ByVal db() As Byte,  _
                    ByVal deleted As Boolean,  _
                    ByVal anzObjects As Integer,  _
                    ByVal design As Boolean,  _
                    ByVal MailBcc As String,  _
                    ByVal IDUserAccount As System.Guid,  _
                    ByVal MailFrom As String,  _
                    ByVal readed As Boolean,  _
                    ByVal empfangenAm As Date,  _
                    ByVal MessageId As String,  _
                    ByVal anzAnhänge As Integer,  _
                    ByVal IDPlanMain As System.Guid,  _
                    ByVal ReplyTxt As String,  _
                    ByVal IsOwner As Boolean,  _
                    ByVal AwaitingResponse As String,  _
                    ByVal IDFolder As Integer,  _
                    ByVal SendWithPostOfficeBoxForAll As Boolean,  _
                    ByVal OutlookAPI As Boolean,  _
                    ByVal ConversationID As String,  _
                    ByVal IDoutlook As String,  _
                    ByVal IDoutlookTicks As String,  _
                    ByVal Category As String,  _
                    ByVal Folder As String,  _
                    ByVal LastChangeITSCont As Date,  _
                    ByVal LastSyncToExchange As Date,  _
                    ByVal Wochentage As String,  _
                    ByVal nTenMonat As Integer,  _
                    ByVal SerienterminType As String,  _
                    ByVal IDSerientermin As System.Guid,  _
                    ByVal TagWochenMonat As String,  _
                    ByVal WiedWertJeden As Integer,  _
                    ByVal EndetAm As Date,  _
                    ByVal Dauer As Integer,  _
                    ByVal GanzerTag As Boolean,  _
                    ByVal IsSerientermin As Boolean,  _
                    ByVal SerienterminEndetAm As Date,  _
                    ByVal PatientName As String,  _
                    ByVal IDPatient As System.Guid,  _
                    ByVal WithPatients As Integer,  _
                    ByVal DauerStr As String,  _
                    ByVal ObjectStatus As String) As planRow
            Dim rowplanRow As planRow = CType(Me.NewRow,planRow)
            Dim columnValuesArray() As Object = New Object() {Betreff, BeginntAm, FälligAm, IDArt, Priorität, Status, Text, Zusatz, MailAn, MailCC, html, Für, gesendetAm, remembJN, remembMinut, wichtig, Teilnehmer, ErstelltVon, ErstelltAm, ID, IDActivity, IDStatus, IDTyp, KommStatus, db, deleted, anzObjects, design, MailBcc, IDUserAccount, MailFrom, readed, empfangenAm, MessageId, anzAnhänge, IDPlanMain, ReplyTxt, IsOwner, AwaitingResponse, IDFolder, SendWithPostOfficeBoxForAll, OutlookAPI, ConversationID, IDoutlook, IDoutlookTicks, Category, Folder, LastChangeITSCont, LastSyncToExchange, Wochentage, nTenMonat, SerienterminType, IDSerientermin, TagWochenMonat, WiedWertJeden, EndetAm, Dauer, GanzerTag, IsSerientermin, SerienterminEndetAm, PatientName, IDPatient, WithPatients, DauerStr, ObjectStatus}
            rowplanRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowplanRow)
            Return rowplanRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As planDataTable = CType(MyBase.Clone,planDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New planDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBetreff = MyBase.Columns("Betreff")
            Me.columnBeginntAm = MyBase.Columns("BeginntAm")
            Me.columnFälligAm = MyBase.Columns("FälligAm")
            Me.columnIDArt = MyBase.Columns("IDArt")
            Me.columnPriorität = MyBase.Columns("Priorität")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnText = MyBase.Columns("Text")
            Me.columnZusatz = MyBase.Columns("Zusatz")
            Me.columnMailAn = MyBase.Columns("MailAn")
            Me.columnMailCC = MyBase.Columns("MailCC")
            Me.columnhtml = MyBase.Columns("html")
            Me.columnFür = MyBase.Columns("Für")
            Me.columngesendetAm = MyBase.Columns("gesendetAm")
            Me.columnremembJN = MyBase.Columns("remembJN")
            Me.columnremembMinut = MyBase.Columns("remembMinut")
            Me.columnwichtig = MyBase.Columns("wichtig")
            Me.columnTeilnehmer = MyBase.Columns("Teilnehmer")
            Me.columnErstelltVon = MyBase.Columns("ErstelltVon")
            Me.columnErstelltAm = MyBase.Columns("ErstelltAm")
            Me.columnID = MyBase.Columns("ID")
            Me.columnIDActivity = MyBase.Columns("IDActivity")
            Me.columnIDStatus = MyBase.Columns("IDStatus")
            Me.columnIDTyp = MyBase.Columns("IDTyp")
            Me.columnKommStatus = MyBase.Columns("KommStatus")
            Me.columndb = MyBase.Columns("db")
            Me.columndeleted = MyBase.Columns("deleted")
            Me.columnanzObjects = MyBase.Columns("anzObjects")
            Me.columndesign = MyBase.Columns("design")
            Me.columnMailBcc = MyBase.Columns("MailBcc")
            Me.columnIDUserAccount = MyBase.Columns("IDUserAccount")
            Me.columnMailFrom = MyBase.Columns("MailFrom")
            Me.columnreaded = MyBase.Columns("readed")
            Me.columnempfangenAm = MyBase.Columns("empfangenAm")
            Me.columnMessageId = MyBase.Columns("MessageId")
            Me.columnanzAnhänge = MyBase.Columns("anzAnhänge")
            Me.columnIDPlanMain = MyBase.Columns("IDPlanMain")
            Me.columnReplyTxt = MyBase.Columns("ReplyTxt")
            Me.columnIsOwner = MyBase.Columns("IsOwner")
            Me.columnAwaitingResponse = MyBase.Columns("AwaitingResponse")
            Me.columnIDFolder = MyBase.Columns("IDFolder")
            Me.columnSendWithPostOfficeBoxForAll = MyBase.Columns("SendWithPostOfficeBoxForAll")
            Me.columnOutlookAPI = MyBase.Columns("OutlookAPI")
            Me.columnConversationID = MyBase.Columns("ConversationID")
            Me.columnIDoutlook = MyBase.Columns("IDoutlook")
            Me.columnIDoutlookTicks = MyBase.Columns("IDoutlookTicks")
            Me.columnCategory = MyBase.Columns("Category")
            Me.columnFolder = MyBase.Columns("Folder")
            Me.columnLastChangeITSCont = MyBase.Columns("LastChangeITSCont")
            Me.columnLastSyncToExchange = MyBase.Columns("LastSyncToExchange")
            Me.columnWochentage = MyBase.Columns("Wochentage")
            Me.columnnTenMonat = MyBase.Columns("nTenMonat")
            Me.columnSerienterminType = MyBase.Columns("SerienterminType")
            Me.columnIDSerientermin = MyBase.Columns("IDSerientermin")
            Me.columnTagWochenMonat = MyBase.Columns("TagWochenMonat")
            Me.columnWiedWertJeden = MyBase.Columns("WiedWertJeden")
            Me.columnEndetAm = MyBase.Columns("EndetAm")
            Me.columnDauer = MyBase.Columns("Dauer")
            Me.columnGanzerTag = MyBase.Columns("GanzerTag")
            Me.columnIsSerientermin = MyBase.Columns("IsSerientermin")
            Me.columnSerienterminEndetAm = MyBase.Columns("SerienterminEndetAm")
            Me.columnPatientName = MyBase.Columns("PatientName")
            Me.columnIDPatient = MyBase.Columns("IDPatient")
            Me.columnWithPatients = MyBase.Columns("WithPatients")
            Me.columnDauerStr = MyBase.Columns("DauerStr")
            Me.columnObjectStatus = MyBase.Columns("ObjectStatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBetreff = New Global.System.Data.DataColumn("Betreff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetreff)
            Me.columnBeginntAm = New Global.System.Data.DataColumn("BeginntAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeginntAm)
            Me.columnFälligAm = New Global.System.Data.DataColumn("FälligAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFälligAm)
            Me.columnIDArt = New Global.System.Data.DataColumn("IDArt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDArt)
            Me.columnPriorität = New Global.System.Data.DataColumn("Priorität", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorität)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnText = New Global.System.Data.DataColumn("Text", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnText)
            Me.columnZusatz = New Global.System.Data.DataColumn("Zusatz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZusatz)
            Me.columnMailAn = New Global.System.Data.DataColumn("MailAn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMailAn)
            Me.columnMailCC = New Global.System.Data.DataColumn("MailCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMailCC)
            Me.columnhtml = New Global.System.Data.DataColumn("html", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhtml)
            Me.columnFür = New Global.System.Data.DataColumn("Für", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFür)
            Me.columngesendetAm = New Global.System.Data.DataColumn("gesendetAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngesendetAm)
            Me.columnremembJN = New Global.System.Data.DataColumn("remembJN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnremembJN)
            Me.columnremembMinut = New Global.System.Data.DataColumn("remembMinut", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnremembMinut)
            Me.columnwichtig = New Global.System.Data.DataColumn("wichtig", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwichtig)
            Me.columnTeilnehmer = New Global.System.Data.DataColumn("Teilnehmer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeilnehmer)
            Me.columnErstelltVon = New Global.System.Data.DataColumn("ErstelltVon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErstelltVon)
            Me.columnErstelltAm = New Global.System.Data.DataColumn("ErstelltAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErstelltAm)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIDActivity = New Global.System.Data.DataColumn("IDActivity", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDActivity)
            Me.columnIDStatus = New Global.System.Data.DataColumn("IDStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDStatus)
            Me.columnIDTyp = New Global.System.Data.DataColumn("IDTyp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDTyp)
            Me.columnKommStatus = New Global.System.Data.DataColumn("KommStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKommStatus)
            Me.columndb = New Global.System.Data.DataColumn("db", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndb)
            Me.columndeleted = New Global.System.Data.DataColumn("deleted", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeleted)
            Me.columnanzObjects = New Global.System.Data.DataColumn("anzObjects", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanzObjects)
            Me.columndesign = New Global.System.Data.DataColumn("design", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesign)
            Me.columnMailBcc = New Global.System.Data.DataColumn("MailBcc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMailBcc)
            Me.columnIDUserAccount = New Global.System.Data.DataColumn("IDUserAccount", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDUserAccount)
            Me.columnMailFrom = New Global.System.Data.DataColumn("MailFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMailFrom)
            Me.columnreaded = New Global.System.Data.DataColumn("readed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreaded)
            Me.columnempfangenAm = New Global.System.Data.DataColumn("empfangenAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnempfangenAm)
            Me.columnMessageId = New Global.System.Data.DataColumn("MessageId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageId)
            Me.columnanzAnhänge = New Global.System.Data.DataColumn("anzAnhänge", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanzAnhänge)
            Me.columnIDPlanMain = New Global.System.Data.DataColumn("IDPlanMain", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDPlanMain)
            Me.columnReplyTxt = New Global.System.Data.DataColumn("ReplyTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplyTxt)
            Me.columnIsOwner = New Global.System.Data.DataColumn("IsOwner", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsOwner)
            Me.columnAwaitingResponse = New Global.System.Data.DataColumn("AwaitingResponse", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAwaitingResponse)
            Me.columnIDFolder = New Global.System.Data.DataColumn("IDFolder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDFolder)
            Me.columnSendWithPostOfficeBoxForAll = New Global.System.Data.DataColumn("SendWithPostOfficeBoxForAll", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSendWithPostOfficeBoxForAll)
            Me.columnOutlookAPI = New Global.System.Data.DataColumn("OutlookAPI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlookAPI)
            Me.columnConversationID = New Global.System.Data.DataColumn("ConversationID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConversationID)
            Me.columnIDoutlook = New Global.System.Data.DataColumn("IDoutlook", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDoutlook)
            Me.columnIDoutlookTicks = New Global.System.Data.DataColumn("IDoutlookTicks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDoutlookTicks)
            Me.columnCategory = New Global.System.Data.DataColumn("Category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory)
            Me.columnFolder = New Global.System.Data.DataColumn("Folder", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolder)
            Me.columnLastChangeITSCont = New Global.System.Data.DataColumn("LastChangeITSCont", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastChangeITSCont)
            Me.columnLastSyncToExchange = New Global.System.Data.DataColumn("LastSyncToExchange", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastSyncToExchange)
            Me.columnWochentage = New Global.System.Data.DataColumn("Wochentage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWochentage)
            Me.columnnTenMonat = New Global.System.Data.DataColumn("nTenMonat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnTenMonat)
            Me.columnSerienterminType = New Global.System.Data.DataColumn("SerienterminType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerienterminType)
            Me.columnIDSerientermin = New Global.System.Data.DataColumn("IDSerientermin", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSerientermin)
            Me.columnTagWochenMonat = New Global.System.Data.DataColumn("TagWochenMonat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagWochenMonat)
            Me.columnWiedWertJeden = New Global.System.Data.DataColumn("WiedWertJeden", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWiedWertJeden)
            Me.columnEndetAm = New Global.System.Data.DataColumn("EndetAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndetAm)
            Me.columnDauer = New Global.System.Data.DataColumn("Dauer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDauer)
            Me.columnGanzerTag = New Global.System.Data.DataColumn("GanzerTag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGanzerTag)
            Me.columnIsSerientermin = New Global.System.Data.DataColumn("IsSerientermin", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSerientermin)
            Me.columnSerienterminEndetAm = New Global.System.Data.DataColumn("SerienterminEndetAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerienterminEndetAm)
            Me.columnPatientName = New Global.System.Data.DataColumn("PatientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientName)
            Me.columnIDPatient = New Global.System.Data.DataColumn("IDPatient", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDPatient)
            Me.columnWithPatients = New Global.System.Data.DataColumn("WithPatients", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWithPatients)
            Me.columnDauerStr = New Global.System.Data.DataColumn("DauerStr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDauerStr)
            Me.columnObjectStatus = New Global.System.Data.DataColumn("ObjectStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObjectStatus)
            Me.columnBetreff.AllowDBNull = false
            Me.columnBetreff.MaxLength = 1000
            Me.columnPriorität.AllowDBNull = false
            Me.columnPriorität.MaxLength = 50
            Me.columnStatus.AllowDBNull = false
            Me.columnStatus.MaxLength = 50
            Me.columnText.AllowDBNull = false
            Me.columnZusatz.AllowDBNull = false
            Me.columnZusatz.MaxLength = 1000
            Me.columnMailAn.AllowDBNull = false
            Me.columnMailAn.MaxLength = 6000
            Me.columnMailCC.AllowDBNull = false
            Me.columnMailCC.MaxLength = 6000
            Me.columnhtml.AllowDBNull = false
            Me.columnFür.AllowDBNull = false
            Me.columnFür.MaxLength = 150
            Me.columnremembJN.AllowDBNull = false
            Me.columnwichtig.AllowDBNull = false
            Me.columnTeilnehmer.AllowDBNull = false
            Me.columnTeilnehmer.MaxLength = 600
            Me.columnErstelltVon.AllowDBNull = false
            Me.columnErstelltVon.MaxLength = 150
            Me.columnErstelltAm.AllowDBNull = false
            Me.columnID.AllowDBNull = false
            Me.columnIDStatus.MaxLength = 120
            Me.columnIDTyp.MaxLength = 120
            Me.columnKommStatus.AllowDBNull = false
            Me.columnKommStatus.MaxLength = 40
            Me.columndeleted.AllowDBNull = false
            Me.columnanzObjects.ReadOnly = true
            Me.columndesign.AllowDBNull = false
            Me.columnMailBcc.AllowDBNull = false
            Me.columnMailBcc.MaxLength = 6000
            Me.columnMailFrom.AllowDBNull = false
            Me.columnMailFrom.MaxLength = 1000
            Me.columnreaded.AllowDBNull = false
            Me.columnMessageId.AllowDBNull = false
            Me.columnMessageId.MaxLength = 400
            Me.columnanzAnhänge.ReadOnly = true
            Me.columnReplyTxt.AllowDBNull = false
            Me.columnReplyTxt.MaxLength = 500
            Me.columnIsOwner.AllowDBNull = false
            Me.columnAwaitingResponse.AllowDBNull = false
            Me.columnAwaitingResponse.MaxLength = 500
            Me.columnSendWithPostOfficeBoxForAll.AllowDBNull = false
            Me.columnOutlookAPI.AllowDBNull = false
            Me.columnConversationID.MaxLength = 500
            Me.columnIDoutlook.AllowDBNull = false
            Me.columnIDoutlook.MaxLength = 500
            Me.columnIDoutlookTicks.AllowDBNull = false
            Me.columnIDoutlookTicks.MaxLength = 500
            Me.columnCategory.AllowDBNull = false
            Me.columnFolder.AllowDBNull = false
            Me.columnWochentage.AllowDBNull = false
            Me.columnWochentage.MaxLength = 200
            Me.columnSerienterminType.AllowDBNull = false
            Me.columnSerienterminType.MaxLength = 50
            Me.columnTagWochenMonat.AllowDBNull = false
            Me.columnTagWochenMonat.MaxLength = 50
            Me.columnDauer.AllowDBNull = false
            Me.columnGanzerTag.AllowDBNull = false
            Me.columnIsSerientermin.AllowDBNull = false
            Me.columnPatientName.ReadOnly = true
            Me.columnPatientName.MaxLength = 600
            Me.columnIDPatient.ReadOnly = true
            Me.columnWithPatients.ReadOnly = true
            Me.columnObjectStatus.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewplanRow() As planRow
            Return CType(Me.NewRow,planRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New planRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(planRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.planRowChangedEvent) Is Nothing) Then
                RaiseEvent planRowChanged(Me, New planRowChangeEvent(CType(e.Row,planRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.planRowChangingEvent) Is Nothing) Then
                RaiseEvent planRowChanging(Me, New planRowChangeEvent(CType(e.Row,planRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.planRowDeletedEvent) Is Nothing) Then
                RaiseEvent planRowDeleted(Me, New planRowChangeEvent(CType(e.Row,planRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.planRowDeletingEvent) Is Nothing) Then
                RaiseEvent planRowDeleting(Me, New planRowChangeEvent(CType(e.Row,planRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveplanRow(ByVal row As planRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPlanSearch = New dsPlanSearch()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "planDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class planBereichDataTable
        Inherits Global.System.Data.TypedTableBase(Of planBereichRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnBetreff As Global.System.Data.DataColumn
        
        Private columnBeginntAm As Global.System.Data.DataColumn
        
        Private columnEndetAm As Global.System.Data.DataColumn
        
        Private columnlstAbteilungen As Global.System.Data.DataColumn
        
        Private columnlstBereiche As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnCategory As Global.System.Data.DataColumn
        
        Private columnFolder As Global.System.Data.DataColumn
        
        Private columnTeilnehmer As Global.System.Data.DataColumn
        
        Private columnIDSerientermin As Global.System.Data.DataColumn
        
        Private columnTagWochenMonat As Global.System.Data.DataColumn
        
        Private columnWiedWertJeden As Global.System.Data.DataColumn
        
        Private columnWochentage As Global.System.Data.DataColumn
        
        Private columnnTenMonat As Global.System.Data.DataColumn
        
        Private columnSerienterminType As Global.System.Data.DataColumn
        
        Private columnDauer As Global.System.Data.DataColumn
        
        Private columnGanzerTag As Global.System.Data.DataColumn
        
        Private columnIsSerientermin As Global.System.Data.DataColumn
        
        Private columnSerienterminEndetAm As Global.System.Data.DataColumn
        
        Private columnIDKlinik As Global.System.Data.DataColumn
        
        Private columnCreatedFrom As Global.System.Data.DataColumn
        
        Private columnCreatedAt As Global.System.Data.DataColumn
        
        Private columnLastChangeFrom As Global.System.Data.DataColumn
        
        Private columnLastChangeAt As Global.System.Data.DataColumn
        
        Private columnlstBerufsgruppen As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "planBereich"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BetreffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetreff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BeginntAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeginntAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EndetAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndetAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lstAbteilungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlstAbteilungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lstBereicheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlstBereiche
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FolderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFolder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TeilnehmerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeilnehmer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDSerienterminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDSerientermin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TagWochenMonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagWochenMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WiedWertJedenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWiedWertJeden
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WochentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWochentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nTenMonatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnTenMonat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SerienterminTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerienterminType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DauerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDauer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GanzerTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGanzerTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IsSerienterminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSerientermin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SerienterminEndetAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerienterminEndetAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDKlinikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDKlinik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CreatedFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CreatedAtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedAt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastChangeFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastChangeFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastChangeAtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastChangeAt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lstBerufsgruppenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlstBerufsgruppen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As planBereichRow
            Get
                Return CType(Me.Rows(index),planBereichRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planBereichRowChanging As planBereichRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planBereichRowChanged As planBereichRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planBereichRowDeleting As planBereichRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event planBereichRowDeleted As planBereichRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddplanBereichRow(ByVal row As planBereichRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddplanBereichRow( _
                    ByVal ID As System.Guid,  _
                    ByVal Betreff As String,  _
                    ByVal BeginntAm As Date,  _
                    ByVal EndetAm As Date,  _
                    ByVal lstAbteilungen As String,  _
                    ByVal lstBereiche As String,  _
                    ByVal Status As String,  _
                    ByVal Category As String,  _
                    ByVal Folder As String,  _
                    ByVal Teilnehmer As String,  _
                    ByVal IDSerientermin As System.Guid,  _
                    ByVal TagWochenMonat As String,  _
                    ByVal WiedWertJeden As Integer,  _
                    ByVal Wochentage As String,  _
                    ByVal nTenMonat As Integer,  _
                    ByVal SerienterminType As String,  _
                    ByVal Dauer As Integer,  _
                    ByVal GanzerTag As Boolean,  _
                    ByVal IsSerientermin As Boolean,  _
                    ByVal SerienterminEndetAm As Date,  _
                    ByVal IDKlinik As System.Guid,  _
                    ByVal CreatedFrom As String,  _
                    ByVal CreatedAt As Date,  _
                    ByVal LastChangeFrom As String,  _
                    ByVal LastChangeAt As Date,  _
                    ByVal lstBerufsgruppen As String) As planBereichRow
            Dim rowplanBereichRow As planBereichRow = CType(Me.NewRow,planBereichRow)
            Dim columnValuesArray() As Object = New Object() {ID, Betreff, BeginntAm, EndetAm, lstAbteilungen, lstBereiche, Status, Category, Folder, Teilnehmer, IDSerientermin, TagWochenMonat, WiedWertJeden, Wochentage, nTenMonat, SerienterminType, Dauer, GanzerTag, IsSerientermin, SerienterminEndetAm, IDKlinik, CreatedFrom, CreatedAt, LastChangeFrom, LastChangeAt, lstBerufsgruppen}
            rowplanBereichRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowplanBereichRow)
            Return rowplanBereichRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByID(ByVal ID As System.Guid) As planBereichRow
            Return CType(Me.Rows.Find(New Object() {ID}),planBereichRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As planBereichDataTable = CType(MyBase.Clone,planBereichDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New planBereichDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnBetreff = MyBase.Columns("Betreff")
            Me.columnBeginntAm = MyBase.Columns("BeginntAm")
            Me.columnEndetAm = MyBase.Columns("EndetAm")
            Me.columnlstAbteilungen = MyBase.Columns("lstAbteilungen")
            Me.columnlstBereiche = MyBase.Columns("lstBereiche")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnCategory = MyBase.Columns("Category")
            Me.columnFolder = MyBase.Columns("Folder")
            Me.columnTeilnehmer = MyBase.Columns("Teilnehmer")
            Me.columnIDSerientermin = MyBase.Columns("IDSerientermin")
            Me.columnTagWochenMonat = MyBase.Columns("TagWochenMonat")
            Me.columnWiedWertJeden = MyBase.Columns("WiedWertJeden")
            Me.columnWochentage = MyBase.Columns("Wochentage")
            Me.columnnTenMonat = MyBase.Columns("nTenMonat")
            Me.columnSerienterminType = MyBase.Columns("SerienterminType")
            Me.columnDauer = MyBase.Columns("Dauer")
            Me.columnGanzerTag = MyBase.Columns("GanzerTag")
            Me.columnIsSerientermin = MyBase.Columns("IsSerientermin")
            Me.columnSerienterminEndetAm = MyBase.Columns("SerienterminEndetAm")
            Me.columnIDKlinik = MyBase.Columns("IDKlinik")
            Me.columnCreatedFrom = MyBase.Columns("CreatedFrom")
            Me.columnCreatedAt = MyBase.Columns("CreatedAt")
            Me.columnLastChangeFrom = MyBase.Columns("LastChangeFrom")
            Me.columnLastChangeAt = MyBase.Columns("LastChangeAt")
            Me.columnlstBerufsgruppen = MyBase.Columns("lstBerufsgruppen")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnBetreff = New Global.System.Data.DataColumn("Betreff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetreff)
            Me.columnBeginntAm = New Global.System.Data.DataColumn("BeginntAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeginntAm)
            Me.columnEndetAm = New Global.System.Data.DataColumn("EndetAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndetAm)
            Me.columnlstAbteilungen = New Global.System.Data.DataColumn("lstAbteilungen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlstAbteilungen)
            Me.columnlstBereiche = New Global.System.Data.DataColumn("lstBereiche", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlstBereiche)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnCategory = New Global.System.Data.DataColumn("Category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory)
            Me.columnFolder = New Global.System.Data.DataColumn("Folder", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFolder)
            Me.columnTeilnehmer = New Global.System.Data.DataColumn("Teilnehmer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeilnehmer)
            Me.columnIDSerientermin = New Global.System.Data.DataColumn("IDSerientermin", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDSerientermin)
            Me.columnTagWochenMonat = New Global.System.Data.DataColumn("TagWochenMonat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagWochenMonat)
            Me.columnWiedWertJeden = New Global.System.Data.DataColumn("WiedWertJeden", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWiedWertJeden)
            Me.columnWochentage = New Global.System.Data.DataColumn("Wochentage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWochentage)
            Me.columnnTenMonat = New Global.System.Data.DataColumn("nTenMonat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnTenMonat)
            Me.columnSerienterminType = New Global.System.Data.DataColumn("SerienterminType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerienterminType)
            Me.columnDauer = New Global.System.Data.DataColumn("Dauer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDauer)
            Me.columnGanzerTag = New Global.System.Data.DataColumn("GanzerTag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGanzerTag)
            Me.columnIsSerientermin = New Global.System.Data.DataColumn("IsSerientermin", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSerientermin)
            Me.columnSerienterminEndetAm = New Global.System.Data.DataColumn("SerienterminEndetAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerienterminEndetAm)
            Me.columnIDKlinik = New Global.System.Data.DataColumn("IDKlinik", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDKlinik)
            Me.columnCreatedFrom = New Global.System.Data.DataColumn("CreatedFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedFrom)
            Me.columnCreatedAt = New Global.System.Data.DataColumn("CreatedAt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedAt)
            Me.columnLastChangeFrom = New Global.System.Data.DataColumn("LastChangeFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastChangeFrom)
            Me.columnLastChangeAt = New Global.System.Data.DataColumn("LastChangeAt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastChangeAt)
            Me.columnlstBerufsgruppen = New Global.System.Data.DataColumn("lstBerufsgruppen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlstBerufsgruppen)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnBetreff.AllowDBNull = false
            Me.columnBetreff.MaxLength = 700
            Me.columnlstAbteilungen.AllowDBNull = false
            Me.columnlstBereiche.AllowDBNull = false
            Me.columnStatus.AllowDBNull = false
            Me.columnStatus.MaxLength = 200
            Me.columnCategory.AllowDBNull = false
            Me.columnFolder.AllowDBNull = false
            Me.columnFolder.MaxLength = 500
            Me.columnTeilnehmer.AllowDBNull = false
            Me.columnTagWochenMonat.AllowDBNull = false
            Me.columnWochentage.AllowDBNull = false
            Me.columnWochentage.MaxLength = 200
            Me.columnSerienterminType.AllowDBNull = false
            Me.columnSerienterminType.MaxLength = 200
            Me.columnDauer.AllowDBNull = false
            Me.columnGanzerTag.AllowDBNull = false
            Me.columnIsSerientermin.AllowDBNull = false
            Me.columnIDKlinik.AllowDBNull = false
            Me.columnCreatedFrom.AllowDBNull = false
            Me.columnCreatedFrom.MaxLength = 200
            Me.columnCreatedAt.AllowDBNull = false
            Me.columnLastChangeFrom.AllowDBNull = false
            Me.columnLastChangeFrom.MaxLength = 200
            Me.columnLastChangeAt.AllowDBNull = false
            Me.columnlstBerufsgruppen.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewplanBereichRow() As planBereichRow
            Return CType(Me.NewRow,planBereichRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New planBereichRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(planBereichRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.planBereichRowChangedEvent) Is Nothing) Then
                RaiseEvent planBereichRowChanged(Me, New planBereichRowChangeEvent(CType(e.Row,planBereichRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.planBereichRowChangingEvent) Is Nothing) Then
                RaiseEvent planBereichRowChanging(Me, New planBereichRowChangeEvent(CType(e.Row,planBereichRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.planBereichRowDeletedEvent) Is Nothing) Then
                RaiseEvent planBereichRowDeleted(Me, New planBereichRowChangeEvent(CType(e.Row,planBereichRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.planBereichRowDeletingEvent) Is Nothing) Then
                RaiseEvent planBereichRowDeleting(Me, New planBereichRowChangeEvent(CType(e.Row,planBereichRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveplanBereichRow(ByVal row As planBereichRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPlanSearch = New dsPlanSearch()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "planBereichDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class planRow
        Inherits Global.System.Data.DataRow
        
        Private tableplan As planDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableplan = CType(Me.Table,planDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Betreff() As String
            Get
                Return CType(Me(Me.tableplan.BetreffColumn),String)
            End Get
            Set
                Me(Me.tableplan.BetreffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BeginntAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.BeginntAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BeginntAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.BeginntAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FälligAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.FälligAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FälligAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.FälligAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDArt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDArtColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDArt in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDArtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Priorität() As String
            Get
                Return CType(Me(Me.tableplan.PrioritätColumn),String)
            End Get
            Set
                Me(Me.tableplan.PrioritätColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As String
            Get
                Return CType(Me(Me.tableplan.StatusColumn),String)
            End Get
            Set
                Me(Me.tableplan.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Text() As String
            Get
                Return CType(Me(Me.tableplan.TextColumn),String)
            End Get
            Set
                Me(Me.tableplan.TextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Zusatz() As String
            Get
                Return CType(Me(Me.tableplan.ZusatzColumn),String)
            End Get
            Set
                Me(Me.tableplan.ZusatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MailAn() As String
            Get
                Return CType(Me(Me.tableplan.MailAnColumn),String)
            End Get
            Set
                Me(Me.tableplan.MailAnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MailCC() As String
            Get
                Return CType(Me(Me.tableplan.MailCCColumn),String)
            End Get
            Set
                Me(Me.tableplan.MailCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property html() As Boolean
            Get
                Return CType(Me(Me.tableplan.htmlColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.htmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Für() As String
            Get
                Return CType(Me(Me.tableplan.FürColumn),String)
            End Get
            Set
                Me(Me.tableplan.FürColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property gesendetAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.gesendetAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte gesendetAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.gesendetAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property remembJN() As Boolean
            Get
                Return CType(Me(Me.tableplan.remembJNColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.remembJNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property remembMinut() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.remembMinutColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte remembMinut in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.remembMinutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property wichtig() As Boolean
            Get
                Return CType(Me(Me.tableplan.wichtigColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.wichtigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Teilnehmer() As String
            Get
                Return CType(Me(Me.tableplan.TeilnehmerColumn),String)
            End Get
            Set
                Me(Me.tableplan.TeilnehmerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ErstelltVon() As String
            Get
                Return CType(Me(Me.tableplan.ErstelltVonColumn),String)
            End Get
            Set
                Me(Me.tableplan.ErstelltVonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ErstelltAm() As Date
            Get
                Return CType(Me(Me.tableplan.ErstelltAmColumn),Date)
            End Get
            Set
                Me(Me.tableplan.ErstelltAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableplan.IDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableplan.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDActivity() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDActivityColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDActivity in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDActivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDStatus in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDTyp() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDTypColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDTyp in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KommStatus() As String
            Get
                Return CType(Me(Me.tableplan.KommStatusColumn),String)
            End Get
            Set
                Me(Me.tableplan.KommStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property db() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableplan.dbColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte db in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.dbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property deleted() As Boolean
            Get
                Return CType(Me(Me.tableplan.deletedColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.deletedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property anzObjects() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.anzObjectsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte anzObjects in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.anzObjectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property design() As Boolean
            Get
                Return CType(Me(Me.tableplan.designColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.designColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MailBcc() As String
            Get
                Return CType(Me(Me.tableplan.MailBccColumn),String)
            End Get
            Set
                Me(Me.tableplan.MailBccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDUserAccount() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDUserAccountColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDUserAccount in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDUserAccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MailFrom() As String
            Get
                Return CType(Me(Me.tableplan.MailFromColumn),String)
            End Get
            Set
                Me(Me.tableplan.MailFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property readed() As Boolean
            Get
                Return CType(Me(Me.tableplan.readedColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.readedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property empfangenAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.empfangenAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte empfangenAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.empfangenAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MessageId() As String
            Get
                Return CType(Me(Me.tableplan.MessageIdColumn),String)
            End Get
            Set
                Me(Me.tableplan.MessageIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property anzAnhänge() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.anzAnhängeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte anzAnhänge in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.anzAnhängeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDPlanMain() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDPlanMainColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDPlanMain in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDPlanMainColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReplyTxt() As String
            Get
                Return CType(Me(Me.tableplan.ReplyTxtColumn),String)
            End Get
            Set
                Me(Me.tableplan.ReplyTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsOwner() As Boolean
            Get
                Return CType(Me(Me.tableplan.IsOwnerColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.IsOwnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AwaitingResponse() As String
            Get
                Return CType(Me(Me.tableplan.AwaitingResponseColumn),String)
            End Get
            Set
                Me(Me.tableplan.AwaitingResponseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDFolder() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDFolderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDFolder in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDFolderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SendWithPostOfficeBoxForAll() As Boolean
            Get
                Return CType(Me(Me.tableplan.SendWithPostOfficeBoxForAllColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.SendWithPostOfficeBoxForAllColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OutlookAPI() As Boolean
            Get
                Return CType(Me(Me.tableplan.OutlookAPIColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.OutlookAPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ConversationID() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.ConversationIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ConversationID in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.ConversationIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDoutlook() As String
            Get
                Return CType(Me(Me.tableplan.IDoutlookColumn),String)
            End Get
            Set
                Me(Me.tableplan.IDoutlookColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDoutlookTicks() As String
            Get
                Return CType(Me(Me.tableplan.IDoutlookTicksColumn),String)
            End Get
            Set
                Me(Me.tableplan.IDoutlookTicksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Category() As String
            Get
                Return CType(Me(Me.tableplan.CategoryColumn),String)
            End Get
            Set
                Me(Me.tableplan.CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Folder() As String
            Get
                Return CType(Me(Me.tableplan.FolderColumn),String)
            End Get
            Set
                Me(Me.tableplan.FolderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastChangeITSCont() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.LastChangeITSContColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LastChangeITSCont in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.LastChangeITSContColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastSyncToExchange() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.LastSyncToExchangeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LastSyncToExchange in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.LastSyncToExchangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Wochentage() As String
            Get
                Return CType(Me(Me.tableplan.WochentageColumn),String)
            End Get
            Set
                Me(Me.tableplan.WochentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nTenMonat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.nTenMonatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte nTenMonat in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.nTenMonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SerienterminType() As String
            Get
                Return CType(Me(Me.tableplan.SerienterminTypeColumn),String)
            End Get
            Set
                Me(Me.tableplan.SerienterminTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDSerientermin() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDSerienterminColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDSerientermin in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDSerienterminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TagWochenMonat() As String
            Get
                Return CType(Me(Me.tableplan.TagWochenMonatColumn),String)
            End Get
            Set
                Me(Me.tableplan.TagWochenMonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WiedWertJeden() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.WiedWertJedenColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte WiedWertJeden in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.WiedWertJedenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EndetAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.EndetAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EndetAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.EndetAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Dauer() As Integer
            Get
                Return CType(Me(Me.tableplan.DauerColumn),Integer)
            End Get
            Set
                Me(Me.tableplan.DauerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GanzerTag() As Boolean
            Get
                Return CType(Me(Me.tableplan.GanzerTagColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.GanzerTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsSerientermin() As Boolean
            Get
                Return CType(Me(Me.tableplan.IsSerienterminColumn),Boolean)
            End Get
            Set
                Me(Me.tableplan.IsSerienterminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SerienterminEndetAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplan.SerienterminEndetAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SerienterminEndetAm in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.SerienterminEndetAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PatientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.PatientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PatientName in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.PatientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDPatient() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplan.IDPatientColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDPatient in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.IDPatientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WithPatients() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplan.WithPatientsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte WithPatients in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.WithPatientsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DauerStr() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.DauerStrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DauerStr in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.DauerStrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ObjectStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableplan.ObjectStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ObjectStatus in Tabelle plan ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplan.ObjectStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBeginntAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.BeginntAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBeginntAmNull()
            Me(Me.tableplan.BeginntAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFälligAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.FälligAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFälligAmNull()
            Me(Me.tableplan.FälligAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDArtNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDArtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDArtNull()
            Me(Me.tableplan.IDArtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsgesendetAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.gesendetAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetgesendetAmNull()
            Me(Me.tableplan.gesendetAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsremembMinutNull() As Boolean
            Return Me.IsNull(Me.tableplan.remembMinutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetremembMinutNull()
            Me(Me.tableplan.remembMinutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDActivityNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDActivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDActivityNull()
            Me(Me.tableplan.IDActivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDStatusNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDStatusNull()
            Me(Me.tableplan.IDStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDTypNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDTypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDTypNull()
            Me(Me.tableplan.IDTypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdbNull() As Boolean
            Return Me.IsNull(Me.tableplan.dbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdbNull()
            Me(Me.tableplan.dbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsanzObjectsNull() As Boolean
            Return Me.IsNull(Me.tableplan.anzObjectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetanzObjectsNull()
            Me(Me.tableplan.anzObjectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDUserAccountNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDUserAccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDUserAccountNull()
            Me(Me.tableplan.IDUserAccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsempfangenAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.empfangenAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetempfangenAmNull()
            Me(Me.tableplan.empfangenAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsanzAnhängeNull() As Boolean
            Return Me.IsNull(Me.tableplan.anzAnhängeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetanzAnhängeNull()
            Me(Me.tableplan.anzAnhängeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDPlanMainNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDPlanMainColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDPlanMainNull()
            Me(Me.tableplan.IDPlanMainColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDFolderNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDFolderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDFolderNull()
            Me(Me.tableplan.IDFolderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConversationIDNull() As Boolean
            Return Me.IsNull(Me.tableplan.ConversationIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConversationIDNull()
            Me(Me.tableplan.ConversationIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastChangeITSContNull() As Boolean
            Return Me.IsNull(Me.tableplan.LastChangeITSContColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastChangeITSContNull()
            Me(Me.tableplan.LastChangeITSContColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastSyncToExchangeNull() As Boolean
            Return Me.IsNull(Me.tableplan.LastSyncToExchangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastSyncToExchangeNull()
            Me(Me.tableplan.LastSyncToExchangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnTenMonatNull() As Boolean
            Return Me.IsNull(Me.tableplan.nTenMonatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnTenMonatNull()
            Me(Me.tableplan.nTenMonatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDSerienterminNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDSerienterminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDSerienterminNull()
            Me(Me.tableplan.IDSerienterminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWiedWertJedenNull() As Boolean
            Return Me.IsNull(Me.tableplan.WiedWertJedenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWiedWertJedenNull()
            Me(Me.tableplan.WiedWertJedenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEndetAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.EndetAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEndetAmNull()
            Me(Me.tableplan.EndetAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSerienterminEndetAmNull() As Boolean
            Return Me.IsNull(Me.tableplan.SerienterminEndetAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSerienterminEndetAmNull()
            Me(Me.tableplan.SerienterminEndetAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPatientNameNull() As Boolean
            Return Me.IsNull(Me.tableplan.PatientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPatientNameNull()
            Me(Me.tableplan.PatientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDPatientNull() As Boolean
            Return Me.IsNull(Me.tableplan.IDPatientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDPatientNull()
            Me(Me.tableplan.IDPatientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWithPatientsNull() As Boolean
            Return Me.IsNull(Me.tableplan.WithPatientsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWithPatientsNull()
            Me(Me.tableplan.WithPatientsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDauerStrNull() As Boolean
            Return Me.IsNull(Me.tableplan.DauerStrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDauerStrNull()
            Me(Me.tableplan.DauerStrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsObjectStatusNull() As Boolean
            Return Me.IsNull(Me.tableplan.ObjectStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetObjectStatusNull()
            Me(Me.tableplan.ObjectStatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class planBereichRow
        Inherits Global.System.Data.DataRow
        
        Private tableplanBereich As planBereichDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableplanBereich = CType(Me.Table,planBereichDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableplanBereich.IDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableplanBereich.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Betreff() As String
            Get
                Return CType(Me(Me.tableplanBereich.BetreffColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.BetreffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BeginntAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.BeginntAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BeginntAm in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.BeginntAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EndetAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.EndetAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EndetAm in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.EndetAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lstAbteilungen() As String
            Get
                Return CType(Me(Me.tableplanBereich.lstAbteilungenColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.lstAbteilungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lstBereiche() As String
            Get
                Return CType(Me(Me.tableplanBereich.lstBereicheColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.lstBereicheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As String
            Get
                Return CType(Me(Me.tableplanBereich.StatusColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Category() As String
            Get
                Return CType(Me(Me.tableplanBereich.CategoryColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Folder() As String
            Get
                Return CType(Me(Me.tableplanBereich.FolderColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.FolderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Teilnehmer() As String
            Get
                Return CType(Me(Me.tableplanBereich.TeilnehmerColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.TeilnehmerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDSerientermin() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.IDSerienterminColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IDSerientermin in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.IDSerienterminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TagWochenMonat() As String
            Get
                Return CType(Me(Me.tableplanBereich.TagWochenMonatColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.TagWochenMonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WiedWertJeden() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.WiedWertJedenColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte WiedWertJeden in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.WiedWertJedenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Wochentage() As String
            Get
                Return CType(Me(Me.tableplanBereich.WochentageColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.WochentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nTenMonat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.nTenMonatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte nTenMonat in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.nTenMonatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SerienterminType() As String
            Get
                Return CType(Me(Me.tableplanBereich.SerienterminTypeColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.SerienterminTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Dauer() As Integer
            Get
                Return CType(Me(Me.tableplanBereich.DauerColumn),Integer)
            End Get
            Set
                Me(Me.tableplanBereich.DauerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GanzerTag() As Boolean
            Get
                Return CType(Me(Me.tableplanBereich.GanzerTagColumn),Boolean)
            End Get
            Set
                Me(Me.tableplanBereich.GanzerTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IsSerientermin() As Boolean
            Get
                Return CType(Me(Me.tableplanBereich.IsSerienterminColumn),Boolean)
            End Get
            Set
                Me(Me.tableplanBereich.IsSerienterminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SerienterminEndetAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableplanBereich.SerienterminEndetAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SerienterminEndetAm in Tabelle planBereich ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableplanBereich.SerienterminEndetAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IDKlinik() As System.Guid
            Get
                Return CType(Me(Me.tableplanBereich.IDKlinikColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableplanBereich.IDKlinikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CreatedFrom() As String
            Get
                Return CType(Me(Me.tableplanBereich.CreatedFromColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.CreatedFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CreatedAt() As Date
            Get
                Return CType(Me(Me.tableplanBereich.CreatedAtColumn),Date)
            End Get
            Set
                Me(Me.tableplanBereich.CreatedAtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastChangeFrom() As String
            Get
                Return CType(Me(Me.tableplanBereich.LastChangeFromColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.LastChangeFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastChangeAt() As Date
            Get
                Return CType(Me(Me.tableplanBereich.LastChangeAtColumn),Date)
            End Get
            Set
                Me(Me.tableplanBereich.LastChangeAtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lstBerufsgruppen() As String
            Get
                Return CType(Me(Me.tableplanBereich.lstBerufsgruppenColumn),String)
            End Get
            Set
                Me(Me.tableplanBereich.lstBerufsgruppenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBeginntAmNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.BeginntAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBeginntAmNull()
            Me(Me.tableplanBereich.BeginntAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEndetAmNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.EndetAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEndetAmNull()
            Me(Me.tableplanBereich.EndetAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDSerienterminNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.IDSerienterminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDSerienterminNull()
            Me(Me.tableplanBereich.IDSerienterminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWiedWertJedenNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.WiedWertJedenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWiedWertJedenNull()
            Me(Me.tableplanBereich.WiedWertJedenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnTenMonatNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.nTenMonatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnTenMonatNull()
            Me(Me.tableplanBereich.nTenMonatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSerienterminEndetAmNull() As Boolean
            Return Me.IsNull(Me.tableplanBereich.SerienterminEndetAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSerienterminEndetAmNull()
            Me(Me.tableplanBereich.SerienterminEndetAmColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class planRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As planRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As planRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As planRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class planBereichRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As planBereichRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As planBereichRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As planBereichRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
