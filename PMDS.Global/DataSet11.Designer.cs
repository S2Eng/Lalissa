//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PMDS.Global {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private WundeTherapieDataTable tableWundeTherapie;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WundeTherapie"] != null)) {
                    base.Tables.Add(new WundeTherapieDataTable(ds.Tables["WundeTherapie"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WundeTherapieDataTable WundeTherapie {
            get {
                return this.tableWundeTherapie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WundeTherapie"] != null)) {
                    base.Tables.Add(new WundeTherapieDataTable(ds.Tables["WundeTherapie"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableWundeTherapie = ((WundeTherapieDataTable)(base.Tables["WundeTherapie"]));
            if ((initTable == true)) {
                if ((this.tableWundeTherapie != null)) {
                    this.tableWundeTherapie.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet11.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWundeTherapie = new WundeTherapieDataTable();
            base.Tables.Add(this.tableWundeTherapie);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWundeTherapie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WundeTherapieRowChangeEventHandler(object sender, WundeTherapieRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WundeTherapieDataTable : global::System.Data.TypedTableBase<WundeTherapieRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDWundeKopf;
            
            private global::System.Data.DataColumn columnVerordnetAm;
            
            private global::System.Data.DataColumn columnAbgesetztAm;
            
            private global::System.Data.DataColumn columnTherapie;
            
            private global::System.Data.DataColumn columnAngeordnetVon;
            
            private global::System.Data.DataColumn columnAbgesetztVon;
            
            private global::System.Data.DataColumn columnIDBenutzer_Erstellt;
            
            private global::System.Data.DataColumn columnIDBenutzer_Geaendert;
            
            private global::System.Data.DataColumn columnDatumErstellt;
            
            private global::System.Data.DataColumn columnDatumGeaendert;
            
            private global::System.Data.DataColumn columnDebridement;
            
            private global::System.Data.DataColumn columnReinigung;
            
            private global::System.Data.DataColumn columnWundauflage;
            
            private global::System.Data.DataColumn columnSekundaerverband;
            
            private global::System.Data.DataColumn columnFixierung;
            
            private global::System.Data.DataColumn columnHyperkeratoseentfernung;
            
            private global::System.Data.DataColumn columnHautpflege;
            
            private global::System.Data.DataColumn columnZusatzernährung;
            
            private global::System.Data.DataColumn columnKompression;
            
            private global::System.Data.DataColumn columnFreillagerung;
            
            private global::System.Data.DataColumn columnWundabstrich;
            
            private global::System.Data.DataColumn columnWundrandschutz;
            
            private global::System.Data.DataColumn columnVWIntervall;
            
            private global::System.Data.DataColumn columnVidiertJN;
            
            private global::System.Data.DataColumn columnVidiertVon;
            
            private global::System.Data.DataColumn columnVidiertAm;
            
            private global::System.Data.DataColumn columnVorgeschlagenVon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieDataTable() {
                this.TableName = "WundeTherapie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeTherapieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WundeTherapieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDWundeKopfColumn {
                get {
                    return this.columnIDWundeKopf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VerordnetAmColumn {
                get {
                    return this.columnVerordnetAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AbgesetztAmColumn {
                get {
                    return this.columnAbgesetztAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TherapieColumn {
                get {
                    return this.columnTherapie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AngeordnetVonColumn {
                get {
                    return this.columnAngeordnetVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AbgesetztVonColumn {
                get {
                    return this.columnAbgesetztVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_ErstelltColumn {
                get {
                    return this.columnIDBenutzer_Erstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_GeaendertColumn {
                get {
                    return this.columnIDBenutzer_Geaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumErstelltColumn {
                get {
                    return this.columnDatumErstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumGeaendertColumn {
                get {
                    return this.columnDatumGeaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DebridementColumn {
                get {
                    return this.columnDebridement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReinigungColumn {
                get {
                    return this.columnReinigung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundauflageColumn {
                get {
                    return this.columnWundauflage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SekundaerverbandColumn {
                get {
                    return this.columnSekundaerverband;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FixierungColumn {
                get {
                    return this.columnFixierung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HyperkeratoseentfernungColumn {
                get {
                    return this.columnHyperkeratoseentfernung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HautpflegeColumn {
                get {
                    return this.columnHautpflege;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ZusatzernährungColumn {
                get {
                    return this.columnZusatzernährung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KompressionColumn {
                get {
                    return this.columnKompression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FreillagerungColumn {
                get {
                    return this.columnFreillagerung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundabstrichColumn {
                get {
                    return this.columnWundabstrich;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandschutzColumn {
                get {
                    return this.columnWundrandschutz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VWIntervallColumn {
                get {
                    return this.columnVWIntervall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertJNColumn {
                get {
                    return this.columnVidiertJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertVonColumn {
                get {
                    return this.columnVidiertVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertAmColumn {
                get {
                    return this.columnVidiertAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VorgeschlagenVonColumn {
                get {
                    return this.columnVorgeschlagenVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow this[int index] {
                get {
                    return ((WundeTherapieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWundeTherapieRow(WundeTherapieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow AddWundeTherapieRow(
                        System.Guid ID, 
                        System.Guid IDWundeKopf, 
                        System.DateTime VerordnetAm, 
                        System.DateTime AbgesetztAm, 
                        string Therapie, 
                        string AngeordnetVon, 
                        string AbgesetztVon, 
                        System.Guid IDBenutzer_Erstellt, 
                        System.Guid IDBenutzer_Geaendert, 
                        System.DateTime DatumErstellt, 
                        System.DateTime DatumGeaendert, 
                        string Debridement, 
                        string Reinigung, 
                        string Wundauflage, 
                        string Sekundaerverband, 
                        string Fixierung, 
                        string Hyperkeratoseentfernung, 
                        string Hautpflege, 
                        string Zusatzernährung, 
                        string Kompression, 
                        string Freillagerung, 
                        string Wundabstrich, 
                        string Wundrandschutz, 
                        string VWIntervall, 
                        bool VidiertJN, 
                        string VidiertVon, 
                        System.DateTime VidiertAm, 
                        string VorgeschlagenVon) {
                WundeTherapieRow rowWundeTherapieRow = ((WundeTherapieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDWundeKopf,
                        VerordnetAm,
                        AbgesetztAm,
                        Therapie,
                        AngeordnetVon,
                        AbgesetztVon,
                        IDBenutzer_Erstellt,
                        IDBenutzer_Geaendert,
                        DatumErstellt,
                        DatumGeaendert,
                        Debridement,
                        Reinigung,
                        Wundauflage,
                        Sekundaerverband,
                        Fixierung,
                        Hyperkeratoseentfernung,
                        Hautpflege,
                        Zusatzernährung,
                        Kompression,
                        Freillagerung,
                        Wundabstrich,
                        Wundrandschutz,
                        VWIntervall,
                        VidiertJN,
                        VidiertVon,
                        VidiertAm,
                        VorgeschlagenVon};
                rowWundeTherapieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWundeTherapieRow);
                return rowWundeTherapieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow FindByID(System.Guid ID) {
                return ((WundeTherapieRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WundeTherapieDataTable cln = ((WundeTherapieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WundeTherapieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDWundeKopf = base.Columns["IDWundeKopf"];
                this.columnVerordnetAm = base.Columns["VerordnetAm"];
                this.columnAbgesetztAm = base.Columns["AbgesetztAm"];
                this.columnTherapie = base.Columns["Therapie"];
                this.columnAngeordnetVon = base.Columns["AngeordnetVon"];
                this.columnAbgesetztVon = base.Columns["AbgesetztVon"];
                this.columnIDBenutzer_Erstellt = base.Columns["IDBenutzer_Erstellt"];
                this.columnIDBenutzer_Geaendert = base.Columns["IDBenutzer_Geaendert"];
                this.columnDatumErstellt = base.Columns["DatumErstellt"];
                this.columnDatumGeaendert = base.Columns["DatumGeaendert"];
                this.columnDebridement = base.Columns["Debridement"];
                this.columnReinigung = base.Columns["Reinigung"];
                this.columnWundauflage = base.Columns["Wundauflage"];
                this.columnSekundaerverband = base.Columns["Sekundaerverband"];
                this.columnFixierung = base.Columns["Fixierung"];
                this.columnHyperkeratoseentfernung = base.Columns["Hyperkeratoseentfernung"];
                this.columnHautpflege = base.Columns["Hautpflege"];
                this.columnZusatzernährung = base.Columns["Zusatzernährung"];
                this.columnKompression = base.Columns["Kompression"];
                this.columnFreillagerung = base.Columns["Freillagerung"];
                this.columnWundabstrich = base.Columns["Wundabstrich"];
                this.columnWundrandschutz = base.Columns["Wundrandschutz"];
                this.columnVWIntervall = base.Columns["VWIntervall"];
                this.columnVidiertJN = base.Columns["VidiertJN"];
                this.columnVidiertVon = base.Columns["VidiertVon"];
                this.columnVidiertAm = base.Columns["VidiertAm"];
                this.columnVorgeschlagenVon = base.Columns["VorgeschlagenVon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDWundeKopf = new global::System.Data.DataColumn("IDWundeKopf", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDWundeKopf);
                this.columnVerordnetAm = new global::System.Data.DataColumn("VerordnetAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerordnetAm);
                this.columnAbgesetztAm = new global::System.Data.DataColumn("AbgesetztAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbgesetztAm);
                this.columnTherapie = new global::System.Data.DataColumn("Therapie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTherapie);
                this.columnAngeordnetVon = new global::System.Data.DataColumn("AngeordnetVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAngeordnetVon);
                this.columnAbgesetztVon = new global::System.Data.DataColumn("AbgesetztVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbgesetztVon);
                this.columnIDBenutzer_Erstellt = new global::System.Data.DataColumn("IDBenutzer_Erstellt", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Erstellt);
                this.columnIDBenutzer_Geaendert = new global::System.Data.DataColumn("IDBenutzer_Geaendert", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Geaendert);
                this.columnDatumErstellt = new global::System.Data.DataColumn("DatumErstellt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumErstellt);
                this.columnDatumGeaendert = new global::System.Data.DataColumn("DatumGeaendert", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumGeaendert);
                this.columnDebridement = new global::System.Data.DataColumn("Debridement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebridement);
                this.columnReinigung = new global::System.Data.DataColumn("Reinigung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinigung);
                this.columnWundauflage = new global::System.Data.DataColumn("Wundauflage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundauflage);
                this.columnSekundaerverband = new global::System.Data.DataColumn("Sekundaerverband", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSekundaerverband);
                this.columnFixierung = new global::System.Data.DataColumn("Fixierung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixierung);
                this.columnHyperkeratoseentfernung = new global::System.Data.DataColumn("Hyperkeratoseentfernung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHyperkeratoseentfernung);
                this.columnHautpflege = new global::System.Data.DataColumn("Hautpflege", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHautpflege);
                this.columnZusatzernährung = new global::System.Data.DataColumn("Zusatzernährung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZusatzernährung);
                this.columnKompression = new global::System.Data.DataColumn("Kompression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKompression);
                this.columnFreillagerung = new global::System.Data.DataColumn("Freillagerung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreillagerung);
                this.columnWundabstrich = new global::System.Data.DataColumn("Wundabstrich", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundabstrich);
                this.columnWundrandschutz = new global::System.Data.DataColumn("Wundrandschutz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandschutz);
                this.columnVWIntervall = new global::System.Data.DataColumn("VWIntervall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVWIntervall);
                this.columnVidiertJN = new global::System.Data.DataColumn("VidiertJN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertJN);
                this.columnVidiertVon = new global::System.Data.DataColumn("VidiertVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertVon);
                this.columnVidiertAm = new global::System.Data.DataColumn("VidiertAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertAm);
                this.columnVorgeschlagenVon = new global::System.Data.DataColumn("VorgeschlagenVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVorgeschlagenVon);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnIDWundeKopf.AllowDBNull = false;
                this.columnTherapie.MaxLength = 2048;
                this.columnAngeordnetVon.MaxLength = 255;
                this.columnAbgesetztVon.MaxLength = 255;
                this.columnDebridement.AllowDBNull = false;
                this.columnDebridement.MaxLength = 255;
                this.columnReinigung.AllowDBNull = false;
                this.columnReinigung.MaxLength = 255;
                this.columnWundauflage.AllowDBNull = false;
                this.columnWundauflage.MaxLength = 255;
                this.columnSekundaerverband.AllowDBNull = false;
                this.columnSekundaerverband.MaxLength = 255;
                this.columnFixierung.AllowDBNull = false;
                this.columnFixierung.MaxLength = 255;
                this.columnHyperkeratoseentfernung.AllowDBNull = false;
                this.columnHyperkeratoseentfernung.MaxLength = 255;
                this.columnHautpflege.AllowDBNull = false;
                this.columnHautpflege.MaxLength = 255;
                this.columnZusatzernährung.AllowDBNull = false;
                this.columnZusatzernährung.MaxLength = 255;
                this.columnKompression.AllowDBNull = false;
                this.columnKompression.MaxLength = 255;
                this.columnFreillagerung.AllowDBNull = false;
                this.columnFreillagerung.MaxLength = 255;
                this.columnWundabstrich.AllowDBNull = false;
                this.columnWundabstrich.MaxLength = 255;
                this.columnWundrandschutz.AllowDBNull = false;
                this.columnWundrandschutz.MaxLength = 100;
                this.columnVWIntervall.AllowDBNull = false;
                this.columnVWIntervall.MaxLength = 100;
                this.columnVidiertJN.AllowDBNull = false;
                this.columnVidiertVon.AllowDBNull = false;
                this.columnVidiertVon.MaxLength = 100;
                this.columnVorgeschlagenVon.AllowDBNull = false;
                this.columnVorgeschlagenVon.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow NewWundeTherapieRow() {
                return ((WundeTherapieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WundeTherapieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WundeTherapieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WundeTherapieRowChanged != null)) {
                    this.WundeTherapieRowChanged(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WundeTherapieRowChanging != null)) {
                    this.WundeTherapieRowChanging(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WundeTherapieRowDeleted != null)) {
                    this.WundeTherapieRowDeleted(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WundeTherapieRowDeleting != null)) {
                    this.WundeTherapieRowDeleting(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWundeTherapieRow(WundeTherapieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WundeTherapieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WundeTherapieRow : global::System.Data.DataRow {
            
            private WundeTherapieDataTable tableWundeTherapie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeTherapieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWundeTherapie = ((WundeTherapieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableWundeTherapie.IDColumn]));
                }
                set {
                    this[this.tableWundeTherapie.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDWundeKopf {
                get {
                    return ((global::System.Guid)(this[this.tableWundeTherapie.IDWundeKopfColumn]));
                }
                set {
                    this[this.tableWundeTherapie.IDWundeKopfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime VerordnetAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.VerordnetAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte VerordnetAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.VerordnetAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime AbgesetztAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.AbgesetztAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AbgesetztAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AbgesetztAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Therapie {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.TherapieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Therapie in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.TherapieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AngeordnetVon {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.AngeordnetVonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AngeordnetVon in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AngeordnetVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AbgesetztVon {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.AbgesetztVonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AbgesetztVon in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AbgesetztVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Erstellt {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Erstellt in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Geaendert {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Geaendert in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumErstellt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.DatumErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumErstellt in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.DatumErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumGeaendert {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.DatumGeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumGeaendert in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.DatumGeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Debridement {
                get {
                    return ((string)(this[this.tableWundeTherapie.DebridementColumn]));
                }
                set {
                    this[this.tableWundeTherapie.DebridementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Reinigung {
                get {
                    return ((string)(this[this.tableWundeTherapie.ReinigungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.ReinigungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundauflage {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundauflageColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundauflageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Sekundaerverband {
                get {
                    return ((string)(this[this.tableWundeTherapie.SekundaerverbandColumn]));
                }
                set {
                    this[this.tableWundeTherapie.SekundaerverbandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fixierung {
                get {
                    return ((string)(this[this.tableWundeTherapie.FixierungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.FixierungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Hyperkeratoseentfernung {
                get {
                    return ((string)(this[this.tableWundeTherapie.HyperkeratoseentfernungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.HyperkeratoseentfernungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Hautpflege {
                get {
                    return ((string)(this[this.tableWundeTherapie.HautpflegeColumn]));
                }
                set {
                    this[this.tableWundeTherapie.HautpflegeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Zusatzernährung {
                get {
                    return ((string)(this[this.tableWundeTherapie.ZusatzernährungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.ZusatzernährungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Kompression {
                get {
                    return ((string)(this[this.tableWundeTherapie.KompressionColumn]));
                }
                set {
                    this[this.tableWundeTherapie.KompressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Freillagerung {
                get {
                    return ((string)(this[this.tableWundeTherapie.FreillagerungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.FreillagerungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundabstrich {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundabstrichColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundabstrichColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundrandschutz {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundrandschutzColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundrandschutzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VWIntervall {
                get {
                    return ((string)(this[this.tableWundeTherapie.VWIntervallColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VWIntervallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool VidiertJN {
                get {
                    return ((bool)(this[this.tableWundeTherapie.VidiertJNColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VidiertJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VidiertVon {
                get {
                    return ((string)(this[this.tableWundeTherapie.VidiertVonColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VidiertVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime VidiertAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.VidiertAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte VidiertAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.VidiertAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VorgeschlagenVon {
                get {
                    return ((string)(this[this.tableWundeTherapie.VorgeschlagenVonColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VorgeschlagenVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVerordnetAmNull() {
                return this.IsNull(this.tableWundeTherapie.VerordnetAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVerordnetAmNull() {
                this[this.tableWundeTherapie.VerordnetAmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAbgesetztAmNull() {
                return this.IsNull(this.tableWundeTherapie.AbgesetztAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAbgesetztAmNull() {
                this[this.tableWundeTherapie.AbgesetztAmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTherapieNull() {
                return this.IsNull(this.tableWundeTherapie.TherapieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTherapieNull() {
                this[this.tableWundeTherapie.TherapieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAngeordnetVonNull() {
                return this.IsNull(this.tableWundeTherapie.AngeordnetVonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAngeordnetVonNull() {
                this[this.tableWundeTherapie.AngeordnetVonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAbgesetztVonNull() {
                return this.IsNull(this.tableWundeTherapie.AbgesetztVonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAbgesetztVonNull() {
                this[this.tableWundeTherapie.AbgesetztVonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_ErstelltNull() {
                return this.IsNull(this.tableWundeTherapie.IDBenutzer_ErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_ErstelltNull() {
                this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_GeaendertNull() {
                return this.IsNull(this.tableWundeTherapie.IDBenutzer_GeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_GeaendertNull() {
                this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumErstelltNull() {
                return this.IsNull(this.tableWundeTherapie.DatumErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumErstelltNull() {
                this[this.tableWundeTherapie.DatumErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumGeaendertNull() {
                return this.IsNull(this.tableWundeTherapie.DatumGeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumGeaendertNull() {
                this[this.tableWundeTherapie.DatumGeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVidiertAmNull() {
                return this.IsNull(this.tableWundeTherapie.VidiertAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVidiertAmNull() {
                this[this.tableWundeTherapie.VidiertAmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WundeTherapieRowChangeEvent : global::System.EventArgs {
            
            private WundeTherapieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRowChangeEvent(WundeTherapieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591