//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PMDS.Data.Global {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsWunde")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsWunde : global::System.Data.DataSet {
        
        private WundeKopfDataTable tableWundeKopf;
        
        private WundePosDataTable tableWundePos;
        
        private WundePosBilderDataTable tableWundePosBilder;
        
        private WundeTherapieDataTable tableWundeTherapie;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public dsWunde() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected dsWunde(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WundeKopf"] != null)) {
                    base.Tables.Add(new WundeKopfDataTable(ds.Tables["WundeKopf"]));
                }
                if ((ds.Tables["WundePos"] != null)) {
                    base.Tables.Add(new WundePosDataTable(ds.Tables["WundePos"]));
                }
                if ((ds.Tables["WundePosBilder"] != null)) {
                    base.Tables.Add(new WundePosBilderDataTable(ds.Tables["WundePosBilder"]));
                }
                if ((ds.Tables["WundeTherapie"] != null)) {
                    base.Tables.Add(new WundeTherapieDataTable(ds.Tables["WundeTherapie"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WundeKopfDataTable WundeKopf {
            get {
                return this.tableWundeKopf;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WundePosDataTable WundePos {
            get {
                return this.tableWundePos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WundePosBilderDataTable WundePosBilder {
            get {
                return this.tableWundePosBilder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WundeTherapieDataTable WundeTherapie {
            get {
                return this.tableWundeTherapie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsWunde cln = ((dsWunde)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WundeKopf"] != null)) {
                    base.Tables.Add(new WundeKopfDataTable(ds.Tables["WundeKopf"]));
                }
                if ((ds.Tables["WundePos"] != null)) {
                    base.Tables.Add(new WundePosDataTable(ds.Tables["WundePos"]));
                }
                if ((ds.Tables["WundePosBilder"] != null)) {
                    base.Tables.Add(new WundePosBilderDataTable(ds.Tables["WundePosBilder"]));
                }
                if ((ds.Tables["WundeTherapie"] != null)) {
                    base.Tables.Add(new WundeTherapieDataTable(ds.Tables["WundeTherapie"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableWundeKopf = ((WundeKopfDataTable)(base.Tables["WundeKopf"]));
            if ((initTable == true)) {
                if ((this.tableWundeKopf != null)) {
                    this.tableWundeKopf.InitVars();
                }
            }
            this.tableWundePos = ((WundePosDataTable)(base.Tables["WundePos"]));
            if ((initTable == true)) {
                if ((this.tableWundePos != null)) {
                    this.tableWundePos.InitVars();
                }
            }
            this.tableWundePosBilder = ((WundePosBilderDataTable)(base.Tables["WundePosBilder"]));
            if ((initTable == true)) {
                if ((this.tableWundePosBilder != null)) {
                    this.tableWundePosBilder.InitVars();
                }
            }
            this.tableWundeTherapie = ((WundeTherapieDataTable)(base.Tables["WundeTherapie"]));
            if ((initTable == true)) {
                if ((this.tableWundeTherapie != null)) {
                    this.tableWundeTherapie.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsWunde";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsWunde.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWundeKopf = new WundeKopfDataTable();
            base.Tables.Add(this.tableWundeKopf);
            this.tableWundePos = new WundePosDataTable();
            base.Tables.Add(this.tableWundePos);
            this.tableWundePosBilder = new WundePosBilderDataTable();
            base.Tables.Add(this.tableWundePosBilder);
            this.tableWundeTherapie = new WundeTherapieDataTable();
            base.Tables.Add(this.tableWundeTherapie);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWundeKopf() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWundePos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWundePosBilder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWundeTherapie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsWunde ds = new dsWunde();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WundeKopfRowChangeEventHandler(object sender, WundeKopfRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WundePosRowChangeEventHandler(object sender, WundePosRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WundePosBilderRowChangeEventHandler(object sender, WundePosBilderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WundeTherapieRowChangeEventHandler(object sender, WundeTherapieRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WundeKopfDataTable : global::System.Data.TypedTableBase<WundeKopfRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDAufenthaltPDx;
            
            private global::System.Data.DataColumn columnWundart;
            
            private global::System.Data.DataColumn columnDekuskala;
            
            private global::System.Data.DataColumn columnDekuwert;
            
            private global::System.Data.DataColumn columnClickedImage;
            
            private global::System.Data.DataColumn columnClickedValueX;
            
            private global::System.Data.DataColumn columnClickedValueY;
            
            private global::System.Data.DataColumn columnIDBenutzer_Erstellt;
            
            private global::System.Data.DataColumn columnIDBenutzer_Geaendert;
            
            private global::System.Data.DataColumn columnDatumErstellt;
            
            private global::System.Data.DataColumn columnDatumGeaendert;
            
            private global::System.Data.DataColumn columnBekanntSeit;
            
            private global::System.Data.DataColumn columnBisherigeBehandlung;
            
            private global::System.Data.DataColumn columnWundeEntstanden;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfDataTable() {
                this.TableName = "WundeKopf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeKopfDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WundeKopfDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDAufenthaltPDxColumn {
                get {
                    return this.columnIDAufenthaltPDx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundartColumn {
                get {
                    return this.columnWundart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DekuskalaColumn {
                get {
                    return this.columnDekuskala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DekuwertColumn {
                get {
                    return this.columnDekuwert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClickedImageColumn {
                get {
                    return this.columnClickedImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClickedValueXColumn {
                get {
                    return this.columnClickedValueX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClickedValueYColumn {
                get {
                    return this.columnClickedValueY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_ErstelltColumn {
                get {
                    return this.columnIDBenutzer_Erstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_GeaendertColumn {
                get {
                    return this.columnIDBenutzer_Geaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumErstelltColumn {
                get {
                    return this.columnDatumErstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumGeaendertColumn {
                get {
                    return this.columnDatumGeaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BekanntSeitColumn {
                get {
                    return this.columnBekanntSeit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BisherigeBehandlungColumn {
                get {
                    return this.columnBisherigeBehandlung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundeEntstandenColumn {
                get {
                    return this.columnWundeEntstanden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRow this[int index] {
                get {
                    return ((WundeKopfRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeKopfRowChangeEventHandler WundeKopfRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeKopfRowChangeEventHandler WundeKopfRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeKopfRowChangeEventHandler WundeKopfRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeKopfRowChangeEventHandler WundeKopfRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWundeKopfRow(WundeKopfRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRow AddWundeKopfRow(System.Guid ID, System.Guid IDAufenthaltPDx, string Wundart, string Dekuskala, int Dekuwert, byte[] ClickedImage, int ClickedValueX, int ClickedValueY, System.Guid IDBenutzer_Erstellt, System.Guid IDBenutzer_Geaendert, System.DateTime DatumErstellt, System.DateTime DatumGeaendert, System.DateTime BekanntSeit, string BisherigeBehandlung, string WundeEntstanden) {
                WundeKopfRow rowWundeKopfRow = ((WundeKopfRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDAufenthaltPDx,
                        Wundart,
                        Dekuskala,
                        Dekuwert,
                        ClickedImage,
                        ClickedValueX,
                        ClickedValueY,
                        IDBenutzer_Erstellt,
                        IDBenutzer_Geaendert,
                        DatumErstellt,
                        DatumGeaendert,
                        BekanntSeit,
                        BisherigeBehandlung,
                        WundeEntstanden};
                rowWundeKopfRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWundeKopfRow);
                return rowWundeKopfRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRow FindByID(System.Guid ID) {
                return ((WundeKopfRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WundeKopfDataTable cln = ((WundeKopfDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WundeKopfDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDAufenthaltPDx = base.Columns["IDAufenthaltPDx"];
                this.columnWundart = base.Columns["Wundart"];
                this.columnDekuskala = base.Columns["Dekuskala"];
                this.columnDekuwert = base.Columns["Dekuwert"];
                this.columnClickedImage = base.Columns["ClickedImage"];
                this.columnClickedValueX = base.Columns["ClickedValueX"];
                this.columnClickedValueY = base.Columns["ClickedValueY"];
                this.columnIDBenutzer_Erstellt = base.Columns["IDBenutzer_Erstellt"];
                this.columnIDBenutzer_Geaendert = base.Columns["IDBenutzer_Geaendert"];
                this.columnDatumErstellt = base.Columns["DatumErstellt"];
                this.columnDatumGeaendert = base.Columns["DatumGeaendert"];
                this.columnBekanntSeit = base.Columns["BekanntSeit"];
                this.columnBisherigeBehandlung = base.Columns["BisherigeBehandlung"];
                this.columnWundeEntstanden = base.Columns["WundeEntstanden"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDAufenthaltPDx = new global::System.Data.DataColumn("IDAufenthaltPDx", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDAufenthaltPDx);
                this.columnWundart = new global::System.Data.DataColumn("Wundart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundart);
                this.columnDekuskala = new global::System.Data.DataColumn("Dekuskala", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDekuskala);
                this.columnDekuwert = new global::System.Data.DataColumn("Dekuwert", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDekuwert);
                this.columnClickedImage = new global::System.Data.DataColumn("ClickedImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClickedImage);
                this.columnClickedValueX = new global::System.Data.DataColumn("ClickedValueX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClickedValueX);
                this.columnClickedValueY = new global::System.Data.DataColumn("ClickedValueY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClickedValueY);
                this.columnIDBenutzer_Erstellt = new global::System.Data.DataColumn("IDBenutzer_Erstellt", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Erstellt);
                this.columnIDBenutzer_Geaendert = new global::System.Data.DataColumn("IDBenutzer_Geaendert", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Geaendert);
                this.columnDatumErstellt = new global::System.Data.DataColumn("DatumErstellt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumErstellt);
                this.columnDatumGeaendert = new global::System.Data.DataColumn("DatumGeaendert", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumGeaendert);
                this.columnBekanntSeit = new global::System.Data.DataColumn("BekanntSeit", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBekanntSeit);
                this.columnBisherigeBehandlung = new global::System.Data.DataColumn("BisherigeBehandlung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBisherigeBehandlung);
                this.columnWundeEntstanden = new global::System.Data.DataColumn("WundeEntstanden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundeEntstanden);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnIDAufenthaltPDx.AllowDBNull = false;
                this.columnWundart.MaxLength = 30;
                this.columnDekuskala.MaxLength = 20;
                this.columnBisherigeBehandlung.AllowDBNull = false;
                this.columnBisherigeBehandlung.DefaultValue = ((string)("\'\'"));
                this.columnBisherigeBehandlung.MaxLength = 2048;
                this.columnWundeEntstanden.AllowDBNull = false;
                this.columnWundeEntstanden.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRow NewWundeKopfRow() {
                return ((WundeKopfRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WundeKopfRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WundeKopfRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WundeKopfRowChanged != null)) {
                    this.WundeKopfRowChanged(this, new WundeKopfRowChangeEvent(((WundeKopfRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WundeKopfRowChanging != null)) {
                    this.WundeKopfRowChanging(this, new WundeKopfRowChangeEvent(((WundeKopfRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WundeKopfRowDeleted != null)) {
                    this.WundeKopfRowDeleted(this, new WundeKopfRowChangeEvent(((WundeKopfRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WundeKopfRowDeleting != null)) {
                    this.WundeKopfRowDeleting(this, new WundeKopfRowChangeEvent(((WundeKopfRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWundeKopfRow(WundeKopfRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsWunde ds = new dsWunde();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WundeKopfDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WundePosDataTable : global::System.Data.TypedTableBase<WundePosRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDWundeKopf;
            
            private global::System.Data.DataColumn columnErhebungszeitpunkt;
            
            private global::System.Data.DataColumn columnStadium;
            
            private global::System.Data.DataColumn columnSchmerzqualitaet;
            
            private global::System.Data.DataColumn columnSchmerzintensitaet;
            
            private global::System.Data.DataColumn columnNekroseJN;
            
            private global::System.Data.DataColumn columnWundzustand;
            
            private global::System.Data.DataColumn columnL;
            
            private global::System.Data.DataColumn columnB;
            
            private global::System.Data.DataColumn columnH;
            
            private global::System.Data.DataColumn columnErreger;
            
            private global::System.Data.DataColumn columnInfektionszeichen;
            
            private global::System.Data.DataColumn columnHeilungsverlauf;
            
            private global::System.Data.DataColumn columnHeilungstext;
            
            private global::System.Data.DataColumn columnIDBenutzer_Erstellt;
            
            private global::System.Data.DataColumn columnIDBenutzer_Geaendert;
            
            private global::System.Data.DataColumn columnDatumErstellt;
            
            private global::System.Data.DataColumn columnDatumGeaendert;
            
            private global::System.Data.DataColumn columnGranulationProz;
            
            private global::System.Data.DataColumn columnEpithelisierungProz;
            
            private global::System.Data.DataColumn columnFistelnTaschen;
            
            private global::System.Data.DataColumn columnWundbelag;
            
            private global::System.Data.DataColumn columnWundeFreiliegendeStrukturen;
            
            private global::System.Data.DataColumn columnWundsekretion;
            
            private global::System.Data.DataColumn columnSekretionsmenge;
            
            private global::System.Data.DataColumn columnWundgeruch;
            
            private global::System.Data.DataColumn columnWundrandIntakt;
            
            private global::System.Data.DataColumn columnWundrandMazeriert;
            
            private global::System.Data.DataColumn columnWundrandUnterminiertZerklueftet;
            
            private global::System.Data.DataColumn columnWundrandGeroetet;
            
            private global::System.Data.DataColumn columnWundrandHyperkeratose;
            
            private global::System.Data.DataColumn columnWundumgebungIntakt;
            
            private global::System.Data.DataColumn columnWundumgebungTrockenPergamentartig;
            
            private global::System.Data.DataColumn columnWundumgebungEkzemOedemRoetung;
            
            private global::System.Data.DataColumn columnWundumgebungSpannungsblase;
            
            private global::System.Data.DataColumn columnWundumgebung;
            
            private global::System.Data.DataColumn columnWundrandOedemoesWulstig;
            
            private global::System.Data.DataColumn columnWundheilungsphase;
            
            private global::System.Data.DataColumn columnWundgrund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosDataTable() {
                this.TableName = "WundePos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundePosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WundePosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDWundeKopfColumn {
                get {
                    return this.columnIDWundeKopf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ErhebungszeitpunktColumn {
                get {
                    return this.columnErhebungszeitpunkt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StadiumColumn {
                get {
                    return this.columnStadium;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SchmerzqualitaetColumn {
                get {
                    return this.columnSchmerzqualitaet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SchmerzintensitaetColumn {
                get {
                    return this.columnSchmerzintensitaet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NekroseJNColumn {
                get {
                    return this.columnNekroseJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundzustandColumn {
                get {
                    return this.columnWundzustand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LColumn {
                get {
                    return this.columnL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BColumn {
                get {
                    return this.columnB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HColumn {
                get {
                    return this.columnH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ErregerColumn {
                get {
                    return this.columnErreger;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InfektionszeichenColumn {
                get {
                    return this.columnInfektionszeichen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HeilungsverlaufColumn {
                get {
                    return this.columnHeilungsverlauf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HeilungstextColumn {
                get {
                    return this.columnHeilungstext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_ErstelltColumn {
                get {
                    return this.columnIDBenutzer_Erstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_GeaendertColumn {
                get {
                    return this.columnIDBenutzer_Geaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumErstelltColumn {
                get {
                    return this.columnDatumErstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumGeaendertColumn {
                get {
                    return this.columnDatumGeaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GranulationProzColumn {
                get {
                    return this.columnGranulationProz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EpithelisierungProzColumn {
                get {
                    return this.columnEpithelisierungProz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FistelnTaschenColumn {
                get {
                    return this.columnFistelnTaschen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundbelagColumn {
                get {
                    return this.columnWundbelag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundeFreiliegendeStrukturenColumn {
                get {
                    return this.columnWundeFreiliegendeStrukturen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundsekretionColumn {
                get {
                    return this.columnWundsekretion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SekretionsmengeColumn {
                get {
                    return this.columnSekretionsmenge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundgeruchColumn {
                get {
                    return this.columnWundgeruch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandIntaktColumn {
                get {
                    return this.columnWundrandIntakt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandMazeriertColumn {
                get {
                    return this.columnWundrandMazeriert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandUnterminiertZerklueftetColumn {
                get {
                    return this.columnWundrandUnterminiertZerklueftet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandGeroetetColumn {
                get {
                    return this.columnWundrandGeroetet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandHyperkeratoseColumn {
                get {
                    return this.columnWundrandHyperkeratose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundumgebungIntaktColumn {
                get {
                    return this.columnWundumgebungIntakt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundumgebungTrockenPergamentartigColumn {
                get {
                    return this.columnWundumgebungTrockenPergamentartig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundumgebungEkzemOedemRoetungColumn {
                get {
                    return this.columnWundumgebungEkzemOedemRoetung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundumgebungSpannungsblaseColumn {
                get {
                    return this.columnWundumgebungSpannungsblase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundumgebungColumn {
                get {
                    return this.columnWundumgebung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandOedemoesWulstigColumn {
                get {
                    return this.columnWundrandOedemoesWulstig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundheilungsphaseColumn {
                get {
                    return this.columnWundheilungsphase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundgrundColumn {
                get {
                    return this.columnWundgrund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRow this[int index] {
                get {
                    return ((WundePosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosRowChangeEventHandler WundePosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosRowChangeEventHandler WundePosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosRowChangeEventHandler WundePosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosRowChangeEventHandler WundePosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWundePosRow(WundePosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRow AddWundePosRow(
                        System.Guid ID, 
                        System.Guid IDWundeKopf, 
                        System.DateTime Erhebungszeitpunkt, 
                        int Stadium, 
                        string Schmerzqualitaet, 
                        int Schmerzintensitaet, 
                        bool NekroseJN, 
                        string Wundzustand, 
                        double L, 
                        double B, 
                        double H, 
                        string Erreger, 
                        string Infektionszeichen, 
                        int Heilungsverlauf, 
                        string Heilungstext, 
                        System.Guid IDBenutzer_Erstellt, 
                        System.Guid IDBenutzer_Geaendert, 
                        System.DateTime DatumErstellt, 
                        System.DateTime DatumGeaendert, 
                        int GranulationProz, 
                        int EpithelisierungProz, 
                        string FistelnTaschen, 
                        string Wundbelag, 
                        string WundeFreiliegendeStrukturen, 
                        string Wundsekretion, 
                        string Sekretionsmenge, 
                        string Wundgeruch, 
                        bool WundrandIntakt, 
                        bool WundrandMazeriert, 
                        string WundrandUnterminiertZerklueftet, 
                        bool WundrandGeroetet, 
                        bool WundrandHyperkeratose, 
                        bool WundumgebungIntakt, 
                        string WundumgebungTrockenPergamentartig, 
                        string WundumgebungEkzemOedemRoetung, 
                        bool WundumgebungSpannungsblase, 
                        string Wundumgebung, 
                        string WundrandOedemoesWulstig, 
                        string Wundheilungsphase, 
                        string Wundgrund) {
                WundePosRow rowWundePosRow = ((WundePosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDWundeKopf,
                        Erhebungszeitpunkt,
                        Stadium,
                        Schmerzqualitaet,
                        Schmerzintensitaet,
                        NekroseJN,
                        Wundzustand,
                        L,
                        B,
                        H,
                        Erreger,
                        Infektionszeichen,
                        Heilungsverlauf,
                        Heilungstext,
                        IDBenutzer_Erstellt,
                        IDBenutzer_Geaendert,
                        DatumErstellt,
                        DatumGeaendert,
                        GranulationProz,
                        EpithelisierungProz,
                        FistelnTaschen,
                        Wundbelag,
                        WundeFreiliegendeStrukturen,
                        Wundsekretion,
                        Sekretionsmenge,
                        Wundgeruch,
                        WundrandIntakt,
                        WundrandMazeriert,
                        WundrandUnterminiertZerklueftet,
                        WundrandGeroetet,
                        WundrandHyperkeratose,
                        WundumgebungIntakt,
                        WundumgebungTrockenPergamentartig,
                        WundumgebungEkzemOedemRoetung,
                        WundumgebungSpannungsblase,
                        Wundumgebung,
                        WundrandOedemoesWulstig,
                        Wundheilungsphase,
                        Wundgrund};
                rowWundePosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWundePosRow);
                return rowWundePosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRow FindByID(System.Guid ID) {
                return ((WundePosRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WundePosDataTable cln = ((WundePosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WundePosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDWundeKopf = base.Columns["IDWundeKopf"];
                this.columnErhebungszeitpunkt = base.Columns["Erhebungszeitpunkt"];
                this.columnStadium = base.Columns["Stadium"];
                this.columnSchmerzqualitaet = base.Columns["Schmerzqualitaet"];
                this.columnSchmerzintensitaet = base.Columns["Schmerzintensitaet"];
                this.columnNekroseJN = base.Columns["NekroseJN"];
                this.columnWundzustand = base.Columns["Wundzustand"];
                this.columnL = base.Columns["L"];
                this.columnB = base.Columns["B"];
                this.columnH = base.Columns["H"];
                this.columnErreger = base.Columns["Erreger"];
                this.columnInfektionszeichen = base.Columns["Infektionszeichen"];
                this.columnHeilungsverlauf = base.Columns["Heilungsverlauf"];
                this.columnHeilungstext = base.Columns["Heilungstext"];
                this.columnIDBenutzer_Erstellt = base.Columns["IDBenutzer_Erstellt"];
                this.columnIDBenutzer_Geaendert = base.Columns["IDBenutzer_Geaendert"];
                this.columnDatumErstellt = base.Columns["DatumErstellt"];
                this.columnDatumGeaendert = base.Columns["DatumGeaendert"];
                this.columnGranulationProz = base.Columns["GranulationProz"];
                this.columnEpithelisierungProz = base.Columns["EpithelisierungProz"];
                this.columnFistelnTaschen = base.Columns["FistelnTaschen"];
                this.columnWundbelag = base.Columns["Wundbelag"];
                this.columnWundeFreiliegendeStrukturen = base.Columns["WundeFreiliegendeStrukturen"];
                this.columnWundsekretion = base.Columns["Wundsekretion"];
                this.columnSekretionsmenge = base.Columns["Sekretionsmenge"];
                this.columnWundgeruch = base.Columns["Wundgeruch"];
                this.columnWundrandIntakt = base.Columns["WundrandIntakt"];
                this.columnWundrandMazeriert = base.Columns["WundrandMazeriert"];
                this.columnWundrandUnterminiertZerklueftet = base.Columns["WundrandUnterminiertZerklueftet"];
                this.columnWundrandGeroetet = base.Columns["WundrandGeroetet"];
                this.columnWundrandHyperkeratose = base.Columns["WundrandHyperkeratose"];
                this.columnWundumgebungIntakt = base.Columns["WundumgebungIntakt"];
                this.columnWundumgebungTrockenPergamentartig = base.Columns["WundumgebungTrockenPergamentartig"];
                this.columnWundumgebungEkzemOedemRoetung = base.Columns["WundumgebungEkzemOedemRoetung"];
                this.columnWundumgebungSpannungsblase = base.Columns["WundumgebungSpannungsblase"];
                this.columnWundumgebung = base.Columns["Wundumgebung"];
                this.columnWundrandOedemoesWulstig = base.Columns["WundrandOedemoesWulstig"];
                this.columnWundheilungsphase = base.Columns["Wundheilungsphase"];
                this.columnWundgrund = base.Columns["Wundgrund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDWundeKopf = new global::System.Data.DataColumn("IDWundeKopf", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDWundeKopf);
                this.columnErhebungszeitpunkt = new global::System.Data.DataColumn("Erhebungszeitpunkt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErhebungszeitpunkt);
                this.columnStadium = new global::System.Data.DataColumn("Stadium", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStadium);
                this.columnSchmerzqualitaet = new global::System.Data.DataColumn("Schmerzqualitaet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchmerzqualitaet);
                this.columnSchmerzintensitaet = new global::System.Data.DataColumn("Schmerzintensitaet", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchmerzintensitaet);
                this.columnNekroseJN = new global::System.Data.DataColumn("NekroseJN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNekroseJN);
                this.columnWundzustand = new global::System.Data.DataColumn("Wundzustand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundzustand);
                this.columnL = new global::System.Data.DataColumn("L", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL);
                this.columnB = new global::System.Data.DataColumn("B", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB);
                this.columnH = new global::System.Data.DataColumn("H", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH);
                this.columnErreger = new global::System.Data.DataColumn("Erreger", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErreger);
                this.columnInfektionszeichen = new global::System.Data.DataColumn("Infektionszeichen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfektionszeichen);
                this.columnHeilungsverlauf = new global::System.Data.DataColumn("Heilungsverlauf", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeilungsverlauf);
                this.columnHeilungstext = new global::System.Data.DataColumn("Heilungstext", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeilungstext);
                this.columnIDBenutzer_Erstellt = new global::System.Data.DataColumn("IDBenutzer_Erstellt", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Erstellt);
                this.columnIDBenutzer_Geaendert = new global::System.Data.DataColumn("IDBenutzer_Geaendert", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Geaendert);
                this.columnDatumErstellt = new global::System.Data.DataColumn("DatumErstellt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumErstellt);
                this.columnDatumGeaendert = new global::System.Data.DataColumn("DatumGeaendert", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumGeaendert);
                this.columnGranulationProz = new global::System.Data.DataColumn("GranulationProz", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGranulationProz);
                this.columnEpithelisierungProz = new global::System.Data.DataColumn("EpithelisierungProz", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEpithelisierungProz);
                this.columnFistelnTaschen = new global::System.Data.DataColumn("FistelnTaschen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFistelnTaschen);
                this.columnWundbelag = new global::System.Data.DataColumn("Wundbelag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundbelag);
                this.columnWundeFreiliegendeStrukturen = new global::System.Data.DataColumn("WundeFreiliegendeStrukturen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundeFreiliegendeStrukturen);
                this.columnWundsekretion = new global::System.Data.DataColumn("Wundsekretion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundsekretion);
                this.columnSekretionsmenge = new global::System.Data.DataColumn("Sekretionsmenge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSekretionsmenge);
                this.columnWundgeruch = new global::System.Data.DataColumn("Wundgeruch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundgeruch);
                this.columnWundrandIntakt = new global::System.Data.DataColumn("WundrandIntakt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandIntakt);
                this.columnWundrandMazeriert = new global::System.Data.DataColumn("WundrandMazeriert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandMazeriert);
                this.columnWundrandUnterminiertZerklueftet = new global::System.Data.DataColumn("WundrandUnterminiertZerklueftet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandUnterminiertZerklueftet);
                this.columnWundrandGeroetet = new global::System.Data.DataColumn("WundrandGeroetet", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandGeroetet);
                this.columnWundrandHyperkeratose = new global::System.Data.DataColumn("WundrandHyperkeratose", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandHyperkeratose);
                this.columnWundumgebungIntakt = new global::System.Data.DataColumn("WundumgebungIntakt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundumgebungIntakt);
                this.columnWundumgebungTrockenPergamentartig = new global::System.Data.DataColumn("WundumgebungTrockenPergamentartig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundumgebungTrockenPergamentartig);
                this.columnWundumgebungEkzemOedemRoetung = new global::System.Data.DataColumn("WundumgebungEkzemOedemRoetung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundumgebungEkzemOedemRoetung);
                this.columnWundumgebungSpannungsblase = new global::System.Data.DataColumn("WundumgebungSpannungsblase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundumgebungSpannungsblase);
                this.columnWundumgebung = new global::System.Data.DataColumn("Wundumgebung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundumgebung);
                this.columnWundrandOedemoesWulstig = new global::System.Data.DataColumn("WundrandOedemoesWulstig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandOedemoesWulstig);
                this.columnWundheilungsphase = new global::System.Data.DataColumn("Wundheilungsphase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundheilungsphase);
                this.columnWundgrund = new global::System.Data.DataColumn("Wundgrund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundgrund);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnIDWundeKopf.AllowDBNull = false;
                this.columnSchmerzqualitaet.MaxLength = 50;
                this.columnWundzustand.MaxLength = 2048;
                this.columnErreger.MaxLength = 30;
                this.columnInfektionszeichen.MaxLength = 30;
                this.columnHeilungstext.MaxLength = 2048;
                this.columnGranulationProz.AllowDBNull = false;
                this.columnEpithelisierungProz.AllowDBNull = false;
                this.columnFistelnTaschen.AllowDBNull = false;
                this.columnFistelnTaschen.MaxLength = 50;
                this.columnWundbelag.AllowDBNull = false;
                this.columnWundbelag.MaxLength = 50;
                this.columnWundeFreiliegendeStrukturen.AllowDBNull = false;
                this.columnWundeFreiliegendeStrukturen.MaxLength = 50;
                this.columnWundsekretion.AllowDBNull = false;
                this.columnWundsekretion.MaxLength = 50;
                this.columnSekretionsmenge.AllowDBNull = false;
                this.columnSekretionsmenge.MaxLength = 50;
                this.columnWundgeruch.AllowDBNull = false;
                this.columnWundgeruch.MaxLength = 50;
                this.columnWundrandIntakt.AllowDBNull = false;
                this.columnWundrandMazeriert.AllowDBNull = false;
                this.columnWundrandUnterminiertZerklueftet.AllowDBNull = false;
                this.columnWundrandUnterminiertZerklueftet.MaxLength = 50;
                this.columnWundrandGeroetet.AllowDBNull = false;
                this.columnWundrandHyperkeratose.AllowDBNull = false;
                this.columnWundumgebungIntakt.AllowDBNull = false;
                this.columnWundumgebungTrockenPergamentartig.AllowDBNull = false;
                this.columnWundumgebungTrockenPergamentartig.MaxLength = 50;
                this.columnWundumgebungEkzemOedemRoetung.AllowDBNull = false;
                this.columnWundumgebungEkzemOedemRoetung.MaxLength = 50;
                this.columnWundumgebungSpannungsblase.AllowDBNull = false;
                this.columnWundumgebung.AllowDBNull = false;
                this.columnWundumgebung.MaxLength = 50;
                this.columnWundrandOedemoesWulstig.AllowDBNull = false;
                this.columnWundrandOedemoesWulstig.DefaultValue = ((string)("\'\'"));
                this.columnWundrandOedemoesWulstig.MaxLength = 50;
                this.columnWundheilungsphase.AllowDBNull = false;
                this.columnWundheilungsphase.MaxLength = 100;
                this.columnWundgrund.AllowDBNull = false;
                this.columnWundgrund.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRow NewWundePosRow() {
                return ((WundePosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WundePosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WundePosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WundePosRowChanged != null)) {
                    this.WundePosRowChanged(this, new WundePosRowChangeEvent(((WundePosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WundePosRowChanging != null)) {
                    this.WundePosRowChanging(this, new WundePosRowChangeEvent(((WundePosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WundePosRowDeleted != null)) {
                    this.WundePosRowDeleted(this, new WundePosRowChangeEvent(((WundePosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WundePosRowDeleting != null)) {
                    this.WundePosRowDeleting(this, new WundePosRowChangeEvent(((WundePosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWundePosRow(WundePosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsWunde ds = new dsWunde();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WundePosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WundePosBilderDataTable : global::System.Data.TypedTableBase<WundePosBilderRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDWundePos;
            
            private global::System.Data.DataColumn columnBild;
            
            private global::System.Data.DataColumn columnThumbnail;
            
            private global::System.Data.DataColumn columnReihenfolge;
            
            private global::System.Data.DataColumn columndruckenJN;
            
            private global::System.Data.DataColumn columnBeschreibung;
            
            private global::System.Data.DataColumn columnZeitpunktBild;
            
            private global::System.Data.DataColumn columnIDBenutzer_Erstellt;
            
            private global::System.Data.DataColumn columnIDBenutzer_Geaendert;
            
            private global::System.Data.DataColumn columnDatumErstellt;
            
            private global::System.Data.DataColumn columnDatumGeaendert;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderDataTable() {
                this.TableName = "WundePosBilder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundePosBilderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WundePosBilderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDWundePosColumn {
                get {
                    return this.columnIDWundePos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BildColumn {
                get {
                    return this.columnBild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ThumbnailColumn {
                get {
                    return this.columnThumbnail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReihenfolgeColumn {
                get {
                    return this.columnReihenfolge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn druckenJNColumn {
                get {
                    return this.columndruckenJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BeschreibungColumn {
                get {
                    return this.columnBeschreibung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ZeitpunktBildColumn {
                get {
                    return this.columnZeitpunktBild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_ErstelltColumn {
                get {
                    return this.columnIDBenutzer_Erstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_GeaendertColumn {
                get {
                    return this.columnIDBenutzer_Geaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumErstelltColumn {
                get {
                    return this.columnDatumErstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumGeaendertColumn {
                get {
                    return this.columnDatumGeaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRow this[int index] {
                get {
                    return ((WundePosBilderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosBilderRowChangeEventHandler WundePosBilderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosBilderRowChangeEventHandler WundePosBilderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosBilderRowChangeEventHandler WundePosBilderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundePosBilderRowChangeEventHandler WundePosBilderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWundePosBilderRow(WundePosBilderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRow AddWundePosBilderRow(System.Guid ID, System.Guid IDWundePos, byte[] Bild, byte[] Thumbnail, int Reihenfolge, bool druckenJN, string Beschreibung, System.DateTime ZeitpunktBild, System.Guid IDBenutzer_Erstellt, System.Guid IDBenutzer_Geaendert, System.DateTime DatumErstellt, System.DateTime DatumGeaendert) {
                WundePosBilderRow rowWundePosBilderRow = ((WundePosBilderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDWundePos,
                        Bild,
                        Thumbnail,
                        Reihenfolge,
                        druckenJN,
                        Beschreibung,
                        ZeitpunktBild,
                        IDBenutzer_Erstellt,
                        IDBenutzer_Geaendert,
                        DatumErstellt,
                        DatumGeaendert};
                rowWundePosBilderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWundePosBilderRow);
                return rowWundePosBilderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRow FindByID(System.Guid ID) {
                return ((WundePosBilderRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WundePosBilderDataTable cln = ((WundePosBilderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WundePosBilderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDWundePos = base.Columns["IDWundePos"];
                this.columnBild = base.Columns["Bild"];
                this.columnThumbnail = base.Columns["Thumbnail"];
                this.columnReihenfolge = base.Columns["Reihenfolge"];
                this.columndruckenJN = base.Columns["druckenJN"];
                this.columnBeschreibung = base.Columns["Beschreibung"];
                this.columnZeitpunktBild = base.Columns["ZeitpunktBild"];
                this.columnIDBenutzer_Erstellt = base.Columns["IDBenutzer_Erstellt"];
                this.columnIDBenutzer_Geaendert = base.Columns["IDBenutzer_Geaendert"];
                this.columnDatumErstellt = base.Columns["DatumErstellt"];
                this.columnDatumGeaendert = base.Columns["DatumGeaendert"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDWundePos = new global::System.Data.DataColumn("IDWundePos", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDWundePos);
                this.columnBild = new global::System.Data.DataColumn("Bild", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBild);
                this.columnThumbnail = new global::System.Data.DataColumn("Thumbnail", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbnail);
                this.columnReihenfolge = new global::System.Data.DataColumn("Reihenfolge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReihenfolge);
                this.columndruckenJN = new global::System.Data.DataColumn("druckenJN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndruckenJN);
                this.columnBeschreibung = new global::System.Data.DataColumn("Beschreibung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeschreibung);
                this.columnZeitpunktBild = new global::System.Data.DataColumn("ZeitpunktBild", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZeitpunktBild);
                this.columnIDBenutzer_Erstellt = new global::System.Data.DataColumn("IDBenutzer_Erstellt", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Erstellt);
                this.columnIDBenutzer_Geaendert = new global::System.Data.DataColumn("IDBenutzer_Geaendert", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Geaendert);
                this.columnDatumErstellt = new global::System.Data.DataColumn("DatumErstellt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumErstellt);
                this.columnDatumGeaendert = new global::System.Data.DataColumn("DatumGeaendert", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumGeaendert);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnIDWundePos.AllowDBNull = false;
                this.columnBild.AllowDBNull = false;
                this.columnThumbnail.AllowDBNull = false;
                this.columnReihenfolge.AllowDBNull = false;
                this.columndruckenJN.AllowDBNull = false;
                this.columnBeschreibung.AllowDBNull = false;
                this.columnBeschreibung.MaxLength = 255;
                this.columnZeitpunktBild.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRow NewWundePosBilderRow() {
                return ((WundePosBilderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WundePosBilderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WundePosBilderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WundePosBilderRowChanged != null)) {
                    this.WundePosBilderRowChanged(this, new WundePosBilderRowChangeEvent(((WundePosBilderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WundePosBilderRowChanging != null)) {
                    this.WundePosBilderRowChanging(this, new WundePosBilderRowChangeEvent(((WundePosBilderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WundePosBilderRowDeleted != null)) {
                    this.WundePosBilderRowDeleted(this, new WundePosBilderRowChangeEvent(((WundePosBilderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WundePosBilderRowDeleting != null)) {
                    this.WundePosBilderRowDeleting(this, new WundePosBilderRowChangeEvent(((WundePosBilderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWundePosBilderRow(WundePosBilderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsWunde ds = new dsWunde();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WundePosBilderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WundeTherapieDataTable : global::System.Data.TypedTableBase<WundeTherapieRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDWundeKopf;
            
            private global::System.Data.DataColumn columnVerordnetAm;
            
            private global::System.Data.DataColumn columnAbgesetztAm;
            
            private global::System.Data.DataColumn columnTherapie;
            
            private global::System.Data.DataColumn columnAngeordnetVon;
            
            private global::System.Data.DataColumn columnAbgesetztVon;
            
            private global::System.Data.DataColumn columnIDBenutzer_Erstellt;
            
            private global::System.Data.DataColumn columnIDBenutzer_Geaendert;
            
            private global::System.Data.DataColumn columnDatumErstellt;
            
            private global::System.Data.DataColumn columnDatumGeaendert;
            
            private global::System.Data.DataColumn columnDebridement;
            
            private global::System.Data.DataColumn columnReinigung;
            
            private global::System.Data.DataColumn columnWundauflage;
            
            private global::System.Data.DataColumn columnSekundaerverband;
            
            private global::System.Data.DataColumn columnFixierung;
            
            private global::System.Data.DataColumn columnHyperkeratoseentfernung;
            
            private global::System.Data.DataColumn columnHautpflege;
            
            private global::System.Data.DataColumn columnZusatzernährung;
            
            private global::System.Data.DataColumn columnKompression;
            
            private global::System.Data.DataColumn columnFreillagerung;
            
            private global::System.Data.DataColumn columnWundabstrich;
            
            private global::System.Data.DataColumn columnWundrandschutz;
            
            private global::System.Data.DataColumn columnVWIntervall;
            
            private global::System.Data.DataColumn columnVidiertJN;
            
            private global::System.Data.DataColumn columnVidiertVon;
            
            private global::System.Data.DataColumn columnVidiertAm;
            
            private global::System.Data.DataColumn columnVorgeschlagenVon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieDataTable() {
                this.TableName = "WundeTherapie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeTherapieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WundeTherapieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDWundeKopfColumn {
                get {
                    return this.columnIDWundeKopf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VerordnetAmColumn {
                get {
                    return this.columnVerordnetAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AbgesetztAmColumn {
                get {
                    return this.columnAbgesetztAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TherapieColumn {
                get {
                    return this.columnTherapie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AngeordnetVonColumn {
                get {
                    return this.columnAngeordnetVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AbgesetztVonColumn {
                get {
                    return this.columnAbgesetztVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_ErstelltColumn {
                get {
                    return this.columnIDBenutzer_Erstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDBenutzer_GeaendertColumn {
                get {
                    return this.columnIDBenutzer_Geaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumErstelltColumn {
                get {
                    return this.columnDatumErstellt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DatumGeaendertColumn {
                get {
                    return this.columnDatumGeaendert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DebridementColumn {
                get {
                    return this.columnDebridement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReinigungColumn {
                get {
                    return this.columnReinigung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundauflageColumn {
                get {
                    return this.columnWundauflage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SekundaerverbandColumn {
                get {
                    return this.columnSekundaerverband;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FixierungColumn {
                get {
                    return this.columnFixierung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HyperkeratoseentfernungColumn {
                get {
                    return this.columnHyperkeratoseentfernung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HautpflegeColumn {
                get {
                    return this.columnHautpflege;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ZusatzernährungColumn {
                get {
                    return this.columnZusatzernährung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KompressionColumn {
                get {
                    return this.columnKompression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FreillagerungColumn {
                get {
                    return this.columnFreillagerung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundabstrichColumn {
                get {
                    return this.columnWundabstrich;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WundrandschutzColumn {
                get {
                    return this.columnWundrandschutz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VWIntervallColumn {
                get {
                    return this.columnVWIntervall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertJNColumn {
                get {
                    return this.columnVidiertJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertVonColumn {
                get {
                    return this.columnVidiertVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VidiertAmColumn {
                get {
                    return this.columnVidiertAm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VorgeschlagenVonColumn {
                get {
                    return this.columnVorgeschlagenVon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow this[int index] {
                get {
                    return ((WundeTherapieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WundeTherapieRowChangeEventHandler WundeTherapieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWundeTherapieRow(WundeTherapieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow AddWundeTherapieRow(
                        System.Guid ID, 
                        System.Guid IDWundeKopf, 
                        System.DateTime VerordnetAm, 
                        System.DateTime AbgesetztAm, 
                        string Therapie, 
                        string AngeordnetVon, 
                        string AbgesetztVon, 
                        System.Guid IDBenutzer_Erstellt, 
                        System.Guid IDBenutzer_Geaendert, 
                        System.DateTime DatumErstellt, 
                        System.DateTime DatumGeaendert, 
                        string Debridement, 
                        string Reinigung, 
                        string Wundauflage, 
                        string Sekundaerverband, 
                        string Fixierung, 
                        string Hyperkeratoseentfernung, 
                        string Hautpflege, 
                        string Zusatzernährung, 
                        string Kompression, 
                        string Freillagerung, 
                        string Wundabstrich, 
                        string Wundrandschutz, 
                        string VWIntervall, 
                        bool VidiertJN, 
                        string VidiertVon, 
                        System.DateTime VidiertAm, 
                        string VorgeschlagenVon) {
                WundeTherapieRow rowWundeTherapieRow = ((WundeTherapieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDWundeKopf,
                        VerordnetAm,
                        AbgesetztAm,
                        Therapie,
                        AngeordnetVon,
                        AbgesetztVon,
                        IDBenutzer_Erstellt,
                        IDBenutzer_Geaendert,
                        DatumErstellt,
                        DatumGeaendert,
                        Debridement,
                        Reinigung,
                        Wundauflage,
                        Sekundaerverband,
                        Fixierung,
                        Hyperkeratoseentfernung,
                        Hautpflege,
                        Zusatzernährung,
                        Kompression,
                        Freillagerung,
                        Wundabstrich,
                        Wundrandschutz,
                        VWIntervall,
                        VidiertJN,
                        VidiertVon,
                        VidiertAm,
                        VorgeschlagenVon};
                rowWundeTherapieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWundeTherapieRow);
                return rowWundeTherapieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow FindByID(System.Guid ID) {
                return ((WundeTherapieRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WundeTherapieDataTable cln = ((WundeTherapieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WundeTherapieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDWundeKopf = base.Columns["IDWundeKopf"];
                this.columnVerordnetAm = base.Columns["VerordnetAm"];
                this.columnAbgesetztAm = base.Columns["AbgesetztAm"];
                this.columnTherapie = base.Columns["Therapie"];
                this.columnAngeordnetVon = base.Columns["AngeordnetVon"];
                this.columnAbgesetztVon = base.Columns["AbgesetztVon"];
                this.columnIDBenutzer_Erstellt = base.Columns["IDBenutzer_Erstellt"];
                this.columnIDBenutzer_Geaendert = base.Columns["IDBenutzer_Geaendert"];
                this.columnDatumErstellt = base.Columns["DatumErstellt"];
                this.columnDatumGeaendert = base.Columns["DatumGeaendert"];
                this.columnDebridement = base.Columns["Debridement"];
                this.columnReinigung = base.Columns["Reinigung"];
                this.columnWundauflage = base.Columns["Wundauflage"];
                this.columnSekundaerverband = base.Columns["Sekundaerverband"];
                this.columnFixierung = base.Columns["Fixierung"];
                this.columnHyperkeratoseentfernung = base.Columns["Hyperkeratoseentfernung"];
                this.columnHautpflege = base.Columns["Hautpflege"];
                this.columnZusatzernährung = base.Columns["Zusatzernährung"];
                this.columnKompression = base.Columns["Kompression"];
                this.columnFreillagerung = base.Columns["Freillagerung"];
                this.columnWundabstrich = base.Columns["Wundabstrich"];
                this.columnWundrandschutz = base.Columns["Wundrandschutz"];
                this.columnVWIntervall = base.Columns["VWIntervall"];
                this.columnVidiertJN = base.Columns["VidiertJN"];
                this.columnVidiertVon = base.Columns["VidiertVon"];
                this.columnVidiertAm = base.Columns["VidiertAm"];
                this.columnVorgeschlagenVon = base.Columns["VorgeschlagenVon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDWundeKopf = new global::System.Data.DataColumn("IDWundeKopf", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDWundeKopf);
                this.columnVerordnetAm = new global::System.Data.DataColumn("VerordnetAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerordnetAm);
                this.columnAbgesetztAm = new global::System.Data.DataColumn("AbgesetztAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbgesetztAm);
                this.columnTherapie = new global::System.Data.DataColumn("Therapie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTherapie);
                this.columnAngeordnetVon = new global::System.Data.DataColumn("AngeordnetVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAngeordnetVon);
                this.columnAbgesetztVon = new global::System.Data.DataColumn("AbgesetztVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbgesetztVon);
                this.columnIDBenutzer_Erstellt = new global::System.Data.DataColumn("IDBenutzer_Erstellt", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Erstellt);
                this.columnIDBenutzer_Geaendert = new global::System.Data.DataColumn("IDBenutzer_Geaendert", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDBenutzer_Geaendert);
                this.columnDatumErstellt = new global::System.Data.DataColumn("DatumErstellt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumErstellt);
                this.columnDatumGeaendert = new global::System.Data.DataColumn("DatumGeaendert", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumGeaendert);
                this.columnDebridement = new global::System.Data.DataColumn("Debridement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebridement);
                this.columnReinigung = new global::System.Data.DataColumn("Reinigung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinigung);
                this.columnWundauflage = new global::System.Data.DataColumn("Wundauflage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundauflage);
                this.columnSekundaerverband = new global::System.Data.DataColumn("Sekundaerverband", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSekundaerverband);
                this.columnFixierung = new global::System.Data.DataColumn("Fixierung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixierung);
                this.columnHyperkeratoseentfernung = new global::System.Data.DataColumn("Hyperkeratoseentfernung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHyperkeratoseentfernung);
                this.columnHautpflege = new global::System.Data.DataColumn("Hautpflege", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHautpflege);
                this.columnZusatzernährung = new global::System.Data.DataColumn("Zusatzernährung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZusatzernährung);
                this.columnKompression = new global::System.Data.DataColumn("Kompression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKompression);
                this.columnFreillagerung = new global::System.Data.DataColumn("Freillagerung", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreillagerung);
                this.columnWundabstrich = new global::System.Data.DataColumn("Wundabstrich", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundabstrich);
                this.columnWundrandschutz = new global::System.Data.DataColumn("Wundrandschutz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWundrandschutz);
                this.columnVWIntervall = new global::System.Data.DataColumn("VWIntervall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVWIntervall);
                this.columnVidiertJN = new global::System.Data.DataColumn("VidiertJN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertJN);
                this.columnVidiertVon = new global::System.Data.DataColumn("VidiertVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertVon);
                this.columnVidiertAm = new global::System.Data.DataColumn("VidiertAm", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVidiertAm);
                this.columnVorgeschlagenVon = new global::System.Data.DataColumn("VorgeschlagenVon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVorgeschlagenVon);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnIDWundeKopf.AllowDBNull = false;
                this.columnTherapie.MaxLength = 2048;
                this.columnAngeordnetVon.MaxLength = 255;
                this.columnAbgesetztVon.MaxLength = 255;
                this.columnDebridement.AllowDBNull = false;
                this.columnDebridement.MaxLength = 255;
                this.columnReinigung.AllowDBNull = false;
                this.columnReinigung.MaxLength = 255;
                this.columnWundauflage.AllowDBNull = false;
                this.columnWundauflage.MaxLength = 255;
                this.columnSekundaerverband.AllowDBNull = false;
                this.columnSekundaerverband.MaxLength = 255;
                this.columnFixierung.AllowDBNull = false;
                this.columnFixierung.MaxLength = 255;
                this.columnHyperkeratoseentfernung.AllowDBNull = false;
                this.columnHyperkeratoseentfernung.MaxLength = 255;
                this.columnHautpflege.AllowDBNull = false;
                this.columnHautpflege.MaxLength = 255;
                this.columnZusatzernährung.AllowDBNull = false;
                this.columnZusatzernährung.MaxLength = 255;
                this.columnKompression.AllowDBNull = false;
                this.columnKompression.MaxLength = 255;
                this.columnFreillagerung.AllowDBNull = false;
                this.columnFreillagerung.MaxLength = 255;
                this.columnWundabstrich.AllowDBNull = false;
                this.columnWundabstrich.MaxLength = 255;
                this.columnWundrandschutz.AllowDBNull = false;
                this.columnWundrandschutz.MaxLength = 100;
                this.columnVWIntervall.AllowDBNull = false;
                this.columnVWIntervall.MaxLength = 100;
                this.columnVidiertJN.AllowDBNull = false;
                this.columnVidiertVon.AllowDBNull = false;
                this.columnVidiertVon.MaxLength = 100;
                this.columnVorgeschlagenVon.AllowDBNull = false;
                this.columnVorgeschlagenVon.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow NewWundeTherapieRow() {
                return ((WundeTherapieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WundeTherapieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WundeTherapieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WundeTherapieRowChanged != null)) {
                    this.WundeTherapieRowChanged(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WundeTherapieRowChanging != null)) {
                    this.WundeTherapieRowChanging(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WundeTherapieRowDeleted != null)) {
                    this.WundeTherapieRowDeleted(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WundeTherapieRowDeleting != null)) {
                    this.WundeTherapieRowDeleting(this, new WundeTherapieRowChangeEvent(((WundeTherapieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWundeTherapieRow(WundeTherapieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsWunde ds = new dsWunde();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WundeTherapieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WundeKopfRow : global::System.Data.DataRow {
            
            private WundeKopfDataTable tableWundeKopf;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeKopfRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWundeKopf = ((WundeKopfDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableWundeKopf.IDColumn]));
                }
                set {
                    this[this.tableWundeKopf.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDAufenthaltPDx {
                get {
                    return ((global::System.Guid)(this[this.tableWundeKopf.IDAufenthaltPDxColumn]));
                }
                set {
                    this[this.tableWundeKopf.IDAufenthaltPDxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundart {
                get {
                    try {
                        return ((string)(this[this.tableWundeKopf.WundartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Wundart in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.WundartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dekuskala {
                get {
                    try {
                        return ((string)(this[this.tableWundeKopf.DekuskalaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Dekuskala in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.DekuskalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Dekuwert {
                get {
                    try {
                        return ((int)(this[this.tableWundeKopf.DekuwertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Dekuwert in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.DekuwertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte[] ClickedImage {
                get {
                    try {
                        return ((byte[])(this[this.tableWundeKopf.ClickedImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ClickedImage in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.ClickedImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClickedValueX {
                get {
                    try {
                        return ((int)(this[this.tableWundeKopf.ClickedValueXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ClickedValueX in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.ClickedValueXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ClickedValueY {
                get {
                    try {
                        return ((int)(this[this.tableWundeKopf.ClickedValueYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ClickedValueY in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.ClickedValueYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Erstellt {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeKopf.IDBenutzer_ErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Erstellt in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.IDBenutzer_ErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Geaendert {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeKopf.IDBenutzer_GeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Geaendert in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.IDBenutzer_GeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumErstellt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeKopf.DatumErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumErstellt in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.DatumErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumGeaendert {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeKopf.DatumGeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumGeaendert in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.DatumGeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime BekanntSeit {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeKopf.BekanntSeitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte BekanntSeit in Tabelle WundeKopf ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeKopf.BekanntSeitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BisherigeBehandlung {
                get {
                    return ((string)(this[this.tableWundeKopf.BisherigeBehandlungColumn]));
                }
                set {
                    this[this.tableWundeKopf.BisherigeBehandlungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundeEntstanden {
                get {
                    return ((string)(this[this.tableWundeKopf.WundeEntstandenColumn]));
                }
                set {
                    this[this.tableWundeKopf.WundeEntstandenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWundartNull() {
                return this.IsNull(this.tableWundeKopf.WundartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWundartNull() {
                this[this.tableWundeKopf.WundartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDekuskalaNull() {
                return this.IsNull(this.tableWundeKopf.DekuskalaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDekuskalaNull() {
                this[this.tableWundeKopf.DekuskalaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDekuwertNull() {
                return this.IsNull(this.tableWundeKopf.DekuwertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDekuwertNull() {
                this[this.tableWundeKopf.DekuwertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClickedImageNull() {
                return this.IsNull(this.tableWundeKopf.ClickedImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClickedImageNull() {
                this[this.tableWundeKopf.ClickedImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClickedValueXNull() {
                return this.IsNull(this.tableWundeKopf.ClickedValueXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClickedValueXNull() {
                this[this.tableWundeKopf.ClickedValueXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClickedValueYNull() {
                return this.IsNull(this.tableWundeKopf.ClickedValueYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClickedValueYNull() {
                this[this.tableWundeKopf.ClickedValueYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_ErstelltNull() {
                return this.IsNull(this.tableWundeKopf.IDBenutzer_ErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_ErstelltNull() {
                this[this.tableWundeKopf.IDBenutzer_ErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_GeaendertNull() {
                return this.IsNull(this.tableWundeKopf.IDBenutzer_GeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_GeaendertNull() {
                this[this.tableWundeKopf.IDBenutzer_GeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumErstelltNull() {
                return this.IsNull(this.tableWundeKopf.DatumErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumErstelltNull() {
                this[this.tableWundeKopf.DatumErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumGeaendertNull() {
                return this.IsNull(this.tableWundeKopf.DatumGeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumGeaendertNull() {
                this[this.tableWundeKopf.DatumGeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBekanntSeitNull() {
                return this.IsNull(this.tableWundeKopf.BekanntSeitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBekanntSeitNull() {
                this[this.tableWundeKopf.BekanntSeitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WundePosRow : global::System.Data.DataRow {
            
            private WundePosDataTable tableWundePos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundePosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWundePos = ((WundePosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableWundePos.IDColumn]));
                }
                set {
                    this[this.tableWundePos.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDWundeKopf {
                get {
                    return ((global::System.Guid)(this[this.tableWundePos.IDWundeKopfColumn]));
                }
                set {
                    this[this.tableWundePos.IDWundeKopfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Erhebungszeitpunkt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundePos.ErhebungszeitpunktColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Erhebungszeitpunkt in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.ErhebungszeitpunktColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Stadium {
                get {
                    try {
                        return ((int)(this[this.tableWundePos.StadiumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Stadium in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.StadiumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Schmerzqualitaet {
                get {
                    try {
                        return ((string)(this[this.tableWundePos.SchmerzqualitaetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Schmerzqualitaet in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.SchmerzqualitaetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Schmerzintensitaet {
                get {
                    try {
                        return ((int)(this[this.tableWundePos.SchmerzintensitaetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Schmerzintensitaet in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.SchmerzintensitaetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool NekroseJN {
                get {
                    try {
                        return ((bool)(this[this.tableWundePos.NekroseJNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte NekroseJN in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.NekroseJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundzustand {
                get {
                    try {
                        return ((string)(this[this.tableWundePos.WundzustandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Wundzustand in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.WundzustandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double L {
                get {
                    try {
                        return ((double)(this[this.tableWundePos.LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte L in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double B {
                get {
                    try {
                        return ((double)(this[this.tableWundePos.BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte B in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double H {
                get {
                    try {
                        return ((double)(this[this.tableWundePos.HColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte H in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Erreger {
                get {
                    try {
                        return ((string)(this[this.tableWundePos.ErregerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Erreger in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.ErregerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Infektionszeichen {
                get {
                    try {
                        return ((string)(this[this.tableWundePos.InfektionszeichenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Infektionszeichen in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.InfektionszeichenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Heilungsverlauf {
                get {
                    try {
                        return ((int)(this[this.tableWundePos.HeilungsverlaufColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Heilungsverlauf in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.HeilungsverlaufColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Heilungstext {
                get {
                    try {
                        return ((string)(this[this.tableWundePos.HeilungstextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Heilungstext in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.HeilungstextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Erstellt {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundePos.IDBenutzer_ErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Erstellt in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.IDBenutzer_ErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Geaendert {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundePos.IDBenutzer_GeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Geaendert in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.IDBenutzer_GeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumErstellt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundePos.DatumErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumErstellt in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.DatumErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumGeaendert {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundePos.DatumGeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumGeaendert in Tabelle WundePos ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePos.DatumGeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int GranulationProz {
                get {
                    return ((int)(this[this.tableWundePos.GranulationProzColumn]));
                }
                set {
                    this[this.tableWundePos.GranulationProzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EpithelisierungProz {
                get {
                    return ((int)(this[this.tableWundePos.EpithelisierungProzColumn]));
                }
                set {
                    this[this.tableWundePos.EpithelisierungProzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FistelnTaschen {
                get {
                    return ((string)(this[this.tableWundePos.FistelnTaschenColumn]));
                }
                set {
                    this[this.tableWundePos.FistelnTaschenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundbelag {
                get {
                    return ((string)(this[this.tableWundePos.WundbelagColumn]));
                }
                set {
                    this[this.tableWundePos.WundbelagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundeFreiliegendeStrukturen {
                get {
                    return ((string)(this[this.tableWundePos.WundeFreiliegendeStrukturenColumn]));
                }
                set {
                    this[this.tableWundePos.WundeFreiliegendeStrukturenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundsekretion {
                get {
                    return ((string)(this[this.tableWundePos.WundsekretionColumn]));
                }
                set {
                    this[this.tableWundePos.WundsekretionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Sekretionsmenge {
                get {
                    return ((string)(this[this.tableWundePos.SekretionsmengeColumn]));
                }
                set {
                    this[this.tableWundePos.SekretionsmengeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundgeruch {
                get {
                    return ((string)(this[this.tableWundePos.WundgeruchColumn]));
                }
                set {
                    this[this.tableWundePos.WundgeruchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundrandIntakt {
                get {
                    return ((bool)(this[this.tableWundePos.WundrandIntaktColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandIntaktColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundrandMazeriert {
                get {
                    return ((bool)(this[this.tableWundePos.WundrandMazeriertColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandMazeriertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundrandUnterminiertZerklueftet {
                get {
                    return ((string)(this[this.tableWundePos.WundrandUnterminiertZerklueftetColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandUnterminiertZerklueftetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundrandGeroetet {
                get {
                    return ((bool)(this[this.tableWundePos.WundrandGeroetetColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandGeroetetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundrandHyperkeratose {
                get {
                    return ((bool)(this[this.tableWundePos.WundrandHyperkeratoseColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandHyperkeratoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundumgebungIntakt {
                get {
                    return ((bool)(this[this.tableWundePos.WundumgebungIntaktColumn]));
                }
                set {
                    this[this.tableWundePos.WundumgebungIntaktColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundumgebungTrockenPergamentartig {
                get {
                    return ((string)(this[this.tableWundePos.WundumgebungTrockenPergamentartigColumn]));
                }
                set {
                    this[this.tableWundePos.WundumgebungTrockenPergamentartigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundumgebungEkzemOedemRoetung {
                get {
                    return ((string)(this[this.tableWundePos.WundumgebungEkzemOedemRoetungColumn]));
                }
                set {
                    this[this.tableWundePos.WundumgebungEkzemOedemRoetungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WundumgebungSpannungsblase {
                get {
                    return ((bool)(this[this.tableWundePos.WundumgebungSpannungsblaseColumn]));
                }
                set {
                    this[this.tableWundePos.WundumgebungSpannungsblaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundumgebung {
                get {
                    return ((string)(this[this.tableWundePos.WundumgebungColumn]));
                }
                set {
                    this[this.tableWundePos.WundumgebungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WundrandOedemoesWulstig {
                get {
                    return ((string)(this[this.tableWundePos.WundrandOedemoesWulstigColumn]));
                }
                set {
                    this[this.tableWundePos.WundrandOedemoesWulstigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundheilungsphase {
                get {
                    return ((string)(this[this.tableWundePos.WundheilungsphaseColumn]));
                }
                set {
                    this[this.tableWundePos.WundheilungsphaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundgrund {
                get {
                    return ((string)(this[this.tableWundePos.WundgrundColumn]));
                }
                set {
                    this[this.tableWundePos.WundgrundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsErhebungszeitpunktNull() {
                return this.IsNull(this.tableWundePos.ErhebungszeitpunktColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetErhebungszeitpunktNull() {
                this[this.tableWundePos.ErhebungszeitpunktColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStadiumNull() {
                return this.IsNull(this.tableWundePos.StadiumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStadiumNull() {
                this[this.tableWundePos.StadiumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSchmerzqualitaetNull() {
                return this.IsNull(this.tableWundePos.SchmerzqualitaetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSchmerzqualitaetNull() {
                this[this.tableWundePos.SchmerzqualitaetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSchmerzintensitaetNull() {
                return this.IsNull(this.tableWundePos.SchmerzintensitaetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSchmerzintensitaetNull() {
                this[this.tableWundePos.SchmerzintensitaetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNekroseJNNull() {
                return this.IsNull(this.tableWundePos.NekroseJNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNekroseJNNull() {
                this[this.tableWundePos.NekroseJNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWundzustandNull() {
                return this.IsNull(this.tableWundePos.WundzustandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWundzustandNull() {
                this[this.tableWundePos.WundzustandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLNull() {
                return this.IsNull(this.tableWundePos.LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLNull() {
                this[this.tableWundePos.LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBNull() {
                return this.IsNull(this.tableWundePos.BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBNull() {
                this[this.tableWundePos.BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHNull() {
                return this.IsNull(this.tableWundePos.HColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHNull() {
                this[this.tableWundePos.HColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsErregerNull() {
                return this.IsNull(this.tableWundePos.ErregerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetErregerNull() {
                this[this.tableWundePos.ErregerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInfektionszeichenNull() {
                return this.IsNull(this.tableWundePos.InfektionszeichenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInfektionszeichenNull() {
                this[this.tableWundePos.InfektionszeichenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHeilungsverlaufNull() {
                return this.IsNull(this.tableWundePos.HeilungsverlaufColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHeilungsverlaufNull() {
                this[this.tableWundePos.HeilungsverlaufColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHeilungstextNull() {
                return this.IsNull(this.tableWundePos.HeilungstextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHeilungstextNull() {
                this[this.tableWundePos.HeilungstextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_ErstelltNull() {
                return this.IsNull(this.tableWundePos.IDBenutzer_ErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_ErstelltNull() {
                this[this.tableWundePos.IDBenutzer_ErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_GeaendertNull() {
                return this.IsNull(this.tableWundePos.IDBenutzer_GeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_GeaendertNull() {
                this[this.tableWundePos.IDBenutzer_GeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumErstelltNull() {
                return this.IsNull(this.tableWundePos.DatumErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumErstelltNull() {
                this[this.tableWundePos.DatumErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumGeaendertNull() {
                return this.IsNull(this.tableWundePos.DatumGeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumGeaendertNull() {
                this[this.tableWundePos.DatumGeaendertColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WundePosBilderRow : global::System.Data.DataRow {
            
            private WundePosBilderDataTable tableWundePosBilder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundePosBilderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWundePosBilder = ((WundePosBilderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableWundePosBilder.IDColumn]));
                }
                set {
                    this[this.tableWundePosBilder.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDWundePos {
                get {
                    return ((global::System.Guid)(this[this.tableWundePosBilder.IDWundePosColumn]));
                }
                set {
                    this[this.tableWundePosBilder.IDWundePosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte[] Bild {
                get {
                    return ((byte[])(this[this.tableWundePosBilder.BildColumn]));
                }
                set {
                    this[this.tableWundePosBilder.BildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte[] Thumbnail {
                get {
                    return ((byte[])(this[this.tableWundePosBilder.ThumbnailColumn]));
                }
                set {
                    this[this.tableWundePosBilder.ThumbnailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Reihenfolge {
                get {
                    return ((int)(this[this.tableWundePosBilder.ReihenfolgeColumn]));
                }
                set {
                    this[this.tableWundePosBilder.ReihenfolgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool druckenJN {
                get {
                    return ((bool)(this[this.tableWundePosBilder.druckenJNColumn]));
                }
                set {
                    this[this.tableWundePosBilder.druckenJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Beschreibung {
                get {
                    return ((string)(this[this.tableWundePosBilder.BeschreibungColumn]));
                }
                set {
                    this[this.tableWundePosBilder.BeschreibungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ZeitpunktBild {
                get {
                    return ((global::System.DateTime)(this[this.tableWundePosBilder.ZeitpunktBildColumn]));
                }
                set {
                    this[this.tableWundePosBilder.ZeitpunktBildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Erstellt {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundePosBilder.IDBenutzer_ErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Erstellt in Tabelle WundePosBilder ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePosBilder.IDBenutzer_ErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Geaendert {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundePosBilder.IDBenutzer_GeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Geaendert in Tabelle WundePosBilder ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePosBilder.IDBenutzer_GeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumErstellt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundePosBilder.DatumErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumErstellt in Tabelle WundePosBilder ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePosBilder.DatumErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumGeaendert {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundePosBilder.DatumGeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumGeaendert in Tabelle WundePosBilder ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundePosBilder.DatumGeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_ErstelltNull() {
                return this.IsNull(this.tableWundePosBilder.IDBenutzer_ErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_ErstelltNull() {
                this[this.tableWundePosBilder.IDBenutzer_ErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_GeaendertNull() {
                return this.IsNull(this.tableWundePosBilder.IDBenutzer_GeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_GeaendertNull() {
                this[this.tableWundePosBilder.IDBenutzer_GeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumErstelltNull() {
                return this.IsNull(this.tableWundePosBilder.DatumErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumErstelltNull() {
                this[this.tableWundePosBilder.DatumErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumGeaendertNull() {
                return this.IsNull(this.tableWundePosBilder.DatumGeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumGeaendertNull() {
                this[this.tableWundePosBilder.DatumGeaendertColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WundeTherapieRow : global::System.Data.DataRow {
            
            private WundeTherapieDataTable tableWundeTherapie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WundeTherapieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWundeTherapie = ((WundeTherapieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableWundeTherapie.IDColumn]));
                }
                set {
                    this[this.tableWundeTherapie.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDWundeKopf {
                get {
                    return ((global::System.Guid)(this[this.tableWundeTherapie.IDWundeKopfColumn]));
                }
                set {
                    this[this.tableWundeTherapie.IDWundeKopfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime VerordnetAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.VerordnetAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte VerordnetAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.VerordnetAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime AbgesetztAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.AbgesetztAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AbgesetztAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AbgesetztAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Therapie {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.TherapieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Therapie in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.TherapieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AngeordnetVon {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.AngeordnetVonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AngeordnetVon in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AngeordnetVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AbgesetztVon {
                get {
                    try {
                        return ((string)(this[this.tableWundeTherapie.AbgesetztVonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AbgesetztVon in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.AbgesetztVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Erstellt {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Erstellt in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.Guid IDBenutzer_Geaendert {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IDBenutzer_Geaendert in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumErstellt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.DatumErstelltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumErstellt in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.DatumErstelltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DatumGeaendert {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.DatumGeaendertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DatumGeaendert in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.DatumGeaendertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Debridement {
                get {
                    return ((string)(this[this.tableWundeTherapie.DebridementColumn]));
                }
                set {
                    this[this.tableWundeTherapie.DebridementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Reinigung {
                get {
                    return ((string)(this[this.tableWundeTherapie.ReinigungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.ReinigungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundauflage {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundauflageColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundauflageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Sekundaerverband {
                get {
                    return ((string)(this[this.tableWundeTherapie.SekundaerverbandColumn]));
                }
                set {
                    this[this.tableWundeTherapie.SekundaerverbandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fixierung {
                get {
                    return ((string)(this[this.tableWundeTherapie.FixierungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.FixierungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Hyperkeratoseentfernung {
                get {
                    return ((string)(this[this.tableWundeTherapie.HyperkeratoseentfernungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.HyperkeratoseentfernungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Hautpflege {
                get {
                    return ((string)(this[this.tableWundeTherapie.HautpflegeColumn]));
                }
                set {
                    this[this.tableWundeTherapie.HautpflegeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Zusatzernährung {
                get {
                    return ((string)(this[this.tableWundeTherapie.ZusatzernährungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.ZusatzernährungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Kompression {
                get {
                    return ((string)(this[this.tableWundeTherapie.KompressionColumn]));
                }
                set {
                    this[this.tableWundeTherapie.KompressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Freillagerung {
                get {
                    return ((string)(this[this.tableWundeTherapie.FreillagerungColumn]));
                }
                set {
                    this[this.tableWundeTherapie.FreillagerungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundabstrich {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundabstrichColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundabstrichColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Wundrandschutz {
                get {
                    return ((string)(this[this.tableWundeTherapie.WundrandschutzColumn]));
                }
                set {
                    this[this.tableWundeTherapie.WundrandschutzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VWIntervall {
                get {
                    return ((string)(this[this.tableWundeTherapie.VWIntervallColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VWIntervallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool VidiertJN {
                get {
                    return ((bool)(this[this.tableWundeTherapie.VidiertJNColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VidiertJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VidiertVon {
                get {
                    return ((string)(this[this.tableWundeTherapie.VidiertVonColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VidiertVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime VidiertAm {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWundeTherapie.VidiertAmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte VidiertAm in Tabelle WundeTherapie ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableWundeTherapie.VidiertAmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VorgeschlagenVon {
                get {
                    return ((string)(this[this.tableWundeTherapie.VorgeschlagenVonColumn]));
                }
                set {
                    this[this.tableWundeTherapie.VorgeschlagenVonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVerordnetAmNull() {
                return this.IsNull(this.tableWundeTherapie.VerordnetAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVerordnetAmNull() {
                this[this.tableWundeTherapie.VerordnetAmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAbgesetztAmNull() {
                return this.IsNull(this.tableWundeTherapie.AbgesetztAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAbgesetztAmNull() {
                this[this.tableWundeTherapie.AbgesetztAmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTherapieNull() {
                return this.IsNull(this.tableWundeTherapie.TherapieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTherapieNull() {
                this[this.tableWundeTherapie.TherapieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAngeordnetVonNull() {
                return this.IsNull(this.tableWundeTherapie.AngeordnetVonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAngeordnetVonNull() {
                this[this.tableWundeTherapie.AngeordnetVonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAbgesetztVonNull() {
                return this.IsNull(this.tableWundeTherapie.AbgesetztVonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAbgesetztVonNull() {
                this[this.tableWundeTherapie.AbgesetztVonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_ErstelltNull() {
                return this.IsNull(this.tableWundeTherapie.IDBenutzer_ErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_ErstelltNull() {
                this[this.tableWundeTherapie.IDBenutzer_ErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDBenutzer_GeaendertNull() {
                return this.IsNull(this.tableWundeTherapie.IDBenutzer_GeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDBenutzer_GeaendertNull() {
                this[this.tableWundeTherapie.IDBenutzer_GeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumErstelltNull() {
                return this.IsNull(this.tableWundeTherapie.DatumErstelltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumErstelltNull() {
                this[this.tableWundeTherapie.DatumErstelltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDatumGeaendertNull() {
                return this.IsNull(this.tableWundeTherapie.DatumGeaendertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDatumGeaendertNull() {
                this[this.tableWundeTherapie.DatumGeaendertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVidiertAmNull() {
                return this.IsNull(this.tableWundeTherapie.VidiertAmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVidiertAmNull() {
                this[this.tableWundeTherapie.VidiertAmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WundeKopfRowChangeEvent : global::System.EventArgs {
            
            private WundeKopfRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRowChangeEvent(WundeKopfRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeKopfRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WundePosRowChangeEvent : global::System.EventArgs {
            
            private WundePosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRowChangeEvent(WundePosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WundePosBilderRowChangeEvent : global::System.EventArgs {
            
            private WundePosBilderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRowChangeEvent(WundePosBilderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundePosBilderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WundeTherapieRowChangeEvent : global::System.EventArgs {
            
            private WundeTherapieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRowChangeEvent(WundeTherapieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WundeTherapieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591